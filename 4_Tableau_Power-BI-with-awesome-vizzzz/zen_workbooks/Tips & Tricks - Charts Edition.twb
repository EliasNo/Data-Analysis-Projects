<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0525.1210                               -->
<workbook original-version='18.1' source-build='2020.2.1 (20202.20.0525.1210)' source-platform='win' upgrade-extracts='false' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <Heatmap />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition?rev=1.1' id='TipsTricks-ChartsEdition' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
    <color-palette custom='true' name='Magma 20 diverging' type='ordered-diverging'>
      <color>#fcffb2</color>
      <color>#fcdf96</color>
      <color>#fbc17d</color>
      <color>#fba368</color>
      <color>#fa8657</color>
      <color>#f66b4d</color>
      <color>#ed504a</color>
      <color>#e03b50</color>
      <color>#c92d59</color>
      <color>#b02363</color>
      <color>#981d69</color>
      <color>#81176d</color>
      <color>#6b116f</color>
      <color>#57096e</color>
      <color>#43006a</color>
      <color>#300060</color>
      <color>#1e0848</color>
      <color>#110b2d</color>
      <color>#080616</color>
      <color>#000005</color>
    </color-palette>
  </preferences>
  <style>
    <style-rule element='title'>
      <format attr='font-family' value='Tableau Semibold' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select a Region' datatype='string' name='[Region Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;West&quot;'>
        <calculation class='tableau' formula='&quot;West&quot;' />
        <members>
          <member value='&quot;East&quot;' />
          <member value='&quot;South&quot;' />
          <member value='&quot;West&quot;' />
          <member value='&quot;Central&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Life Expectancy vs Health Expenditure Extract' inline='true' name='federated.0fyl1iy05z739a1eonl6v0ss7gzi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Life Expectancy vs Health Expenditure' name='hyper.0yl3oiy0ge0anm1etabap1iuici4'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Data/VizWiz/Life Expectancy vs Health Expenditure.tde' default-settings='yes' sslmode='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='hyper.0yl3oiy0ge0anm1etabap1iuici4' name='Extract' table='[Extract].[Extract]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='hyper.0yl3oiy0ge0anm1etabap1iuici4' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>0</ordinal>
            <family>Sheet1</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>35</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>1</ordinal>
            <family>Sheet1</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>35</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Expenditure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health Expenditure]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Health Expenditure</remote-alias>
            <ordinal>2</ordinal>
            <family>Sheet1</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1269</approx-count>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life Expectancy]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Life Expectancy</remote-alias>
            <ordinal>3</ordinal>
            <family>Sheet1</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1195</approx-count>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <family>Sheet1</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>45</approx-count>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='hyper.0yl3oiy0ge0anm1etabap1iuici4' name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='MLB Beer Prices Extract' inline='true' name='federated.0wrjl5h0i4y1dq18z0hbr10hi7iw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MLB Beer Prices' name='hyper.1eckl700v6dk6x19gvjko0n73j2r'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Data/2018/MLB Beer Prices.hyper' default-settings='yes' sslmode='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='hyper.1eckl700v6dk6x19gvjko0n73j2r' name='Extract' table='[Extract].[Extract]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='hyper.1eckl700v6dk6x19gvjko0n73j2r' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <family>Sheet1</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>5</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>1</ordinal>
            <family>Sheet1</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>31</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nickname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Nickname]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Nickname</remote-alias>
            <ordinal>2</ordinal>
            <family>Sheet1</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>31</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <family>Sheet1</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>29</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>4</ordinal>
            <family>Sheet1</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>28</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Size</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Size]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Size</remote-alias>
            <ordinal>5</ordinal>
            <family>Sheet1</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price per Ounce</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price per Ounce]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Price per Ounce</remote-alias>
            <ordinal>6</ordinal>
            <family>Sheet1</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>43</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='hyper.1eckl700v6dk6x19gvjko0n73j2r' name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Measles Cases Extract' inline='true' name='federated.12a25yn0j3y0lv12hjel90sllvle' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Measles Cases' name='hyper.028oqyn0fwakfh14xww4016hd2ck'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Data/Video Tips/Measles Cases.tde' default-settings='yes' sslmode='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='hyper.028oqyn0fwakfh14xww4016hd2ck' name='Extract' table='[Extract].[Extract]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='hyper.028oqyn0fwakfh14xww4016hd2ck' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Column</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Column]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Column</remote-alias>
            <ordinal>0</ordinal>
            <family>Sheet1</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot field names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot field names]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Pivot field names</remote-alias>
            <ordinal>2</ordinal>
            <family>Pivot</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>49</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot field values</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Pivot field values]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Pivot field values</remote-alias>
            <ordinal>3</ordinal>
            <family>Pivot</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2961</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Row]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Row</remote-alias>
            <ordinal>4</ordinal>
            <family>Sheet1</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEEK</remote-name>
            <remote-type>2</remote-type>
            <local-name>[WEEK]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>WEEK</remote-alias>
            <ordinal>5</ordinal>
            <family>Measles Cases.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>52</approx-count>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>2</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>6</ordinal>
            <family>Measles Cases.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>76</approx-count>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Column]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column caption='State' datatype='string' name='[Pivot field names]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Cases' datatype='integer' name='[Pivot field values]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Row]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Week' datatype='integer' name='[WEEK]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Pivot field values]' palette='Magma 20 diverging' type='interpolated' />
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='hyper.028oqyn0fwakfh14xww4016hd2ck' name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource inline='true' name='Sample - Superstore' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.16zi3wu0rwdtvt17ejsjv0r7x391'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.16zi3wu0rwdtvt17ejsjv0r7x391' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.16zi3wu0rwdtvt17ejsjv0r7x391' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='2018 Sales' datatype='real' name='[2017 Sales (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([Order Date])=2018 THEN [Sales] END' />
      </column>
      <column caption='2017 Sales' datatype='real' name='[Calculation_151785433965207552]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([Order Date])=2017 THEN [Sales] END' />
      </column>
      <column caption='YoY Change' datatype='real' name='[Calculation_151785433966313473]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([2017 Sales (copy)])-SUM([Calculation_151785433965207552])' />
      </column>
      <column caption='Profitable' datatype='boolean' name='[Calculation_151785433980731418]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])&gt;0' />
      </column>
      <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_151785433981038619]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit]&#10;)/SUM([Sales])' />
      </column>
      <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Category]' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[Sample - Superstore].[Ship Mode]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[2017 Sales (copy)]' derivation='Sum' name='[sum:2017 Sales (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_151785433965207552]' derivation='Sum' name='[sum:Calculation_151785433965207552:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_151785433980731418]' derivation='User' name='[usr:Calculation_151785433980731418:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='Migrated Data' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Data/Making table calculations work.twb Files/federated.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/29/2018 07:03:25 PM'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='9994' timestamp-start='2018-05-29 19:03:25.975' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3128</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1318</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1397</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1036</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1036</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>545</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>674</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1999</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1996</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3544</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4372</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Order Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2015</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2018</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2017</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2016</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[Sample - Superstore].[sum:Calculation_151785433965207552:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[Sample - Superstore].[usr:Calculation_151785433967259653:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Sample - Superstore].[pcto:sum:Sales:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Sample - Superstore].[pcto:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Sample - Superstore].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Sample - Superstore].[usr:Calculation_151785433970192395:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Sample - Superstore].[sum:2017 Sales (copy):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Ship Mode:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[usr:Calculation_151785433980731418:nk]' type='shape'>
            <map to='KPI/07.png'>
              <bucket>true</bucket>
            </map>
            <map to='KPI/09.png'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_151785433966657539:nk]' type='palette'>
            <map to='#bab0ac'>
              <bucket>true</bucket>
            </map>
            <map to='#e15759'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='excel-direct.16zi3wu0rwdtvt17ejsjv0r7x391' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Hex Map' inline='true' name='Workout Wednesday Superstore Sales' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore Sales (Excel)' name='excel-direct.0xclwnw1dzkxmh19ewnsx1276i5g'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Hexbin template' name='dataengine.00lvyhu0qb58kt1fobgu815520k0'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Users/andyk/OneDrive/VizWiz/Hexbin template.tde' default-settings='yes' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='CASE [Orders].[State]&#10;WHEN &apos;MA&apos; THEN &apos;Massachusetts&apos;&#10;WHEN &apos;MO&apos; THEN &apos;Missouri&apos;&#10;ELSE [Orders].[State]&#10;END' />
              <expression op='[Extract].[State]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0xclwnw1dzkxmh19ewnsx1276i5g' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:W8400:no:A1:W8400:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='integer' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='string' name='Order Priority' ordinal='3' />
              <column datatype='integer' name='Order Quantity' ordinal='4' />
              <column datatype='real' name='Sales' ordinal='5' />
              <column datatype='real' name='Discount' ordinal='6' />
              <column datatype='string' name='Ship Mode' ordinal='7' />
              <column datatype='real' name='Profit' ordinal='8' />
              <column datatype='real' name='Unit Price' ordinal='9' />
              <column datatype='real' name='Shipping Cost' ordinal='10' />
              <column datatype='string' name='Customer Name' ordinal='11' />
              <column datatype='string' name='City' ordinal='12' />
              <column datatype='string' name='Zip Code' ordinal='13' />
              <column datatype='string' name='State' ordinal='14' />
              <column datatype='string' name='Region' ordinal='15' />
              <column datatype='string' name='Customer Segment' ordinal='16' />
              <column datatype='string' name='Product Category' ordinal='17' />
              <column datatype='string' name='Product Sub-Category' ordinal='18' />
              <column datatype='string' name='Product Name' ordinal='19' />
              <column datatype='string' name='Product Container' ordinal='20' />
              <column datatype='real' name='Product Base Margin' ordinal='21' />
              <column datatype='date' name='Ship Date' ordinal='22' />
            </columns>
          </relation>
          <relation connection='dataengine.00lvyhu0qb58kt1fobgu815520k0' name='Extract' table='[Extract].[Extract]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='CASE [Orders].[State]&#10;WHEN &apos;MA&apos; THEN &apos;Massachusetts&apos;&#10;WHEN &apos;MO&apos; THEN &apos;Missouri&apos;&#10;ELSE [Orders].[State]&#10;END' />
              <expression op='[Extract].[State]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0xclwnw1dzkxmh19ewnsx1276i5g' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:W8400:no:A1:W8400:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='integer' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='string' name='Order Priority' ordinal='3' />
              <column datatype='integer' name='Order Quantity' ordinal='4' />
              <column datatype='real' name='Sales' ordinal='5' />
              <column datatype='real' name='Discount' ordinal='6' />
              <column datatype='string' name='Ship Mode' ordinal='7' />
              <column datatype='real' name='Profit' ordinal='8' />
              <column datatype='real' name='Unit Price' ordinal='9' />
              <column datatype='real' name='Shipping Cost' ordinal='10' />
              <column datatype='string' name='Customer Name' ordinal='11' />
              <column datatype='string' name='City' ordinal='12' />
              <column datatype='string' name='Zip Code' ordinal='13' />
              <column datatype='string' name='State' ordinal='14' />
              <column datatype='string' name='Region' ordinal='15' />
              <column datatype='string' name='Customer Segment' ordinal='16' />
              <column datatype='string' name='Product Category' ordinal='17' />
              <column datatype='string' name='Product Sub-Category' ordinal='18' />
              <column datatype='string' name='Product Name' ordinal='19' />
              <column datatype='string' name='Product Container' ordinal='20' />
              <column datatype='real' name='Product Base Margin' ordinal='21' />
              <column datatype='date' name='Ship Date' ordinal='22' />
            </columns>
          </relation>
          <relation connection='dataengine.00lvyhu0qb58kt1fobgu815520k0' name='Extract' table='[Extract].[Extract]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Abbreviation]' value='[Extract].[Abbreviation]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Column]' value='[Extract].[Column]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Customer Segment]' value='[Orders].[Customer Segment]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Number of Records]' value='[Extract].[Number of Records]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Order Quantity]' value='[Orders].[Order Quantity]' />
          <map key='[Product Base Margin]' value='[Orders].[Product Base Margin]' />
          <map key='[Product Category]' value='[Orders].[Product Category]' />
          <map key='[Product Container]' value='[Orders].[Product Container]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Product Sub-Category]' value='[Orders].[Product Sub-Category]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Row]' value='[Extract].[Row]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State (Extract)]' value='[Extract].[State]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Unit Price]' value='[Orders].[Unit Price]' />
          <map key='[Zip Code]' value='[Orders].[Zip Code]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Quantity</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit Price]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Unit Price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zip Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Zip Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Zip Code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Segment</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Category</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Sub-Category</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Container</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Container]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Container</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Base Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Product Base Margin]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Base Margin</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>22</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:W8400:no:A1:W8400:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Abbreviation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Abbreviation]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Abbreviation</remote-alias>
            <ordinal>23</ordinal>
            <family>Sheet1</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>51</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>51</statistic>
              <statistic aggregation='Median' datatype='string'>&quot;MS&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Column</remote-name>
            <remote-type>4</remote-type>
            <local-name>[Column]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Column</remote-alias>
            <ordinal>24</ordinal>
            <family>Sheet1</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>22</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>315.5</statistic>
              <statistic aggregation='Avg' datatype='real'>6.1862745098039218</statistic>
              <statistic aggregation='Min' datatype='real'>0.5</statistic>
              <statistic aggregation='Max' datatype='real'>11.5</statistic>
              <statistic aggregation='Stdev' datatype='real'>3.0967091957652815</statistic>
              <statistic aggregation='StdevP' datatype='real'>3.0661990015002663</statistic>
              <statistic aggregation='Var' datatype='real'>9.5896078431372551</statistic>
              <statistic aggregation='VarP' datatype='real'>9.401576316801231</statistic>
              <statistic aggregation='Count' datatype='integer'>51</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>2431.25</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>51.0</statistic>
              <statistic aggregation='Avg' datatype='real'>1.0</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
              <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
              <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
              <statistic aggregation='Var' datatype='real'>0.0</statistic>
              <statistic aggregation='VarP' datatype='real'>0.0</statistic>
              <statistic aggregation='Count' datatype='integer'>51</statistic>
              <statistic aggregation='Median' datatype='integer'>1</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>51.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Row]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Row</remote-alias>
            <ordinal>26</ordinal>
            <family>Sheet1</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>196.0</statistic>
              <statistic aggregation='Avg' datatype='real'>3.8431372549019609</statistic>
              <statistic aggregation='Min' datatype='integer'>0</statistic>
              <statistic aggregation='Max' datatype='integer'>8</statistic>
              <statistic aggregation='Stdev' datatype='real'>1.8801334954689557</statistic>
              <statistic aggregation='StdevP' datatype='real'>1.8616095610067327</statistic>
              <statistic aggregation='Var' datatype='real'>3.5349019607843135</statistic>
              <statistic aggregation='VarP' datatype='real'>3.4655901576316803</statistic>
              <statistic aggregation='Count' datatype='integer'>51</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>930.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (Extract)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>27</ordinal>
            <family>Sheet1</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>51</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>51</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profitable?' datatype='boolean' name='[Calculation_151785433979125782]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_2679219574390378498]&gt;0' />
      </column>
      <column caption='Profit Ratio' datatype='real' default-format='*+0%;-0%' name='[Calculation_2679219574390378498]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column caption='Quarterly Profit Ratio' datatype='real' name='[Calculation_2679219574392950787]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [State], DATETRUNC(&apos;quarter&apos;, [Order Date]) : [Calculation_2679219574390378498]}' />
      </column>
      <column caption='Min Offset' datatype='datetime' name='[Calculation_2679219574402801672]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEADD(&apos;quarter&apos;,-5,WINDOW_MIN(MIN(DATETRUNC(&apos;quarter&apos;, [Order Date]))))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[Column]' role='dimension' type='quantitative' />
      <column caption='Max Offset' datatype='datetime' name='[Min Offset (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEADD(&apos;quarter&apos;,5,WINDOW_MAX(MAX(DATETRUNC(&apos;quarter&apos;, [Order Date]))))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column datatype='date' name='[Order Date (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Order Date]' />
      </column>
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Row]' role='dimension' type='quantitative' />
      <column datatype='string' name='[State (Extract)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;MA&quot;' value='Massachusetts' />
          <alias key='&quot;MO&quot;' value='Missouri' />
        </aliases>
      </column>
      <column datatype='string' name='[Zip Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_151785433979125782]' derivation='User' name='[usr:Calculation_151785433979125782:nk]' pivot='key' type='nominal' />
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='Migrated Data' count='-1' enabled='true' units='records'>
        <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Data/Workout Wednesday/Sample - Superstore Sales (Excel).tde' default-settings='yes' sslmode='' update-time='11/30/2017 12:22:12 PM'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Abbreviation]' value='[Extract].[Abbreviation]' />
            <map key='[City]' value='[Extract].[City]' />
            <map key='[Column]' value='[Extract].[Column]' />
            <map key='[Customer Name]' value='[Extract].[Customer Name]' />
            <map key='[Customer Segment]' value='[Extract].[Customer Segment]' />
            <map key='[Discount]' value='[Extract].[Discount]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Order Date (copy)]' value='[Extract].[Order Date (copy)]' />
            <map key='[Order Date]' value='[Extract].[Order Date]' />
            <map key='[Order ID]' value='[Extract].[Order ID]' />
            <map key='[Order Priority]' value='[Extract].[Order Priority]' />
            <map key='[Order Quantity]' value='[Extract].[Order Quantity]' />
            <map key='[Product Base Margin]' value='[Extract].[Product Base Margin]' />
            <map key='[Product Category]' value='[Extract].[Product Category]' />
            <map key='[Product Container]' value='[Extract].[Product Container]' />
            <map key='[Product Name]' value='[Extract].[Product Name]' />
            <map key='[Product Sub-Category]' value='[Extract].[Product Sub-Category]' />
            <map key='[Profit]' value='[Extract].[Profit]' />
            <map key='[Region]' value='[Extract].[Region]' />
            <map key='[Row ID]' value='[Extract].[Row ID]' />
            <map key='[Row]' value='[Extract].[Row]' />
            <map key='[Sales]' value='[Extract].[Sales]' />
            <map key='[Ship Date]' value='[Extract].[Ship Date]' />
            <map key='[Ship Mode]' value='[Extract].[Ship Mode]' />
            <map key='[Shipping Cost]' value='[Extract].[Shipping Cost]' />
            <map key='[State (Extract)]' value='[Extract].[State]' />
            <map key='[State]' value='[Extract].[State1]' />
            <map key='[Unit Price]' value='[Extract].[Unit Price]' />
            <map key='[Zip Code]' value='[Extract].[Zip Code]' />
          </cols>
          <calculations>
            <calculation column='[Order Date (copy)]' formula='[Order Date]' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='8399' timestamp-start='2017-11-30 12:22:12.173' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Abbreviation</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Abbreviation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Abbreviation</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48</approx-count>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1421</approx-count>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Column</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Column]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Column</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>false</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>795</approx-count>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Segment</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>false</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>6</ordinal>
              <family>Extract</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1418</approx-count>
              <contains-null>false</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date (copy)</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date (copy)</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1418</approx-count>
              <contains-null>false</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5496</approx-count>
              <contains-null>false</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Priority</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order Priority]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Priority</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Quantity</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Order Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Quantity</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Base Margin</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Product Base Margin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Base Margin</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Category</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Container</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Container]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Container</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1263</approx-count>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Sub-Category</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7986</approx-count>
              <contains-null>false</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8399</approx-count>
              <contains-null>false</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Row</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Row]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row</remote-alias>
              <ordinal>20</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>21</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8153</approx-count>
              <contains-null>false</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>22</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1450</approx-count>
              <contains-null>false</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>23</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shipping Cost</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Shipping Cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shipping Cost</remote-alias>
              <ordinal>24</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>652</approx-count>
              <contains-null>false</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State (Extract)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>25</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48</approx-count>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State1</remote-alias>
              <ordinal>26</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48</approx-count>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unit Price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Unit Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unit Price</remote-alias>
              <ordinal>27</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>751</approx-count>
              <contains-null>false</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zip Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Zip Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zip Code</remote-alias>
              <ordinal>28</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1626</approx-count>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Calculation_2679219574390378498]' max='1.0' min='-1.0' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          <encoding attr='shape' field='[usr:Calculation_151785433979125782:nk]' type='shape'>
            <map to='Cats/1.PNG'>
              <bucket>false</bucket>
            </map>
            <map to='Cats/4.PNG'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[ZipCode].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='CASE [Orders].[State]&#10;WHEN &apos;MA&apos; THEN &apos;Massachusetts&apos;&#10;WHEN &apos;MO&apos; THEN &apos;Missouri&apos;&#10;ELSE [Orders].[State]&#10;END' />
                    <expression op='[Extract].[State]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.0xclwnw1dzkxmh19ewnsx1276i5g' name='Orders' table='[Orders$]' type='table'>
                  <columns gridOrigin='A1:W8400:no:A1:W8400:0' header='yes' outcome='2'>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='integer' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='string' name='Order Priority' ordinal='3' />
                    <column datatype='integer' name='Order Quantity' ordinal='4' />
                    <column datatype='real' name='Sales' ordinal='5' />
                    <column datatype='real' name='Discount' ordinal='6' />
                    <column datatype='string' name='Ship Mode' ordinal='7' />
                    <column datatype='real' name='Profit' ordinal='8' />
                    <column datatype='real' name='Unit Price' ordinal='9' />
                    <column datatype='real' name='Shipping Cost' ordinal='10' />
                    <column datatype='string' name='Customer Name' ordinal='11' />
                    <column datatype='string' name='City' ordinal='12' />
                    <column datatype='string' name='Zip Code' ordinal='13' />
                    <column datatype='string' name='State' ordinal='14' />
                    <column datatype='string' name='Region' ordinal='15' />
                    <column datatype='string' name='Customer Segment' ordinal='16' />
                    <column datatype='string' name='Product Category' ordinal='17' />
                    <column datatype='string' name='Product Sub-Category' ordinal='18' />
                    <column datatype='string' name='Product Name' ordinal='19' />
                    <column datatype='string' name='Product Container' ordinal='20' />
                    <column datatype='real' name='Product Base Margin' ordinal='21' />
                    <column datatype='date' name='Ship Date' ordinal='22' />
                  </columns>
                </relation>
                <relation connection='dataengine.00lvyhu0qb58kt1fobgu815520k0' name='Extract' table='[Extract].[Extract]' type='table' />
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Car Purchases' inline='true' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Car Purchases' name='textscan.0ygjwzc197bau51fayemb0lm2v6m'>
            <connection class='textscan' directory='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Data/Datasources' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0ygjwzc197bau51fayemb0lm2v6m' name='Car Purchases.csv' table='[Car Purchases#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='Order ID' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='integer' name='Zip Code' ordinal='4' />
            <column datatype='real' name='Latitude' ordinal='5' />
            <column datatype='real' name='Longitude' ordinal='6' />
            <column datatype='string' name='Customer Name' ordinal='7' />
            <column datatype='string' name='Make' ordinal='8' />
            <column datatype='string' name='Model' ordinal='9' />
            <column datatype='integer' name='Model Year' ordinal='10' />
            <column datatype='string' name='Color' ordinal='11' />
            <column datatype='date' name='Purchase Date' ordinal='12' />
            <column datatype='integer' name='Price' ordinal='13' />
            <column datatype='real' name='Discount' ordinal='14' />
            <column datatype='integer' name='Profit' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0ygjwzc197bau51fayemb0lm2v6m' name='Car Purchases.csv' table='[Car Purchases#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='Order ID' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='integer' name='Zip Code' ordinal='4' />
            <column datatype='real' name='Latitude' ordinal='5' />
            <column datatype='real' name='Longitude' ordinal='6' />
            <column datatype='string' name='Customer Name' ordinal='7' />
            <column datatype='string' name='Make' ordinal='8' />
            <column datatype='string' name='Model' ordinal='9' />
            <column datatype='integer' name='Model Year' ordinal='10' />
            <column datatype='string' name='Color' ordinal='11' />
            <column datatype='date' name='Purchase Date' ordinal='12' />
            <column datatype='integer' name='Price' ordinal='13' />
            <column datatype='real' name='Discount' ordinal='14' />
            <column datatype='integer' name='Profit' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zip Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zip Code]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>Zip Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Model Year]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>Model Year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Color</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Color]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>Color</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purchase Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Purchase Date]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>Purchase Date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Car Purchases.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='First Purchase Date' datatype='date' name='[Calculation_151785433974398992]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ FIXED [Color (group)] : MIN([Purchase Date]) }' />
      </column>
      <column aggregation='Sum' caption='Elapsed Months' datatype='integer' name='[Calculation_151785433974505489]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;month&apos;,[Calculation_151785433974398992],[Purchase Date])' />
      </column>
      <column caption='Highlight region' datatype='boolean' name='[Calculation_151785433975320594]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Region Parameter]=[State (group)]' />
      </column>
      <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='tableau' formula='[City]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Colors' datatype='string' name='[Color (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Color]' new-bin='true'>
          <bin default-name='false' value='&quot;Black&quot;'>
            <value>&quot;Maroon&quot;</value>
            <value>&quot;Mauv&quot;</value>
            <value>&quot;Purple&quot;</value>
            <value>&quot;Violet&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Blue&quot;'>
            <value>&quot;Aquamarine&quot;</value>
            <value>&quot;Blue&quot;</value>
            <value>&quot;Teal&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Green&quot;'>
            <value>&quot;Green&quot;</value>
            <value>&quot;Turquoise&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Red&quot;'>
            <value>&quot;Crimson&quot;</value>
            <value>&quot;Fuscia&quot;</value>
            <value>&quot;Pink&quot;</value>
            <value>&quot;Red&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Yellow&quot;'>
            <value>&quot;Goldenrod&quot;</value>
            <value>&quot;Indigo&quot;</value>
            <value>&quot;Khaki&quot;</value>
            <value>&quot;Orange&quot;</value>
            <value>&quot;Puce&quot;</value>
            <value>&quot;Yellow&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' hidden='true' name='[Color]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
      <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
      <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State]' default='&quot;Central&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;East&quot;'>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;District of Columbia&quot;</value>
            <value>&quot;Indiana&quot;</value>
            <value>&quot;Kentucky&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;Michigan&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;New Jersey&quot;</value>
            <value>&quot;New York&quot;</value>
            <value>&quot;Ohio&quot;</value>
            <value>&quot;Pennsylvania&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;Vermont&quot;</value>
            <value>&quot;Virginia&quot;</value>
            <value>&quot;West Virginia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;Florida&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Louisiana&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;North Carolina&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;Tennessee&quot;</value>
            <value>&quot;Texas&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West&quot;'>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;California&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;Washington&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' default-format='*00000' name='[Zip Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_151785433975320594]' derivation='None' name='[none:Calculation_151785433975320594:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Price]' derivation='Sum' name='[rank:sum:Price:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Price]' derivation='Sum' name='[rank:sum:Price:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Price]' derivation='Sum' name='[rank:sum:Price:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Price]' derivation='Sum' name='[rank:sum:Price:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Sum' name='[win:sum:Price:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-12' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='Migrated Data' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Data/Tips &amp; Tricks Webinar/Car Purchases.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/15/2018 04:40:04 PM'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='7303' timestamp-start='2018-10-15 16:40:04.273' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1267</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>2</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>3</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>495</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zip Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Zip Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zip Code</remote-alias>
              <ordinal>4</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1866</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>5</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1298</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>6</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1300</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>7</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7303</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Make</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Make]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Make</remote-alias>
              <ordinal>8</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>57</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Model</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Model]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Model</remote-alias>
              <ordinal>9</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>818</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Model Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Model Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Model Year</remote-alias>
              <ordinal>10</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Color</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Color]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Color</remote-alias>
              <ordinal>11</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Purchase Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Purchase Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Purchase Date</remote-alias>
              <ordinal>12</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1691</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Price</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Price</remote-alias>
              <ordinal>13</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5958</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>14</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>91</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>15</ordinal>
              <family>Car Purchases.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5649</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_151785433975320594:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[win:sum:Price:qk:4]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[avg:Price:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[rank:sum:Price:qk:1]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[rank:sum:Price:qk:2]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[rank:sum:Price:qk:3]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[rank:sum:Price:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[State (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Color (group)]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Black&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Blue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Yellow&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Region' datatype='string' name='[Region Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;West&quot;'>
          <calculation class='tableau' formula='&quot;West&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.0ygjwzc197bau51fayemb0lm2v6m' name='Car Purchases.csv' table='[Car Purchases#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='integer' name='Order ID' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='integer' name='Zip Code' ordinal='4' />
                  <column datatype='real' name='Latitude' ordinal='5' />
                  <column datatype='real' name='Longitude' ordinal='6' />
                  <column datatype='string' name='Customer Name' ordinal='7' />
                  <column datatype='string' name='Make' ordinal='8' />
                  <column datatype='string' name='Model' ordinal='9' />
                  <column datatype='integer' name='Model Year' ordinal='10' />
                  <column datatype='string' name='Color' ordinal='11' />
                  <column datatype='date' name='Purchase Date' ordinal='12' />
                  <column datatype='integer' name='Price' ordinal='13' />
                  <column datatype='real' name='Discount' ordinal='14' />
                  <column datatype='integer' name='Profit' ordinal='15' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Five Year Cancer Survival Rates in USA Extract' inline='true' name='federated.106g7yy0yvz4iw1ghef0r16vljmb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Five Year Cancer Survival Rates in USA' name='hyper.01sv8ne03km4gk1bd2zkb1qmcctx'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Users/andyk/OneDrive/VizWiz/Makeover Monday/Data/2018/Five Year Cancer Survival Rates in USA.hyper' default-settings='yes' sslmode='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='hyper.01sv8ne03km4gk1bd2zkb1qmcctx' name='Extract' table='[Extract].[Extract]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='hyper.01sv8ne03km4gk1bd2zkb1qmcctx' name='Extract' table='[Extract].[Extract]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Survival Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Survival Rate]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Survival Rate</remote-alias>
            <ordinal>0</ordinal>
            <family>Five Year Cancer Survival Rates in USA.csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>716</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <family>Five Year Cancer Survival Rates in USA.csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>13</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Race</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Race]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Race</remote-alias>
            <ordinal>2</ordinal>
            <family>Five Year Cancer Survival Rates in USA.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>3</ordinal>
            <family>Five Year Cancer Survival Rates in USA.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cancer Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Cancer Type]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Cancer Type</remote-alias>
            <ordinal>4</ordinal>
            <family>Five Year Cancer Survival Rates in USA.csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Mortality Rate' datatype='real' name='[Calculation_151785433970638860]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1-[Survival Rate]' />
      </column>
      <column caption='2013 Survival Rate' datatype='real' name='[Calculation_151785433971154959]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Year]=2013 then [Survival Rate] END' />
      </column>
      <column caption='Columns' datatype='real' name='[Calculation_475974238064123913]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='(index()-1)%(round(sqrt(size())))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rows' datatype='integer' name='[Calculation_475974238064164874]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='int( (index()-1)/(round(sqrt(size()))))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Use Me' datatype='string' name='[Gender (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Gender]' />
      </column>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Survival Rate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_151785433970638860]' derivation='Sum' name='[sum:Calculation_151785433970638860:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Survival Rate]' derivation='Sum' name='[sum:Survival Rate:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='Migrated Data' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Data/Tips &amp; Tricks Webinar/Five Year Cancer Survival Rates in USA Extract.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/15/2018 04:40:21 PM'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1666' timestamp-start='2018-10-15 16:40:21.731' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Survival Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Survival Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Survival Rate</remote-alias>
              <ordinal>0</ordinal>
              <family>Five Year Cancer Survival Rates in USA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>671</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>1</ordinal>
              <family>Five Year Cancer Survival Rates in USA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Race</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Race]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Race</remote-alias>
              <ordinal>2</ordinal>
              <family>Five Year Cancer Survival Rates in USA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>3</ordinal>
              <family>Five Year Cancer Survival Rates in USA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cancer Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Cancer Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cancer Type</remote-alias>
              <ordinal>4</ordinal>
              <family>Five Year Cancer Survival Rates in USA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;females&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;total&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;males&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.106g7yy0yvz4iw1ghef0r16vljmb].[sum:Calculation_475974238065082380:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.106g7yy0yvz4iw1ghef0r16vljmb].[sum:Calculation_151785433970638860:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.106g7yy0yvz4iw1ghef0r16vljmb].[sum:Survival Rate:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='hyper.01sv8ne03km4gk1bd2zkb1qmcctx' name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Rat Sightings' inline='true' name='federated.1itr43q1qo4wyh15x1x5o1biy42h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Rat Sightings' name='excel-direct.0yt7gdj1pinpqi1c26qge14i5c20'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0yt7gdj1pinpqi1c26qge14i5c20' name='Rat_Sightings' table='[Rat_Sightings$]' type='table'>
          <columns gridOrigin='A1:AB10001:no:A1:AB10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Address Type' ordinal='0' />
            <column datatype='string' name='Agency Name' ordinal='1' />
            <column datatype='string' name='Agency' ordinal='2' />
            <column datatype='string' name='Borough' ordinal='3' />
            <column datatype='string' name='City' ordinal='4' />
            <column datatype='datetime' name='Closed Date' ordinal='5' />
            <column datatype='string' name='Community Board' ordinal='6' />
            <column datatype='string' name='Complaint Type' ordinal='7' />
            <column datatype='datetime' name='Created Date' ordinal='8' />
            <column datatype='string' name='Cross Street 1' ordinal='9' />
            <column datatype='string' name='Cross Street 2' ordinal='10' />
            <column datatype='string' name='Descriptor' ordinal='11' />
            <column datatype='datetime' name='Due Date' ordinal='12' />
            <column datatype='string' name='Facility Type' ordinal='13' />
            <column datatype='string' name='Incident Address' ordinal='14' />
            <column datatype='integer' name='Incident Zip' ordinal='15' />
            <column datatype='string' name='Intersection Street 1' ordinal='16' />
            <column datatype='string' name='Intersection Street 2' ordinal='17' />
            <column datatype='string' name='Landmark' ordinal='18' />
            <column datatype='real' name='Latitude' ordinal='19' />
            <column datatype='string' name='Location Type' ordinal='20' />
            <column datatype='real' name='Longitude' ordinal='21' />
            <column datatype='string' name='Park Borough' ordinal='22' />
            <column datatype='string' name='Park Facility Name' ordinal='23' />
            <column datatype='string' name='Resolution Action Updated Date' ordinal='24' />
            <column datatype='string' name='Status' ordinal='25' />
            <column datatype='string' name='Street Name' ordinal='26' />
            <column datatype='integer' name='Unique Key' ordinal='27' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0yt7gdj1pinpqi1c26qge14i5c20' name='Rat_Sightings' table='[Rat_Sightings$]' type='table'>
          <columns gridOrigin='A1:AB10001:no:A1:AB10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Address Type' ordinal='0' />
            <column datatype='string' name='Agency Name' ordinal='1' />
            <column datatype='string' name='Agency' ordinal='2' />
            <column datatype='string' name='Borough' ordinal='3' />
            <column datatype='string' name='City' ordinal='4' />
            <column datatype='datetime' name='Closed Date' ordinal='5' />
            <column datatype='string' name='Community Board' ordinal='6' />
            <column datatype='string' name='Complaint Type' ordinal='7' />
            <column datatype='datetime' name='Created Date' ordinal='8' />
            <column datatype='string' name='Cross Street 1' ordinal='9' />
            <column datatype='string' name='Cross Street 2' ordinal='10' />
            <column datatype='string' name='Descriptor' ordinal='11' />
            <column datatype='datetime' name='Due Date' ordinal='12' />
            <column datatype='string' name='Facility Type' ordinal='13' />
            <column datatype='string' name='Incident Address' ordinal='14' />
            <column datatype='integer' name='Incident Zip' ordinal='15' />
            <column datatype='string' name='Intersection Street 1' ordinal='16' />
            <column datatype='string' name='Intersection Street 2' ordinal='17' />
            <column datatype='string' name='Landmark' ordinal='18' />
            <column datatype='real' name='Latitude' ordinal='19' />
            <column datatype='string' name='Location Type' ordinal='20' />
            <column datatype='real' name='Longitude' ordinal='21' />
            <column datatype='string' name='Park Borough' ordinal='22' />
            <column datatype='string' name='Park Facility Name' ordinal='23' />
            <column datatype='string' name='Resolution Action Updated Date' ordinal='24' />
            <column datatype='string' name='Status' ordinal='25' />
            <column datatype='string' name='Street Name' ordinal='26' />
            <column datatype='integer' name='Unique Key' ordinal='27' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Address Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Address Type]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Address Type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Agency Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Agency Name]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Agency Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Agency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Agency]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Agency</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Borough</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Borough]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Borough</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Closed Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Closed Date]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Closed Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Community Board</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Community Board]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Community Board</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Complaint Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Complaint Type]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Complaint Type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Created Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Created Date]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Created Date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cross Street 1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cross Street 1]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Cross Street 1</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cross Street 2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cross Street 2]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Cross Street 2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Descriptor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Descriptor]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Descriptor</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Due Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Due Date]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Due Date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Facility Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Facility Type]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Facility Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident Address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Incident Address]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Incident Address</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident Zip</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Incident Zip]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Incident Zip</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Intersection Street 1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Intersection Street 1]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Intersection Street 1</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Intersection Street 2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Intersection Street 2]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Intersection Street 2</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Landmark</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Landmark]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Landmark</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location Type]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Location Type</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Park Borough</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Park Borough]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Park Borough</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Park Facility Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Park Facility Name]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Park Facility Name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Resolution Action Updated Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Resolution Action Updated Date]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Resolution Action Updated Date</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Street Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Street Name]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Street Name</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unique Key</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unique Key]</local-name>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias>Unique Key</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Rat_Sightings]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AB10001:no:A1:AB10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Count Zip' datatype='integer' name='[Calculation_20195882067877897]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Incident Zip] : SUM([Number of Records]) }' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' default-format='*00000' name='[Incident Zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Unique Key]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='Migrated Data' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Data/Datasources/Rat Sightings.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/14/2018 06:20:19 PM'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='114507' timestamp-start='2018-10-14 18:20:19.277' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Address Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Address Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Address Type</remote-alias>
              <ordinal>0</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Agency Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Agency Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Agency Name</remote-alias>
              <ordinal>1</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Agency</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Agency]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Agency</remote-alias>
              <ordinal>2</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Borough</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Borough]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Borough</remote-alias>
              <ordinal>3</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>4</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>237</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Closed Date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Closed Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Closed Date</remote-alias>
              <ordinal>5</ordinal>
              <family>Rat_Sightings</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>9978</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Community Board</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Community Board]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Community Board</remote-alias>
              <ordinal>6</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>73</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Complaint Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Complaint Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Complaint Type</remote-alias>
              <ordinal>7</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Created Date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Created Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Created Date</remote-alias>
              <ordinal>8</ordinal>
              <family>Rat_Sightings</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>10922</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cross Street 1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Cross Street 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cross Street 1</remote-alias>
              <ordinal>9</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4958</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cross Street 2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Cross Street 2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cross Street 2</remote-alias>
              <ordinal>10</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4944</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Descriptor</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Descriptor]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Descriptor</remote-alias>
              <ordinal>11</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Due Date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Due Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Due Date</remote-alias>
              <ordinal>12</ordinal>
              <family>Rat_Sightings</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>114507</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Facility Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Facility Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Facility Type</remote-alias>
              <ordinal>13</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Incident Address</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Incident Address]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Incident Address</remote-alias>
              <ordinal>14</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>41247</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Incident Zip</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Incident Zip]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Incident Zip</remote-alias>
              <ordinal>15</ordinal>
              <family>Rat_Sightings</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>331</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Intersection Street 1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Intersection Street 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Intersection Street 1</remote-alias>
              <ordinal>16</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1970</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Intersection Street 2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Intersection Street 2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Intersection Street 2</remote-alias>
              <ordinal>17</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5044</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Landmark</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Landmark]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Landmark</remote-alias>
              <ordinal>18</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>19</ordinal>
              <family>Rat_Sightings</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46878</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Location Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location Type</remote-alias>
              <ordinal>20</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>21</ordinal>
              <family>Rat_Sightings</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46878</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Park Borough</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Park Borough]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Park Borough</remote-alias>
              <ordinal>22</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Park Facility Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Park Facility Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Park Facility Name</remote-alias>
              <ordinal>23</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Resolution Action Updated Date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Resolution Action Updated Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Resolution Action Updated Date</remote-alias>
              <ordinal>24</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15791</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Status</remote-alias>
              <ordinal>25</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Street Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Street Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Street Name</remote-alias>
              <ordinal>26</ordinal>
              <family>Rat_Sightings</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7813</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unique Key</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Unique Key]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unique Key</remote-alias>
              <ordinal>27</ordinal>
              <family>Rat_Sightings</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>114507</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='excel-direct.0yt7gdj1pinpqi1c26qge14i5c20' name='Rat_Sightings' table='[Rat_Sightings$]' type='table'>
                <columns gridOrigin='A1:AB10001:no:A1:AB10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='Address Type' ordinal='0' />
                  <column datatype='string' name='Agency Name' ordinal='1' />
                  <column datatype='string' name='Agency' ordinal='2' />
                  <column datatype='string' name='Borough' ordinal='3' />
                  <column datatype='string' name='City' ordinal='4' />
                  <column datatype='datetime' name='Closed Date' ordinal='5' />
                  <column datatype='string' name='Community Board' ordinal='6' />
                  <column datatype='string' name='Complaint Type' ordinal='7' />
                  <column datatype='datetime' name='Created Date' ordinal='8' />
                  <column datatype='string' name='Cross Street 1' ordinal='9' />
                  <column datatype='string' name='Cross Street 2' ordinal='10' />
                  <column datatype='string' name='Descriptor' ordinal='11' />
                  <column datatype='datetime' name='Due Date' ordinal='12' />
                  <column datatype='string' name='Facility Type' ordinal='13' />
                  <column datatype='string' name='Incident Address' ordinal='14' />
                  <column datatype='integer' name='Incident Zip' ordinal='15' />
                  <column datatype='string' name='Intersection Street 1' ordinal='16' />
                  <column datatype='string' name='Intersection Street 2' ordinal='17' />
                  <column datatype='string' name='Landmark' ordinal='18' />
                  <column datatype='real' name='Latitude' ordinal='19' />
                  <column datatype='string' name='Location Type' ordinal='20' />
                  <column datatype='real' name='Longitude' ordinal='21' />
                  <column datatype='string' name='Park Borough' ordinal='22' />
                  <column datatype='string' name='Park Facility Name' ordinal='23' />
                  <column datatype='string' name='Resolution Action Updated Date' ordinal='24' />
                  <column datatype='string' name='Status' ordinal='25' />
                  <column datatype='string' name='Street Name' ordinal='26' />
                  <column datatype='integer' name='Unique Key' ordinal='27' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Top 100 IPOs' inline='true' name='federated.1pvzafn150cndk172zsld170gnoh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Top 100 IPOs' name='textscan.0abktkj1lm5iav1bavab00w7f1bk'>
            <connection class='textscan' directory='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Data/Datasources' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0abktkj1lm5iav1bavab00w7f1bk' name='Top 100 IPOs.csv' table='[Top 100 IPOs#csv]' type='table'>
          <columns character-set='UTF-16LE' header='yes' locale='en_GB' separator='&#9;'>
            <column datatype='string' name='Company Name (Full)' ordinal='0' />
            <column datatype='string' name='Company Name' ordinal='1' />
            <column datatype='real' name='Net Income (2008)' ordinal='2' />
            <column datatype='real' name='Revenue (2008)' ordinal='3' />
            <column datatype='string' name='Growth Group' ordinal='4' />
            <column datatype='real' name='Revenue (Inflation Adjusted)' ordinal='5' />
            <column datatype='string' name='Segment' ordinal='6' />
            <column datatype='string' name='Ticker' ordinal='7' />
            <column datatype='integer' name='Year Founded' ordinal='8' />
            <column datatype='integer' name='Year' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0abktkj1lm5iav1bavab00w7f1bk' name='Top 100 IPOs.csv' table='[Top 100 IPOs#csv]' type='table'>
          <columns character-set='UTF-16LE' header='yes' locale='en_GB' separator='&#9;'>
            <column datatype='string' name='Company Name (Full)' ordinal='0' />
            <column datatype='string' name='Company Name' ordinal='1' />
            <column datatype='real' name='Net Income (2008)' ordinal='2' />
            <column datatype='real' name='Revenue (2008)' ordinal='3' />
            <column datatype='string' name='Growth Group' ordinal='4' />
            <column datatype='real' name='Revenue (Inflation Adjusted)' ordinal='5' />
            <column datatype='string' name='Segment' ordinal='6' />
            <column datatype='string' name='Ticker' ordinal='7' />
            <column datatype='integer' name='Year Founded' ordinal='8' />
            <column datatype='integer' name='Year' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Top 100 IPOs.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-16LE&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company Name (Full)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company Name (Full)]</local-name>
            <parent-name>[Top 100 IPOs.csv]</parent-name>
            <remote-alias>Company Name (Full)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company Name]</local-name>
            <parent-name>[Top 100 IPOs.csv]</parent-name>
            <remote-alias>Company Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net Income (2008)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Net Income (2008)]</local-name>
            <parent-name>[Top 100 IPOs.csv]</parent-name>
            <remote-alias>Net Income (2008)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Revenue (2008)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Revenue (2008)]</local-name>
            <parent-name>[Top 100 IPOs.csv]</parent-name>
            <remote-alias>Revenue (2008)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Growth Group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Growth Group]</local-name>
            <parent-name>[Top 100 IPOs.csv]</parent-name>
            <remote-alias>Growth Group</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Revenue (Inflation Adjusted)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Revenue (Inflation Adjusted)]</local-name>
            <parent-name>[Top 100 IPOs.csv]</parent-name>
            <remote-alias>Revenue (Inflation Adjusted)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Top 100 IPOs.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ticker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ticker]</local-name>
            <parent-name>[Top 100 IPOs.csv]</parent-name>
            <remote-alias>Ticker</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year Founded</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year Founded]</local-name>
            <parent-name>[Top 100 IPOs.csv]</parent-name>
            <remote-alias>Year Founded</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Top 100 IPOs.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' caption='years since ipo' datatype='integer' name='[Calculation_151785433976746004]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Year]-[Year Founded]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year Founded]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='Migrated Data' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Data/Tips &amp; Tricks Webinar/Top 100 IPOs.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/15/2018 04:40:47 PM'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='930' timestamp-start='2018-10-15 16:40:47.485' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Company Name (Full)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company Name (Full)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company Name (Full)</remote-alias>
              <ordinal>0</ordinal>
              <family>Top 100 IPOs.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company Name</remote-alias>
              <ordinal>1</ordinal>
              <family>Top 100 IPOs.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Net Income (2008)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Net Income (2008)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Net Income (2008)</remote-alias>
              <ordinal>2</ordinal>
              <family>Top 100 IPOs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Revenue (2008)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Revenue (2008)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Revenue (2008)</remote-alias>
              <ordinal>3</ordinal>
              <family>Top 100 IPOs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Growth Group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Growth Group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Growth Group</remote-alias>
              <ordinal>4</ordinal>
              <family>Top 100 IPOs.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Revenue (Inflation Adjusted)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Revenue (Inflation Adjusted)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Revenue (Inflation Adjusted)</remote-alias>
              <ordinal>5</ordinal>
              <family>Top 100 IPOs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>542</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>6</ordinal>
              <family>Top 100 IPOs.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ticker</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ticker]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ticker</remote-alias>
              <ordinal>7</ordinal>
              <family>Top 100 IPOs.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year Founded</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year Founded]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year Founded</remote-alias>
              <ordinal>8</ordinal>
              <family>Top 100 IPOs.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>9</ordinal>
              <family>Top 100 IPOs.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.0abktkj1lm5iav1bavab00w7f1bk' name='Top 100 IPOs.csv' table='[Top 100 IPOs#csv]' type='table'>
                <columns character-set='UTF-16LE' header='yes' locale='en_GB' separator='&#9;'>
                  <column datatype='string' name='Company Name (Full)' ordinal='0' />
                  <column datatype='string' name='Company Name' ordinal='1' />
                  <column datatype='real' name='Net Income (2008)' ordinal='2' />
                  <column datatype='real' name='Revenue (2008)' ordinal='3' />
                  <column datatype='string' name='Growth Group' ordinal='4' />
                  <column datatype='real' name='Revenue (Inflation Adjusted)' ordinal='5' />
                  <column datatype='string' name='Segment' ordinal='6' />
                  <column datatype='string' name='Ticker' ordinal='7' />
                  <column datatype='integer' name='Year Founded' ordinal='8' />
                  <column datatype='integer' name='Year' ordinal='9' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Obesity vs. Education' inline='true' name='federated.1qp3t760n9ryc00zr15730ttix9k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='obesity_education' name='excel-direct.0r52glh0e5ij2915qu9qv1ffqc2f'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0r52glh0e5ij2915qu9qv1ffqc2f' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D53:no:A1:D53:0' header='yes' outcome='2'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='real' name='OBESITY %' ordinal='1' />
            <column datatype='real' name='BA OR HIGHER' ordinal='2' />
            <column datatype='string' name='State Abbr' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0r52glh0e5ij2915qu9qv1ffqc2f' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D53:no:A1:D53:0' header='yes' outcome='2'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='real' name='OBESITY %' ordinal='1' />
            <column datatype='real' name='BA OR HIGHER' ordinal='2' />
            <column datatype='string' name='State Abbr' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBESITY %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OBESITY %]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>OBESITY %</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BA OR HIGHER</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BA OR HIGHER]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>BA OR HIGHER</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Abbr</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State Abbr]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State Abbr</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D53:no:A1:D53:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ba Or Higher' datatype='real' name='[BA OR HIGHER]' role='measure' type='quantitative' />
      <column caption='Color' datatype='boolean' name='[Calculation_151785433984864288]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SUM([BA OR HIGHER])&gt;SUM([OBESITY %])' />
      </column>
      <column caption='Sort' datatype='real' name='[Calculation_151785433985024033]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([BA OR HIGHER])-SUM([OBESITY %])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Obesity %' datatype='real' name='[OBESITY %]' role='measure' type='quantitative' />
      <column datatype='string' name='[State Abbr]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_151785433984864288]' derivation='User' name='[usr:Calculation_151785433984864288:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='Migrated Data' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Data/Tips &amp; Tricks Webinar/Obesity vs. Education.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/15/2018 04:40:36 PM'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='52' timestamp-start='2018-10-15 16:40:36.401' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OBESITY %</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OBESITY %]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OBESITY %</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BA OR HIGHER</remote-name>
              <remote-type>5</remote-type>
              <local-name>[BA OR HIGHER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BA OR HIGHER</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State Abbr</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State Abbr]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State Abbr</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_151785433984864288:nk]' type='palette'>
            <map to='#bab0ac'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='excel-direct.0r52glh0e5ij2915qu9qv1ffqc2f' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D53:no:A1:D53:0' header='yes' outcome='2'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='real' name='OBESITY %' ordinal='1' />
                  <column datatype='real' name='BA OR HIGHER' ordinal='2' />
                  <column datatype='string' name='State Abbr' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='World Population 1950-2015' inline='true' name='federated.1skpayh1cn9yes1ac0p7s08rw3gj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='World Population 1950-2015' name='excel-direct.173jdv70ybsxph1ed94vv1n3vkmj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='integer' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[1950]' />
            <value name='[1951]' />
            <value name='[1952]' />
            <value name='[1953]' />
            <value name='[1954]' />
            <value name='[1955]' />
            <value name='[1956]' />
            <value name='[1957]' />
            <value name='[1958]' />
            <value name='[1959]' />
            <value name='[1960]' />
            <value name='[1961]' />
            <value name='[1962]' />
            <value name='[1963]' />
            <value name='[1964]' />
            <value name='[1965]' />
            <value name='[1966]' />
            <value name='[1967]' />
            <value name='[1968]' />
            <value name='[1969]' />
            <value name='[1970]' />
            <value name='[1971]' />
            <value name='[1972]' />
            <value name='[1973]' />
            <value name='[1974]' />
            <value name='[1975]' />
            <value name='[1976]' />
            <value name='[1977]' />
            <value name='[1978]' />
            <value name='[1979]' />
            <value name='[1980]' />
            <value name='[1981]' />
            <value name='[1982]' />
            <value name='[1983]' />
            <value name='[1984]' />
            <value name='[1985]' />
            <value name='[1986]' />
            <value name='[1987]' />
            <value name='[1988]' />
            <value name='[1989]' />
            <value name='[1990]' />
            <value name='[1991]' />
            <value name='[1992]' />
            <value name='[1993]' />
            <value name='[1994]' />
            <value name='[1995]' />
            <value name='[1996]' />
            <value name='[1997]' />
            <value name='[1998]' />
            <value name='[1999]' />
            <value name='[2000]' />
            <value name='[2001]' />
            <value name='[2002]' />
            <value name='[2003]' />
            <value name='[2004]' />
            <value name='[2005]' />
            <value name='[2006]' />
            <value name='[2007]' />
            <value name='[2008]' />
            <value name='[2009]' />
            <value name='[2010]' />
            <value name='[2011]' />
            <value name='[2012]' />
            <value name='[2013]' />
            <value name='[2014]' />
            <value name='[2015]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Sheet1].[1950]' />
              <field name='[Sheet1].[1951]' />
              <field name='[Sheet1].[1952]' />
              <field name='[Sheet1].[1953]' />
              <field name='[Sheet1].[1954]' />
              <field name='[Sheet1].[1955]' />
              <field name='[Sheet1].[1956]' />
              <field name='[Sheet1].[1957]' />
              <field name='[Sheet1].[1958]' />
              <field name='[Sheet1].[1959]' />
              <field name='[Sheet1].[1960]' />
              <field name='[Sheet1].[1961]' />
              <field name='[Sheet1].[1962]' />
              <field name='[Sheet1].[1963]' />
              <field name='[Sheet1].[1964]' />
              <field name='[Sheet1].[1965]' />
              <field name='[Sheet1].[1966]' />
              <field name='[Sheet1].[1967]' />
              <field name='[Sheet1].[1968]' />
              <field name='[Sheet1].[1969]' />
              <field name='[Sheet1].[1970]' />
              <field name='[Sheet1].[1971]' />
              <field name='[Sheet1].[1972]' />
              <field name='[Sheet1].[1973]' />
              <field name='[Sheet1].[1974]' />
              <field name='[Sheet1].[1975]' />
              <field name='[Sheet1].[1976]' />
              <field name='[Sheet1].[1977]' />
              <field name='[Sheet1].[1978]' />
              <field name='[Sheet1].[1979]' />
              <field name='[Sheet1].[1980]' />
              <field name='[Sheet1].[1981]' />
              <field name='[Sheet1].[1982]' />
              <field name='[Sheet1].[1983]' />
              <field name='[Sheet1].[1984]' />
              <field name='[Sheet1].[1985]' />
              <field name='[Sheet1].[1986]' />
              <field name='[Sheet1].[1987]' />
              <field name='[Sheet1].[1988]' />
              <field name='[Sheet1].[1989]' />
              <field name='[Sheet1].[1990]' />
              <field name='[Sheet1].[1991]' />
              <field name='[Sheet1].[1992]' />
              <field name='[Sheet1].[1993]' />
              <field name='[Sheet1].[1994]' />
              <field name='[Sheet1].[1995]' />
              <field name='[Sheet1].[1996]' />
              <field name='[Sheet1].[1997]' />
              <field name='[Sheet1].[1998]' />
              <field name='[Sheet1].[1999]' />
              <field name='[Sheet1].[2000]' />
              <field name='[Sheet1].[2001]' />
              <field name='[Sheet1].[2002]' />
              <field name='[Sheet1].[2003]' />
              <field name='[Sheet1].[2004]' />
              <field name='[Sheet1].[2005]' />
              <field name='[Sheet1].[2006]' />
              <field name='[Sheet1].[2007]' />
              <field name='[Sheet1].[2008]' />
              <field name='[Sheet1].[2009]' />
              <field name='[Sheet1].[2010]' />
              <field name='[Sheet1].[2011]' />
              <field name='[Sheet1].[2012]' />
              <field name='[Sheet1].[2013]' />
              <field name='[Sheet1].[2014]' />
              <field name='[Sheet1].[2015]' />
            </group>
          </groups>
          <relation connection='excel-direct.173jdv70ybsxph1ed94vv1n3vkmj' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:BP403:no:A1:BP403:0' header='yes' outcome='2'>
              <column datatype='string' name='Gender' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='real' name='1950' ordinal='2' />
              <column datatype='real' name='1951' ordinal='3' />
              <column datatype='real' name='1952' ordinal='4' />
              <column datatype='real' name='1953' ordinal='5' />
              <column datatype='real' name='1954' ordinal='6' />
              <column datatype='real' name='1955' ordinal='7' />
              <column datatype='real' name='1956' ordinal='8' />
              <column datatype='real' name='1957' ordinal='9' />
              <column datatype='real' name='1958' ordinal='10' />
              <column datatype='real' name='1959' ordinal='11' />
              <column datatype='real' name='1960' ordinal='12' />
              <column datatype='real' name='1961' ordinal='13' />
              <column datatype='real' name='1962' ordinal='14' />
              <column datatype='real' name='1963' ordinal='15' />
              <column datatype='real' name='1964' ordinal='16' />
              <column datatype='real' name='1965' ordinal='17' />
              <column datatype='real' name='1966' ordinal='18' />
              <column datatype='real' name='1967' ordinal='19' />
              <column datatype='real' name='1968' ordinal='20' />
              <column datatype='real' name='1969' ordinal='21' />
              <column datatype='real' name='1970' ordinal='22' />
              <column datatype='real' name='1971' ordinal='23' />
              <column datatype='real' name='1972' ordinal='24' />
              <column datatype='real' name='1973' ordinal='25' />
              <column datatype='real' name='1974' ordinal='26' />
              <column datatype='real' name='1975' ordinal='27' />
              <column datatype='real' name='1976' ordinal='28' />
              <column datatype='real' name='1977' ordinal='29' />
              <column datatype='real' name='1978' ordinal='30' />
              <column datatype='real' name='1979' ordinal='31' />
              <column datatype='real' name='1980' ordinal='32' />
              <column datatype='real' name='1981' ordinal='33' />
              <column datatype='real' name='1982' ordinal='34' />
              <column datatype='real' name='1983' ordinal='35' />
              <column datatype='real' name='1984' ordinal='36' />
              <column datatype='real' name='1985' ordinal='37' />
              <column datatype='real' name='1986' ordinal='38' />
              <column datatype='real' name='1987' ordinal='39' />
              <column datatype='real' name='1988' ordinal='40' />
              <column datatype='real' name='1989' ordinal='41' />
              <column datatype='real' name='1990' ordinal='42' />
              <column datatype='real' name='1991' ordinal='43' />
              <column datatype='real' name='1992' ordinal='44' />
              <column datatype='real' name='1993' ordinal='45' />
              <column datatype='real' name='1994' ordinal='46' />
              <column datatype='real' name='1995' ordinal='47' />
              <column datatype='real' name='1996' ordinal='48' />
              <column datatype='real' name='1997' ordinal='49' />
              <column datatype='real' name='1998' ordinal='50' />
              <column datatype='real' name='1999' ordinal='51' />
              <column datatype='real' name='2000' ordinal='52' />
              <column datatype='real' name='2001' ordinal='53' />
              <column datatype='real' name='2002' ordinal='54' />
              <column datatype='real' name='2003' ordinal='55' />
              <column datatype='real' name='2004' ordinal='56' />
              <column datatype='real' name='2005' ordinal='57' />
              <column datatype='real' name='2006' ordinal='58' />
              <column datatype='real' name='2007' ordinal='59' />
              <column datatype='real' name='2008' ordinal='60' />
              <column datatype='real' name='2009' ordinal='61' />
              <column datatype='real' name='2010' ordinal='62' />
              <column datatype='real' name='2011' ordinal='63' />
              <column datatype='real' name='2012' ordinal='64' />
              <column datatype='real' name='2013' ordinal='65' />
              <column datatype='real' name='2014' ordinal='66' />
              <column datatype='real' name='2015' ordinal='67' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='integer' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[1950]' />
            <value name='[1951]' />
            <value name='[1952]' />
            <value name='[1953]' />
            <value name='[1954]' />
            <value name='[1955]' />
            <value name='[1956]' />
            <value name='[1957]' />
            <value name='[1958]' />
            <value name='[1959]' />
            <value name='[1960]' />
            <value name='[1961]' />
            <value name='[1962]' />
            <value name='[1963]' />
            <value name='[1964]' />
            <value name='[1965]' />
            <value name='[1966]' />
            <value name='[1967]' />
            <value name='[1968]' />
            <value name='[1969]' />
            <value name='[1970]' />
            <value name='[1971]' />
            <value name='[1972]' />
            <value name='[1973]' />
            <value name='[1974]' />
            <value name='[1975]' />
            <value name='[1976]' />
            <value name='[1977]' />
            <value name='[1978]' />
            <value name='[1979]' />
            <value name='[1980]' />
            <value name='[1981]' />
            <value name='[1982]' />
            <value name='[1983]' />
            <value name='[1984]' />
            <value name='[1985]' />
            <value name='[1986]' />
            <value name='[1987]' />
            <value name='[1988]' />
            <value name='[1989]' />
            <value name='[1990]' />
            <value name='[1991]' />
            <value name='[1992]' />
            <value name='[1993]' />
            <value name='[1994]' />
            <value name='[1995]' />
            <value name='[1996]' />
            <value name='[1997]' />
            <value name='[1998]' />
            <value name='[1999]' />
            <value name='[2000]' />
            <value name='[2001]' />
            <value name='[2002]' />
            <value name='[2003]' />
            <value name='[2004]' />
            <value name='[2005]' />
            <value name='[2006]' />
            <value name='[2007]' />
            <value name='[2008]' />
            <value name='[2009]' />
            <value name='[2010]' />
            <value name='[2011]' />
            <value name='[2012]' />
            <value name='[2013]' />
            <value name='[2014]' />
            <value name='[2015]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Sheet1].[1950]' />
              <field name='[Sheet1].[1951]' />
              <field name='[Sheet1].[1952]' />
              <field name='[Sheet1].[1953]' />
              <field name='[Sheet1].[1954]' />
              <field name='[Sheet1].[1955]' />
              <field name='[Sheet1].[1956]' />
              <field name='[Sheet1].[1957]' />
              <field name='[Sheet1].[1958]' />
              <field name='[Sheet1].[1959]' />
              <field name='[Sheet1].[1960]' />
              <field name='[Sheet1].[1961]' />
              <field name='[Sheet1].[1962]' />
              <field name='[Sheet1].[1963]' />
              <field name='[Sheet1].[1964]' />
              <field name='[Sheet1].[1965]' />
              <field name='[Sheet1].[1966]' />
              <field name='[Sheet1].[1967]' />
              <field name='[Sheet1].[1968]' />
              <field name='[Sheet1].[1969]' />
              <field name='[Sheet1].[1970]' />
              <field name='[Sheet1].[1971]' />
              <field name='[Sheet1].[1972]' />
              <field name='[Sheet1].[1973]' />
              <field name='[Sheet1].[1974]' />
              <field name='[Sheet1].[1975]' />
              <field name='[Sheet1].[1976]' />
              <field name='[Sheet1].[1977]' />
              <field name='[Sheet1].[1978]' />
              <field name='[Sheet1].[1979]' />
              <field name='[Sheet1].[1980]' />
              <field name='[Sheet1].[1981]' />
              <field name='[Sheet1].[1982]' />
              <field name='[Sheet1].[1983]' />
              <field name='[Sheet1].[1984]' />
              <field name='[Sheet1].[1985]' />
              <field name='[Sheet1].[1986]' />
              <field name='[Sheet1].[1987]' />
              <field name='[Sheet1].[1988]' />
              <field name='[Sheet1].[1989]' />
              <field name='[Sheet1].[1990]' />
              <field name='[Sheet1].[1991]' />
              <field name='[Sheet1].[1992]' />
              <field name='[Sheet1].[1993]' />
              <field name='[Sheet1].[1994]' />
              <field name='[Sheet1].[1995]' />
              <field name='[Sheet1].[1996]' />
              <field name='[Sheet1].[1997]' />
              <field name='[Sheet1].[1998]' />
              <field name='[Sheet1].[1999]' />
              <field name='[Sheet1].[2000]' />
              <field name='[Sheet1].[2001]' />
              <field name='[Sheet1].[2002]' />
              <field name='[Sheet1].[2003]' />
              <field name='[Sheet1].[2004]' />
              <field name='[Sheet1].[2005]' />
              <field name='[Sheet1].[2006]' />
              <field name='[Sheet1].[2007]' />
              <field name='[Sheet1].[2008]' />
              <field name='[Sheet1].[2009]' />
              <field name='[Sheet1].[2010]' />
              <field name='[Sheet1].[2011]' />
              <field name='[Sheet1].[2012]' />
              <field name='[Sheet1].[2013]' />
              <field name='[Sheet1].[2014]' />
              <field name='[Sheet1].[2015]' />
            </group>
          </groups>
          <relation connection='excel-direct.173jdv70ybsxph1ed94vv1n3vkmj' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:BP403:no:A1:BP403:0' header='yes' outcome='2'>
              <column datatype='string' name='Gender' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='real' name='1950' ordinal='2' />
              <column datatype='real' name='1951' ordinal='3' />
              <column datatype='real' name='1952' ordinal='4' />
              <column datatype='real' name='1953' ordinal='5' />
              <column datatype='real' name='1954' ordinal='6' />
              <column datatype='real' name='1955' ordinal='7' />
              <column datatype='real' name='1956' ordinal='8' />
              <column datatype='real' name='1957' ordinal='9' />
              <column datatype='real' name='1958' ordinal='10' />
              <column datatype='real' name='1959' ordinal='11' />
              <column datatype='real' name='1960' ordinal='12' />
              <column datatype='real' name='1961' ordinal='13' />
              <column datatype='real' name='1962' ordinal='14' />
              <column datatype='real' name='1963' ordinal='15' />
              <column datatype='real' name='1964' ordinal='16' />
              <column datatype='real' name='1965' ordinal='17' />
              <column datatype='real' name='1966' ordinal='18' />
              <column datatype='real' name='1967' ordinal='19' />
              <column datatype='real' name='1968' ordinal='20' />
              <column datatype='real' name='1969' ordinal='21' />
              <column datatype='real' name='1970' ordinal='22' />
              <column datatype='real' name='1971' ordinal='23' />
              <column datatype='real' name='1972' ordinal='24' />
              <column datatype='real' name='1973' ordinal='25' />
              <column datatype='real' name='1974' ordinal='26' />
              <column datatype='real' name='1975' ordinal='27' />
              <column datatype='real' name='1976' ordinal='28' />
              <column datatype='real' name='1977' ordinal='29' />
              <column datatype='real' name='1978' ordinal='30' />
              <column datatype='real' name='1979' ordinal='31' />
              <column datatype='real' name='1980' ordinal='32' />
              <column datatype='real' name='1981' ordinal='33' />
              <column datatype='real' name='1982' ordinal='34' />
              <column datatype='real' name='1983' ordinal='35' />
              <column datatype='real' name='1984' ordinal='36' />
              <column datatype='real' name='1985' ordinal='37' />
              <column datatype='real' name='1986' ordinal='38' />
              <column datatype='real' name='1987' ordinal='39' />
              <column datatype='real' name='1988' ordinal='40' />
              <column datatype='real' name='1989' ordinal='41' />
              <column datatype='real' name='1990' ordinal='42' />
              <column datatype='real' name='1991' ordinal='43' />
              <column datatype='real' name='1992' ordinal='44' />
              <column datatype='real' name='1993' ordinal='45' />
              <column datatype='real' name='1994' ordinal='46' />
              <column datatype='real' name='1995' ordinal='47' />
              <column datatype='real' name='1996' ordinal='48' />
              <column datatype='real' name='1997' ordinal='49' />
              <column datatype='real' name='1998' ordinal='50' />
              <column datatype='real' name='1999' ordinal='51' />
              <column datatype='real' name='2000' ordinal='52' />
              <column datatype='real' name='2001' ordinal='53' />
              <column datatype='real' name='2002' ordinal='54' />
              <column datatype='real' name='2003' ordinal='55' />
              <column datatype='real' name='2004' ordinal='56' />
              <column datatype='real' name='2005' ordinal='57' />
              <column datatype='real' name='2006' ordinal='58' />
              <column datatype='real' name='2007' ordinal='59' />
              <column datatype='real' name='2008' ordinal='60' />
              <column datatype='real' name='2009' ordinal='61' />
              <column datatype='real' name='2010' ordinal='62' />
              <column datatype='real' name='2011' ordinal='63' />
              <column datatype='real' name='2012' ordinal='64' />
              <column datatype='real' name='2013' ordinal='65' />
              <column datatype='real' name='2014' ordinal='66' />
              <column datatype='real' name='2015' ordinal='67' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BP403:no:A1:BP403:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Male' datatype='real' default-format='*#,##0;#,##0' name='[Calculation_151785433967984646]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-if [Gender]=&apos;Male&apos; THEN [Pivot Field Values]&#10;END' />
      </column>
      <column caption='Female' datatype='real' name='[Calculation_151785433968058375]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Gender]=&apos;Female&apos; THEN [Pivot Field Values]&#10;END' />
      </column>
      <column caption='Use Me' datatype='string' name='[Country (copy)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='tableau' formula='[Country]' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Pivot Field Names]' role='dimension' type='ordinal' />
      <column caption='Population' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='Migrated Data' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Data/Tips &amp; Tricks Webinar/World Population 1950-2015.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/15/2018 04:41:00 PM'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='26532' timestamp-start='2018-10-15 16:41:00.082' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>232</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Names</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Pivot Field Names]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Names</remote-alias>
              <ordinal>2</ordinal>
              <family>Pivot</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>66</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Values</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Pivot Field Values]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Values</remote-alias>
              <ordinal>3</ordinal>
              <family>Pivot</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26532</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation name='Pivot' type='pivot'>
                <columns>
                  <column datatype='integer' name='Pivot Field Names' />
                  <column datatype='real' name='Pivot Field Values' />
                </columns>
                <tag name='Pivot Field Names'>
                  <value name='[1950]' />
                  <value name='[1951]' />
                  <value name='[1952]' />
                  <value name='[1953]' />
                  <value name='[1954]' />
                  <value name='[1955]' />
                  <value name='[1956]' />
                  <value name='[1957]' />
                  <value name='[1958]' />
                  <value name='[1959]' />
                  <value name='[1960]' />
                  <value name='[1961]' />
                  <value name='[1962]' />
                  <value name='[1963]' />
                  <value name='[1964]' />
                  <value name='[1965]' />
                  <value name='[1966]' />
                  <value name='[1967]' />
                  <value name='[1968]' />
                  <value name='[1969]' />
                  <value name='[1970]' />
                  <value name='[1971]' />
                  <value name='[1972]' />
                  <value name='[1973]' />
                  <value name='[1974]' />
                  <value name='[1975]' />
                  <value name='[1976]' />
                  <value name='[1977]' />
                  <value name='[1978]' />
                  <value name='[1979]' />
                  <value name='[1980]' />
                  <value name='[1981]' />
                  <value name='[1982]' />
                  <value name='[1983]' />
                  <value name='[1984]' />
                  <value name='[1985]' />
                  <value name='[1986]' />
                  <value name='[1987]' />
                  <value name='[1988]' />
                  <value name='[1989]' />
                  <value name='[1990]' />
                  <value name='[1991]' />
                  <value name='[1992]' />
                  <value name='[1993]' />
                  <value name='[1994]' />
                  <value name='[1995]' />
                  <value name='[1996]' />
                  <value name='[1997]' />
                  <value name='[1998]' />
                  <value name='[1999]' />
                  <value name='[2000]' />
                  <value name='[2001]' />
                  <value name='[2002]' />
                  <value name='[2003]' />
                  <value name='[2004]' />
                  <value name='[2005]' />
                  <value name='[2006]' />
                  <value name='[2007]' />
                  <value name='[2008]' />
                  <value name='[2009]' />
                  <value name='[2010]' />
                  <value name='[2011]' />
                  <value name='[2012]' />
                  <value name='[2013]' />
                  <value name='[2014]' />
                  <value name='[2015]' />
                </tag>
                <groups>
                  <group name='Pivot Field Values'>
                    <field name='[Sheet1].[1950]' />
                    <field name='[Sheet1].[1951]' />
                    <field name='[Sheet1].[1952]' />
                    <field name='[Sheet1].[1953]' />
                    <field name='[Sheet1].[1954]' />
                    <field name='[Sheet1].[1955]' />
                    <field name='[Sheet1].[1956]' />
                    <field name='[Sheet1].[1957]' />
                    <field name='[Sheet1].[1958]' />
                    <field name='[Sheet1].[1959]' />
                    <field name='[Sheet1].[1960]' />
                    <field name='[Sheet1].[1961]' />
                    <field name='[Sheet1].[1962]' />
                    <field name='[Sheet1].[1963]' />
                    <field name='[Sheet1].[1964]' />
                    <field name='[Sheet1].[1965]' />
                    <field name='[Sheet1].[1966]' />
                    <field name='[Sheet1].[1967]' />
                    <field name='[Sheet1].[1968]' />
                    <field name='[Sheet1].[1969]' />
                    <field name='[Sheet1].[1970]' />
                    <field name='[Sheet1].[1971]' />
                    <field name='[Sheet1].[1972]' />
                    <field name='[Sheet1].[1973]' />
                    <field name='[Sheet1].[1974]' />
                    <field name='[Sheet1].[1975]' />
                    <field name='[Sheet1].[1976]' />
                    <field name='[Sheet1].[1977]' />
                    <field name='[Sheet1].[1978]' />
                    <field name='[Sheet1].[1979]' />
                    <field name='[Sheet1].[1980]' />
                    <field name='[Sheet1].[1981]' />
                    <field name='[Sheet1].[1982]' />
                    <field name='[Sheet1].[1983]' />
                    <field name='[Sheet1].[1984]' />
                    <field name='[Sheet1].[1985]' />
                    <field name='[Sheet1].[1986]' />
                    <field name='[Sheet1].[1987]' />
                    <field name='[Sheet1].[1988]' />
                    <field name='[Sheet1].[1989]' />
                    <field name='[Sheet1].[1990]' />
                    <field name='[Sheet1].[1991]' />
                    <field name='[Sheet1].[1992]' />
                    <field name='[Sheet1].[1993]' />
                    <field name='[Sheet1].[1994]' />
                    <field name='[Sheet1].[1995]' />
                    <field name='[Sheet1].[1996]' />
                    <field name='[Sheet1].[1997]' />
                    <field name='[Sheet1].[1998]' />
                    <field name='[Sheet1].[1999]' />
                    <field name='[Sheet1].[2000]' />
                    <field name='[Sheet1].[2001]' />
                    <field name='[Sheet1].[2002]' />
                    <field name='[Sheet1].[2003]' />
                    <field name='[Sheet1].[2004]' />
                    <field name='[Sheet1].[2005]' />
                    <field name='[Sheet1].[2006]' />
                    <field name='[Sheet1].[2007]' />
                    <field name='[Sheet1].[2008]' />
                    <field name='[Sheet1].[2009]' />
                    <field name='[Sheet1].[2010]' />
                    <field name='[Sheet1].[2011]' />
                    <field name='[Sheet1].[2012]' />
                    <field name='[Sheet1].[2013]' />
                    <field name='[Sheet1].[2014]' />
                    <field name='[Sheet1].[2015]' />
                  </group>
                </groups>
                <relation connection='excel-direct.173jdv70ybsxph1ed94vv1n3vkmj' name='Sheet1' table='[Sheet1$]' type='table'>
                  <columns gridOrigin='A1:BP403:no:A1:BP403:0' header='yes' outcome='2'>
                    <column datatype='string' name='Gender' ordinal='0' />
                    <column datatype='string' name='Country' ordinal='1' />
                    <column datatype='real' name='1950' ordinal='2' />
                    <column datatype='real' name='1951' ordinal='3' />
                    <column datatype='real' name='1952' ordinal='4' />
                    <column datatype='real' name='1953' ordinal='5' />
                    <column datatype='real' name='1954' ordinal='6' />
                    <column datatype='real' name='1955' ordinal='7' />
                    <column datatype='real' name='1956' ordinal='8' />
                    <column datatype='real' name='1957' ordinal='9' />
                    <column datatype='real' name='1958' ordinal='10' />
                    <column datatype='real' name='1959' ordinal='11' />
                    <column datatype='real' name='1960' ordinal='12' />
                    <column datatype='real' name='1961' ordinal='13' />
                    <column datatype='real' name='1962' ordinal='14' />
                    <column datatype='real' name='1963' ordinal='15' />
                    <column datatype='real' name='1964' ordinal='16' />
                    <column datatype='real' name='1965' ordinal='17' />
                    <column datatype='real' name='1966' ordinal='18' />
                    <column datatype='real' name='1967' ordinal='19' />
                    <column datatype='real' name='1968' ordinal='20' />
                    <column datatype='real' name='1969' ordinal='21' />
                    <column datatype='real' name='1970' ordinal='22' />
                    <column datatype='real' name='1971' ordinal='23' />
                    <column datatype='real' name='1972' ordinal='24' />
                    <column datatype='real' name='1973' ordinal='25' />
                    <column datatype='real' name='1974' ordinal='26' />
                    <column datatype='real' name='1975' ordinal='27' />
                    <column datatype='real' name='1976' ordinal='28' />
                    <column datatype='real' name='1977' ordinal='29' />
                    <column datatype='real' name='1978' ordinal='30' />
                    <column datatype='real' name='1979' ordinal='31' />
                    <column datatype='real' name='1980' ordinal='32' />
                    <column datatype='real' name='1981' ordinal='33' />
                    <column datatype='real' name='1982' ordinal='34' />
                    <column datatype='real' name='1983' ordinal='35' />
                    <column datatype='real' name='1984' ordinal='36' />
                    <column datatype='real' name='1985' ordinal='37' />
                    <column datatype='real' name='1986' ordinal='38' />
                    <column datatype='real' name='1987' ordinal='39' />
                    <column datatype='real' name='1988' ordinal='40' />
                    <column datatype='real' name='1989' ordinal='41' />
                    <column datatype='real' name='1990' ordinal='42' />
                    <column datatype='real' name='1991' ordinal='43' />
                    <column datatype='real' name='1992' ordinal='44' />
                    <column datatype='real' name='1993' ordinal='45' />
                    <column datatype='real' name='1994' ordinal='46' />
                    <column datatype='real' name='1995' ordinal='47' />
                    <column datatype='real' name='1996' ordinal='48' />
                    <column datatype='real' name='1997' ordinal='49' />
                    <column datatype='real' name='1998' ordinal='50' />
                    <column datatype='real' name='1999' ordinal='51' />
                    <column datatype='real' name='2000' ordinal='52' />
                    <column datatype='real' name='2001' ordinal='53' />
                    <column datatype='real' name='2002' ordinal='54' />
                    <column datatype='real' name='2003' ordinal='55' />
                    <column datatype='real' name='2004' ordinal='56' />
                    <column datatype='real' name='2005' ordinal='57' />
                    <column datatype='real' name='2006' ordinal='58' />
                    <column datatype='real' name='2007' ordinal='59' />
                    <column datatype='real' name='2008' ordinal='60' />
                    <column datatype='real' name='2009' ordinal='61' />
                    <column datatype='real' name='2010' ordinal='62' />
                    <column datatype='real' name='2011' ordinal='63' />
                    <column datatype='real' name='2012' ordinal='64' />
                    <column datatype='real' name='2013' ordinal='65' />
                    <column datatype='real' name='2014' ordinal='66' />
                    <column datatype='real' name='2015' ordinal='67' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Gapminder' inline='true' name='federated.1tqpy1s1y1uo3m1eka2jz0glef5q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Gapminder' name='excel-direct.10ti9sz0sp53no10p9ebl0m3lyxm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.10ti9sz0sp53no10p9ebl0m3lyxm' name='Gapminder' table='[Gapminder$]' type='table'>
          <columns gridOrigin='A1:F11611:no:A1:F11611:0' header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='real' name='Children per Woman (Fertility Rate)' ordinal='3' />
            <column datatype='real' name='Life Expectancy (Years)' ordinal='4' />
            <column datatype='integer' name='Population' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.10ti9sz0sp53no10p9ebl0m3lyxm' name='Gapminder' table='[Gapminder$]' type='table'>
          <columns gridOrigin='A1:F11611:no:A1:F11611:0' header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='real' name='Children per Woman (Fertility Rate)' ordinal='3' />
            <column datatype='real' name='Life Expectancy (Years)' ordinal='4' />
            <column datatype='integer' name='Population' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Gapminder]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Gapminder]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Gapminder]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Children per Woman (Fertility Rate)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Children per Woman (Fertility Rate)]</local-name>
            <parent-name>[Gapminder]</parent-name>
            <remote-alias>Children per Woman (Fertility Rate)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy (Years)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life Expectancy (Years)]</local-name>
            <parent-name>[Gapminder]</parent-name>
            <remote-alias>Life Expectancy (Years)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Gapminder]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Gapminder]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F11611:no:A1:F11611:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='None' caption='Life Expectancy (Years) (bin)' datatype='integer' name='[Life Expectancy (Years) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Life Expectancy (Years)]' peg='0' size='5' />
      </column>
      <column datatype='real' name='[Life Expectancy (Years)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Use Me' datatype='string' name='[Region (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Region]' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='Migrated Data' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Data/Datasources 1/Gapminder.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/14/2018 04:08:27 PM'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='11610' timestamp-start='2018-10-14 16:08:27.282' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Name</remote-alias>
              <ordinal>0</ordinal>
              <family>Gapminder</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>222</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>1</ordinal>
              <family>Gapminder</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>2</ordinal>
              <family>Gapminder</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Children per Woman (Fertility Rate)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Children per Woman (Fertility Rate)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Children per Woman (Fertility Rate)</remote-alias>
              <ordinal>3</ordinal>
              <family>Gapminder</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2949</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life Expectancy (Years)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Life Expectancy (Years)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Life Expectancy (Years)</remote-alias>
              <ordinal>4</ordinal>
              <family>Gapminder</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8464</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>5</ordinal>
              <family>Gapminder</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11064</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='excel-direct.10ti9sz0sp53no10p9ebl0m3lyxm' name='Gapminder' table='[Gapminder$]' type='table'>
                <columns gridOrigin='A1:F11611:no:A1:F11611:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country Name' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                  <column datatype='integer' name='Year' ordinal='2' />
                  <column datatype='real' name='Children per Woman (Fertility Rate)' ordinal='3' />
                  <column datatype='real' name='Life Expectancy (Years)' ordinal='4' />
                  <column datatype='integer' name='Population' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='Sample - Superstore'>
      <datasources>
        <datasource name='Sample - Superstore' />
      </datasources>
      <datasource-dependencies datasource='Sample - Superstore'>
        <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Category]' />
        </column>
        <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[Sample - Superstore].[none:Category (copy):nk]'>
        <groupfilter from='&quot;Furniture&quot;' function='range' level='[none:Category (copy):nk]' to='&quot;Technology&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
      <datasources>
        <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
      </datasources>
      <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
        <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <calculation class='tableau' formula='[City]' />
        </column>
        <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]'>
        <groupfilter function='level-members' level='[none:City (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='federated.0wrjl5h0i4y1dq18z0hbr10hi7iw'>
      <datasources>
        <datasource caption='MLB Beer Prices Extract' name='federated.0wrjl5h0i4y1dq18z0hbr10hi7iw' />
      </datasources>
      <datasource-dependencies datasource='federated.0wrjl5h0i4y1dq18z0hbr10hi7iw'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0wrjl5h0i4y1dq18z0hbr10hi7iw].[none:City:nk]'>
        <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='federated.106g7yy0yvz4iw1ghef0r16vljmb'>
      <datasources>
        <datasource caption='Five Year Cancer Survival Rates in USA Extract' name='federated.106g7yy0yvz4iw1ghef0r16vljmb' />
      </datasources>
      <datasource-dependencies datasource='federated.106g7yy0yvz4iw1ghef0r16vljmb'>
        <column caption='Use Me' datatype='string' name='[Gender (copy)]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Gender]' />
        </column>
        <column-instance column='[Gender (copy)]' derivation='None' name='[none:Gender (copy):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Gender (copy):nk]'>
        <groupfilter function='level-members' level='[none:Gender (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='federated.12a25yn0j3y0lv12hjel90sllvle'>
      <datasources>
        <datasource caption='Measles Cases Extract' name='federated.12a25yn0j3y0lv12hjel90sllvle' />
      </datasources>
      <datasource-dependencies datasource='federated.12a25yn0j3y0lv12hjel90sllvle'>
        <column aggregation='Sum' caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='ordinal' />
        <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.12a25yn0j3y0lv12hjel90sllvle].[none:YEAR:ok]'>
        <groupfilter function='level-members' level='[none:YEAR:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='federated.1itr43q1qo4wyh15x1x5o1biy42h'>
      <datasources>
        <datasource caption='Rat Sightings' name='federated.1itr43q1qo4wyh15x1x5o1biy42h' />
      </datasources>
      <datasource-dependencies datasource='federated.1itr43q1qo4wyh15x1x5o1biy42h'>
        <column datatype='string' name='[Complaint Type]' role='dimension' type='nominal' />
        <column-instance column='[Complaint Type]' derivation='None' name='[none:Complaint Type:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1itr43q1qo4wyh15x1x5o1biy42h].[none:Complaint Type:nk]'>
        <groupfilter function='member' level='[none:Complaint Type:nk]' member='&quot;Rodent&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='federated.1pvzafn150cndk172zsld170gnoh'>
      <datasources>
        <datasource caption='Top 100 IPOs' name='federated.1pvzafn150cndk172zsld170gnoh' />
      </datasources>
      <datasource-dependencies datasource='federated.1pvzafn150cndk172zsld170gnoh'>
        <column datatype='string' name='[Company Name (Full)]' role='dimension' type='nominal' />
        <column-instance column='[Company Name (Full)]' derivation='None' name='[none:Company Name (Full):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1pvzafn150cndk172zsld170gnoh].[none:Company Name (Full):nk]'>
        <groupfilter function='level-members' level='[none:Company Name (Full):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='federated.1qp3t760n9ryc00zr15730ttix9k'>
      <datasources>
        <datasource caption='Obesity vs. Education' name='federated.1qp3t760n9ryc00zr15730ttix9k' />
      </datasources>
      <datasource-dependencies datasource='federated.1qp3t760n9ryc00zr15730ttix9k'>
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1qp3t760n9ryc00zr15730ttix9k].[none:State:nk]'>
        <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='federated.1tqpy1s1y1uo3m1eka2jz0glef5q'>
      <datasources>
        <datasource caption='Gapminder' name='federated.1tqpy1s1y1uo3m1eka2jz0glef5q' />
      </datasources>
      <datasource-dependencies datasource='federated.1tqpy1s1y1uo3m1eka2jz0glef5q'>
        <column caption='Use Me' datatype='string' name='[Region (copy)]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Region]' />
        </column>
        <column-instance column='[Region (copy)]' derivation='None' name='[none:Region (copy):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region (copy):nk]'>
        <groupfilter function='level-members' level='[none:Region (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Cat Map' />
      <command command='tsc:brush'>
        <param name='field-captions' value='AGG(Profitable?)' />
        <param name='target' value='Cat Map' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='100% Stacked Area Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/100StackedAreaChart?rev=' id='21903857' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Superstore].[Ship Mode]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore].[none:Ship Mode:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Ship Mode:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Ship Mode:nk]' member='&quot;Same Day&quot;' />
                <groupfilter function='member' level='[none:Ship Mode:nk]' member='&quot;Second Class&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
            <column>[Sample - Superstore].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[Sample - Superstore].[none:Ship Mode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[pcto:sum:Sales:qk:2]</rows>
        <cols>[Sample - Superstore].[tqr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{201C9870-43E2-4E32-82BE-758B95BFB5CE}' />
    </worksheet>
    <worksheet name='100% Stacked Area Chart with Divider Line'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/100StackedAreaChartwithDividerLine?rev=' id='21903858' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='IF ATTR([Ship Mode])=&apos;Standard Class&apos; THEN  SUM([Sales]) / TO...' datatype='real' name='[Calculation_151785433970192395]' role='measure' type='quantitative' user:unnamed='100% Stacked Area Chart (2)'>
              <calculation class='tableau' formula='IF ATTR([Ship Mode])=&apos;Standard Class&apos; THEN  SUM([Sales]) / TOTAL(SUM([Sales])) END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Superstore].[Ship Mode]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433970192395]' derivation='User' name='[usr:Calculation_151785433970192395:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Superstore].[Ship Mode]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore].[none:Ship Mode:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Ship Mode:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Ship Mode:nk]' member='&quot;Same Day&quot;' />
                <groupfilter function='member' level='[none:Ship Mode:nk]' member='&quot;Second Class&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
            <column>[Sample - Superstore].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[usr:Calculation_151785433970192395:qk:1]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[Sample - Superstore].[none:Ship Mode:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[pcto:sum:Sales:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[Sample - Superstore].[none:Ship Mode:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='55' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[usr:Calculation_151785433970192395:qk:1]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[Sample - Superstore].[none:Ship Mode:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sample - Superstore].[pcto:sum:Sales:qk:2] + [Sample - Superstore].[usr:Calculation_151785433970192395:qk:1])</rows>
        <cols>[Sample - Superstore].[tqr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{FF246417-F56C-49E0-93B4-63F3AC637C97}' />
    </worksheet>
    <worksheet name='100% Stacked Bar Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/100StackedBarChart?rev=' id='21903847' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Sample - Superstore].[Region]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Sample - Superstore].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[pcto:sum:Sales:qk:3]</rows>
        <cols>[Sample - Superstore].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{200425E9-BE0F-41E7-8185-7BA7F73AA921}' />
    </worksheet>
    <worksheet name='13-week Moving Average'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/13-weekMovingAverage?rev=' id='21903880' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Week-Trunc' name='[twk:Purchase Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price]' derivation='Sum' name='[win:sum:Price:qk:4]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-12' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[win:sum:Price:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Multiple Values]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[twk:Purchase Date:qk]</cols>
      </table>
      <simple-id uuid='{4E7F9C40-DE64-447B-9D2B-52EEFE05FF10}' />
    </worksheet>
    <worksheet name='Adjusted Forecast'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/AdjustedForecast?rev=' id='21903887' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[Price]' derivation='Sum' forecast-column-base='[sum:Price:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[fVal:sum:Price:qk]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='custom' range-type='auto' season-type='ets-additive' show-prediction-bands='true' trend-type='ets-additive' />
      </table>
      <simple-id uuid='{AE5345D9-BF8B-48E0-B117-A2A086C3D99B}' />
    </worksheet>
    <worksheet name='Adjusted Forecast (no bands)'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/AdjustedForecastnobands?rev=' id='21903888' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[Price]' derivation='Sum' forecast-column-base='[sum:Price:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[fVal:sum:Price:qk]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='custom' range-type='auto' season-type='ets-additive' show-prediction-bands='false' trend-type='ets-additive' />
      </table>
      <simple-id uuid='{0A5C0D94-BA12-4F0C-8FD6-02D958062888}' />
    </worksheet>
    <worksheet name='Advanced Pareto Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/AdvancedParetoChart?rev=' id='21903898' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer ID]' derivation='CountD' name='[pcto:cum:ctd:Customer ID:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[Sample - Superstore].[Customer ID]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[Sample - Superstore].[none:Customer ID:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:cum:sum:Profit:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[Sample - Superstore].[none:Customer ID:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[Sample - Superstore].[none:Customer ID:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[Sample - Superstore].[none:Customer ID:nk]' direction='DESC' using='[Sample - Superstore].[sum:Profit:qk]' />
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[Sample - Superstore].[none:Customer ID:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[pcto:cum:sum:Profit:qk:1]</rows>
        <cols>[Sample - Superstore].[pcto:cum:ctd:Customer ID:qk:1]</cols>
      </table>
      <simple-id uuid='{2E45183C-A12A-4261-94AD-C10FDC27EF35}' />
    </worksheet>
    <worksheet name='Advanced Pareto Chart with Lines'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/AdvancedParetoChartwithLines?rev=' id='21903899' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer ID]' derivation='CountD' name='[pcto:cum:ctd:Customer ID:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[Sample - Superstore].[Customer ID]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[Sample - Superstore].[none:Customer ID:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:cum:sum:Profit:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[Sample - Superstore].[none:Customer ID:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[Sample - Superstore].[none:Customer ID:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[Sample - Superstore].[none:Customer ID:nk]' direction='DESC' using='[Sample - Superstore].[sum:Profit:qk]' />
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[Sample - Superstore].[none:Customer ID:nk]' />
            </encodings>
            <reference-line axis-column='[Sample - Superstore].[pcto:cum:ctd:Customer ID:qk:1]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[Sample - Superstore].[pcto:cum:ctd:Customer ID:qk:1]' z-order='1' />
            <reference-line axis-column='[Sample - Superstore].[pcto:cum:sum:Profit:qk:1]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[Sample - Superstore].[pcto:cum:sum:Profit:qk:1]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[pcto:cum:sum:Profit:qk:1]</rows>
        <cols>[Sample - Superstore].[pcto:cum:ctd:Customer ID:qk:1]</cols>
      </table>
      <simple-id uuid='{AD00CE15-4766-467F-84F9-ED0AB80576E4}' />
    </worksheet>
    <worksheet name='Animated Histogram'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/AnimatedHistogram?rev=' id='21903868' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Gapminder' name='federated.1tqpy1s1y1uo3m1eka2jz0glef5q' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqpy1s1y1uo3m1eka2jz0glef5q'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='None' caption='Life Expectancy (Years) (bin)' datatype='integer' name='[Life Expectancy (Years) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Life Expectancy (Years)]' peg='0' size='5' />
            </column>
            <column datatype='real' name='[Life Expectancy (Years)]' role='measure' type='quantitative' />
            <column caption='Use Me' datatype='string' name='[Region (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Region]' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='CountD' name='[ctd:Country Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy (Years) (bin)]' derivation='None' name='[none:Life Expectancy (Years) (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region (copy)]' derivation='None' name='[none:Region (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Life Expectancy (Years) (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Life Expectancy (Years) (bin):ok]' />
              <groupfilter function='member' level='[none:Life Expectancy (Years) (bin):ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region (copy):nk]</column>
            <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Life Expectancy (Years) (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[ctd:Country Name:qk]</rows>
        <cols>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Life Expectancy (Years) (bin):ok]</cols>
        <pages>
          <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]</column>
        </pages>
        <show-full-range>
          <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[Life Expectancy (Years) (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{D6CA529E-FB67-4321-967E-D79A58D2EB1C}' />
    </worksheet>
    <worksheet name='Animated Scatterplot'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/AnimatedScatterplot?rev=' id='21903864' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Gapminder' name='federated.1tqpy1s1y1uo3m1eka2jz0glef5q' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqpy1s1y1uo3m1eka2jz0glef5q'>
            <column datatype='real' name='[Children per Woman (Fertility Rate)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Life Expectancy (Years)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Use Me' datatype='string' name='[Region (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Region]' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region (copy)]' derivation='None' name='[none:Region (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Children per Woman (Fertility Rate)]' derivation='Sum' name='[sum:Children per Woman (Fertility Rate):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy (Years)]' derivation='Sum' name='[sum:Life Expectancy (Years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region:nk]' />
              <size column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Population:qk]' />
              <lod column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='129' />
                <format attr='size' value='3.922652006149292' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Life Expectancy (Years):qk]</rows>
        <cols>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Children per Woman (Fertility Rate):qk]</cols>
        <pages>
          <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{F629FF53-B2A6-46F5-B724-9FC2A3851042}' />
    </worksheet>
    <worksheet name='Annotated Scatterplot'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/AnnotatedScatterplot?rev=' id='21903865' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Gapminder' name='federated.1tqpy1s1y1uo3m1eka2jz0glef5q' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqpy1s1y1uo3m1eka2jz0glef5q'>
            <column datatype='real' name='[Children per Woman (Fertility Rate)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Life Expectancy (Years)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Use Me' datatype='string' name='[Region (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Region]' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region (copy)]' derivation='None' name='[none:Region (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Children per Woman (Fertility Rate)]' derivation='Sum' name='[sum:Children per Woman (Fertility Rate):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy (Years)]' derivation='Sum' name='[sum:Life Expectancy (Years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#00000000' />
            <format attr='line-visibility' id='annotation_0' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region:nk]' />
              <size column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Population:qk]' />
              <lod column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.922652006149292' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Life Expectancy (Years):qk]</rows>
        <cols>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Children per Woman (Fertility Rate):qk]</cols>
        <pages>
          <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]</column>
        </pages>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='257'>
            <formatted-text>
              <run bold='true' fontcolor='#d4d4d4' fontsize='48'>&lt;Page Name&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='7.3960576575606618'>
                  <node-reference>
                    <axis>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Children per Woman (Fertility Rate):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='72.793138963876203'>
                  <node-reference>
                    <axis>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Life Expectancy (Years):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2013</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </point>
            <body x='40' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{C2927671-9447-473A-AEDE-A5E005BD77F3}' />
    </worksheet>
    <worksheet name='Area Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/AreaChart?rev=' id='21903854' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[sum:Sales:qk]</rows>
        <cols>[Sample - Superstore].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{8B2491B0-9562-4C57-A923-20B1D30804D4}' />
    </worksheet>
    <worksheet name='Area Chart with Line'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/AreaChartwithLine?rev=' id='21903855' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[Sample - Superstore].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='60' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[sum:Sales:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([Sample - Superstore].[sum:Sales:qk] + [Sample - Superstore].[sum:Sales:qk])</rows>
        <cols>[Sample - Superstore].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{5219CE7C-5911-4768-A732-FF3F42AA54F4}' />
    </worksheet>
    <worksheet name='BANs'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/BANs?rev=' id='21903902' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_151785433981038619]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]&#10;)/SUM([Sales])' />
            </column>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_151785433981038619]' derivation='User' name='[usr:Calculation_151785433981038619:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='140' />
            <format attr='cell-h' value='80' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sample - Superstore].[usr:Calculation_151785433981038619:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='28'>&lt;</run>
                <run bold='true' fontsize='28'>[Sample - Superstore].[usr:Calculation_151785433981038619:qk]</run>
                <run bold='true' fontsize='28'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[Sample - Superstore].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{9D78FD28-F99F-4FD3-9C19-95156CE78A2D}' />
    </worksheet>
    <worksheet name='BANs with Text Below'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/BANswithTextBelow?rev=' id='21903903' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_151785433981038619]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]&#10;)/SUM([Sales])' />
            </column>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_151785433981038619]' derivation='User' name='[usr:Calculation_151785433981038619:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='140' />
            <format attr='cell-h' value='80' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[Sample - Superstore].[none:Region:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sample - Superstore].[usr:Calculation_151785433981038619:qk]' />
              <text column='[Sample - Superstore].[none:Region:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='28'><![CDATA[<[Sample - Superstore].[usr:Calculation_151785433981038619:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='10'><![CDATA[<[Sample - Superstore].[none:Region:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[Sample - Superstore].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{A53DC55B-0DBC-48F5-9F98-B7CB6A2FCE29}' />
    </worksheet>
    <worksheet name='Bar Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/BarChart?rev=' id='21903832' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[Sample - Superstore].[none:Sub-Category:nk]' direction='DESC' using='[Sample - Superstore].[sum:Sales:qk]' />
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Sub-Category:nk]</rows>
        <cols>[Sample - Superstore].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{935C899E-D8C8-4DB7-995C-3880751587B6}' />
    </worksheet>
    <worksheet name='Bar Chart by Month (with spacing)'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/BarChartbyMonthwithspacing?rev=' id='21903834' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[Sample - Superstore].[sum:Sales:qk]</rows>
        <cols>([Sample - Superstore].[yr:Order Date:ok] / [Sample - Superstore].[mn:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{DCBC4D75-031E-4FA2-BFA7-F950C25143C3}' />
    </worksheet>
    <worksheet name='Bar Chart by Month (without spacing)'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/BarChartbyMonthwithoutspacing?rev=' id='21903835' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[Sample - Superstore].[sum:Sales:qk]</rows>
        <cols>([Sample - Superstore].[yr:Order Date:ok] * [Sample - Superstore].[tmn:Order Date:qk])</cols>
      </table>
      <simple-id uuid='{F1D76D86-C697-437E-9447-BE1A221A1B9C}' />
    </worksheet>
    <worksheet name='Bar-in-bar chart: Method 1'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/Bar-in-barchartMethod1?rev=' id='21903840' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[Sample - Superstore].[none:Sub-Category:nk]' direction='DESC' using='[Sample - Superstore].[sum:Sales:qk]' />
          <filter class='categorical' column='[Sample - Superstore].[yr:Order Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2018' />
            </groupfilter>
          </filter>
          <manual-sort column='[Sample - Superstore].[yr:Order Date:ok]' direction='ASC'>
            <dictionary>
              <bucket>2018</bucket>
              <bucket>2017</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
            <column>[Sample - Superstore].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore].[yr:Order Date:ok]' />
              <size column='[Sample - Superstore].[yr:Order Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Sub-Category:nk]</rows>
        <cols>[Sample - Superstore].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{160390E9-D213-4B3A-9876-DA761E643C4E}' />
    </worksheet>
    <worksheet name='Bar-in-bar chart: Method 2'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/Bar-in-barchartMethod2?rev=' id='21903841' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='2018 Sales' datatype='real' name='[2017 Sales (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])=2018 THEN [Sales] END' />
            </column>
            <column caption='2017 Sales' datatype='real' name='[Calculation_151785433965207552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])=2017 THEN [Sales] END' />
            </column>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[2017 Sales (copy)]' derivation='Sum' name='[sum:2017 Sales (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433965207552]' derivation='Sum' name='[sum:Calculation_151785433965207552:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Superstore].[sum:Calculation_151785433965207552:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Superstore].[sum:2017 Sales (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[Sample - Superstore].[none:Sub-Category:nk]' direction='DESC' using='[Sample - Superstore].[sum:Calculation_151785433965207552:qk]' />
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
            <column>[Sample - Superstore].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore].[:Measure Names]' />
              <size column='[Sample - Superstore].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Sub-Category:nk]</rows>
        <cols>[Sample - Superstore].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{FBEB4A7D-DD18-4386-916A-5890095D217F}' />
    </worksheet>
    <worksheet name='Bar-in-bar chart: Method 3'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/Bar-in-barchartMethod3?rev=' id='21903842' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='2018 Sales' datatype='real' name='[2017 Sales (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])=2018 THEN [Sales] END' />
            </column>
            <column caption='2017 Sales' datatype='real' name='[Calculation_151785433965207552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])=2017 THEN [Sales] END' />
            </column>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[2017 Sales (copy)]' derivation='Sum' name='[sum:2017 Sales (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433965207552]' derivation='Sum' name='[sum:Calculation_151785433965207552:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[Sample - Superstore].[none:Sub-Category:nk]' direction='DESC' using='[Sample - Superstore].[sum:Calculation_151785433965207552:qk]' />
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[sum:2017 Sales (copy):qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Sample - Superstore].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[Sample - Superstore].[sum:Calculation_151785433965207552:qk]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Sample - Superstore].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[Sample - Superstore].[sum:2017 Sales (copy):qk]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[Sample - Superstore].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.57071822881698608' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Sub-Category:nk]</rows>
        <cols>([Sample - Superstore].[sum:Calculation_151785433965207552:qk] + [Sample - Superstore].[sum:2017 Sales (copy):qk])</cols>
      </table>
      <simple-id uuid='{16E7B7A7-52C2-4A47-A623-6ADC81F0E871}' />
    </worksheet>
    <worksheet name='Barbell Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/BarbellChart?rev=' id='21903849' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='2018 Sales' datatype='real' name='[2017 Sales (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])=2018 THEN [Sales] END' />
            </column>
            <column caption='2017 Sales' datatype='real' name='[Calculation_151785433965207552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])=2017 THEN [Sales] END' />
            </column>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[2017 Sales (copy)]' derivation='Sum' name='[sum:2017 Sales (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433965207552]' derivation='Sum' name='[sum:Calculation_151785433965207552:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Superstore].[sum:Calculation_151785433965207552:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Superstore].[sum:2017 Sales (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
            <column>[Sample - Superstore].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[Sample - Superstore].[Multiple Values]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='render-fold-reversed' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[Sample - Superstore].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[Sample - Superstore].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[Sample - Superstore].[Multiple Values]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <path column='[Sample - Superstore].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Sub-Category:nk]</rows>
        <cols>([Sample - Superstore].[Multiple Values] + [Sample - Superstore].[Multiple Values])</cols>
      </table>
      <simple-id uuid='{7F5A2AAD-7A26-407D-AE84-9B90F9937742}' />
    </worksheet>
    <worksheet name='Basic Map'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/BasicMap?rev=' id='21903869' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Profit:qk]' />
              <lod column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:State:nk]' />
              <geometry column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Latitude (generated)]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1B1A94B5-D482-4A8E-8002-16F3A428B9FF}' />
    </worksheet>
    <worksheet name='Box Plot'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/BoxPlot?rev=' id='21903907' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='RANDOM()' datatype='real' name='[Calculation_20195882074402831]' role='measure' type='quantitative' user:unnamed='Box Plot'>
              <calculation class='tableau' formula='RANDOM()' />
            </column>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Colors' datatype='string' name='[Color (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Color]' new-bin='true'>
                <bin default-name='false' value='&quot;Black&quot;'>
                  <value>&quot;Maroon&quot;</value>
                  <value>&quot;Mauv&quot;</value>
                  <value>&quot;Purple&quot;</value>
                  <value>&quot;Violet&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Blue&quot;'>
                  <value>&quot;Aquamarine&quot;</value>
                  <value>&quot;Blue&quot;</value>
                  <value>&quot;Teal&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Green&quot;'>
                  <value>&quot;Green&quot;</value>
                  <value>&quot;Turquoise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Red&quot;'>
                  <value>&quot;Crimson&quot;</value>
                  <value>&quot;Fuscia&quot;</value>
                  <value>&quot;Pink&quot;</value>
                  <value>&quot;Red&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Yellow&quot;'>
                  <value>&quot;Goldenrod&quot;</value>
                  <value>&quot;Indigo&quot;</value>
                  <value>&quot;Khaki&quot;</value>
                  <value>&quot;Orange&quot;</value>
                  <value>&quot;Puce&quot;</value>
                  <value>&quot;Yellow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' hidden='true' name='[Color]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_20195882074402831]' derivation='Avg' name='[avg:Calculation_20195882074402831:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[avg:Calculation_20195882074402831:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Order ID:ok]' />
            </encodings>
            <reference-line axis-column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='65' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)] * [federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[avg:Calculation_20195882074402831:qk])</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]</cols>
      </table>
      <simple-id uuid='{80CA6AAE-DD91-4947-ABE1-1AA5CFD486E3}' />
    </worksheet>
    <worksheet name='Box Plot (no ends)'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/BoxPlotnoends?rev=' id='21903908' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='RANDOM()' datatype='real' name='[Calculation_20195882074402831]' role='measure' type='quantitative' user:unnamed='Box Plot'>
              <calculation class='tableau' formula='RANDOM()' />
            </column>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Colors' datatype='string' name='[Color (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Color]' new-bin='true'>
                <bin default-name='false' value='&quot;Black&quot;'>
                  <value>&quot;Maroon&quot;</value>
                  <value>&quot;Mauv&quot;</value>
                  <value>&quot;Purple&quot;</value>
                  <value>&quot;Violet&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Blue&quot;'>
                  <value>&quot;Aquamarine&quot;</value>
                  <value>&quot;Blue&quot;</value>
                  <value>&quot;Teal&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Green&quot;'>
                  <value>&quot;Green&quot;</value>
                  <value>&quot;Turquoise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Red&quot;'>
                  <value>&quot;Crimson&quot;</value>
                  <value>&quot;Fuscia&quot;</value>
                  <value>&quot;Pink&quot;</value>
                  <value>&quot;Red&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Yellow&quot;'>
                  <value>&quot;Goldenrod&quot;</value>
                  <value>&quot;Indigo&quot;</value>
                  <value>&quot;Khaki&quot;</value>
                  <value>&quot;Orange&quot;</value>
                  <value>&quot;Puce&quot;</value>
                  <value>&quot;Yellow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' hidden='true' name='[Color]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_20195882074402831]' derivation='Avg' name='[avg:Calculation_20195882074402831:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[avg:Calculation_20195882074402831:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='whisker-end' id='refline0' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Order ID:ok]' />
            </encodings>
            <reference-line axis-column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='65' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)] * [federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[avg:Calculation_20195882074402831:qk])</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]</cols>
      </table>
      <simple-id uuid='{6464DEEC-395D-4F74-827B-07DCE1E9C303}' />
    </worksheet>
    <worksheet name='Bullet Graph'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/BulletGraph?rev=' id='21903843' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='2018 Sales' datatype='real' name='[2017 Sales (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])=2018 THEN [Sales] END' />
            </column>
            <column caption='2017 Sales' datatype='real' name='[Calculation_151785433965207552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])=2017 THEN [Sales] END' />
            </column>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[2017 Sales (copy)]' derivation='Sum' name='[sum:2017 Sales (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433965207552]' derivation='Sum' name='[sum:Calculation_151785433965207552:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[Sample - Superstore].[none:Sub-Category:nk]' direction='DESC' using='[Sample - Superstore].[sum:2017 Sales (copy):qk]' />
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Sample - Superstore].[sum:Calculation_151785433965207552:qk]' />
            </encodings>
            <reference-line axis-column='[Sample - Superstore].[sum:2017 Sales (copy):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[Sample - Superstore].[sum:Calculation_151785433965207552:qk]' z-order='2' />
            <reference-line axis-column='[Sample - Superstore].[sum:2017 Sales (copy):qk]' enable-instant-analytics='true' fill-above='false' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[Sample - Superstore].[sum:Calculation_151785433965207552:qk]' z-order='1'>
              <reference-line-value percentage='50' />
              <reference-line-value percentage='75' />
              <reference-line-value percentage='100' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Sub-Category:nk]</rows>
        <cols>[Sample - Superstore].[sum:2017 Sales (copy):qk]</cols>
      </table>
      <simple-id uuid='{E2E82E3A-70E9-4629-AACD-B4F3D30FA397}' />
    </worksheet>
    <worksheet name='Bullseye Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/BullseyeChart?rev=' id='21903917' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Colors' datatype='string' name='[Color (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Color]' new-bin='true'>
                <bin default-name='false' value='&quot;Black&quot;'>
                  <value>&quot;Maroon&quot;</value>
                  <value>&quot;Mauv&quot;</value>
                  <value>&quot;Purple&quot;</value>
                  <value>&quot;Violet&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Blue&quot;'>
                  <value>&quot;Aquamarine&quot;</value>
                  <value>&quot;Blue&quot;</value>
                  <value>&quot;Teal&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Green&quot;'>
                  <value>&quot;Green&quot;</value>
                  <value>&quot;Turquoise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Red&quot;'>
                  <value>&quot;Crimson&quot;</value>
                  <value>&quot;Fuscia&quot;</value>
                  <value>&quot;Pink&quot;</value>
                  <value>&quot;Red&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Yellow&quot;'>
                  <value>&quot;Goldenrod&quot;</value>
                  <value>&quot;Indigo&quot;</value>
                  <value>&quot;Khaki&quot;</value>
                  <value>&quot;Orange&quot;</value>
                  <value>&quot;Puce&quot;</value>
                  <value>&quot;Yellow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' hidden='true' name='[Color]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' />
              <lod column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Make:nk]' />
              <lod column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Order ID:ok]' />
              <size column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3905CF74-5A0E-47ED-9909-CE1E067CD7BF}' />
    </worksheet>
    <worksheet name='Bump Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/BumpChart?rev=' id='21903890' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Colors' datatype='string' name='[Color (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Color]' new-bin='true'>
                <bin default-name='false' value='&quot;Black&quot;'>
                  <value>&quot;Maroon&quot;</value>
                  <value>&quot;Mauv&quot;</value>
                  <value>&quot;Purple&quot;</value>
                  <value>&quot;Violet&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Blue&quot;'>
                  <value>&quot;Aquamarine&quot;</value>
                  <value>&quot;Blue&quot;</value>
                  <value>&quot;Teal&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Green&quot;'>
                  <value>&quot;Green&quot;</value>
                  <value>&quot;Turquoise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Red&quot;'>
                  <value>&quot;Crimson&quot;</value>
                  <value>&quot;Fuscia&quot;</value>
                  <value>&quot;Pink&quot;</value>
                  <value>&quot;Red&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Yellow&quot;'>
                  <value>&quot;Goldenrod&quot;</value>
                  <value>&quot;Indigo&quot;</value>
                  <value>&quot;Khaki&quot;</value>
                  <value>&quot;Orange&quot;</value>
                  <value>&quot;Puce&quot;</value>
                  <value>&quot;Yellow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' hidden='true' name='[Color]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[rank:sum:Price:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[rank:sum:Price:qk:3]' field-type='quantitative' reverse='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[rank:sum:Price:qk:3]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='false' fill-type='fill-missing' ignore-last='1' model-type='custom' range-type='auto' season-type='ets-additive' show-prediction-bands='false' trend-type='ets-additive' />
      </table>
      <simple-id uuid='{A106D3C8-9893-4514-A07A-6172410874A5}' />
    </worksheet>
    <worksheet name='Calendar'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/Calendar?rev=' id='21903900' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[Purchase Date]' derivation='Day' name='[dy:Purchase Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Purchase Date]' derivation='MY' name='[my:Purchase Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Weekday' name='[wd:Purchase Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Purchase Date]' derivation='Week' name='[wk:Purchase Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[my:Purchase Date:ok]'>
            <groupfilter function='member' level='[my:Purchase Date:ok]' member='201501' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[my:Purchase Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Profit:qk]' />
              <text column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[dy:Purchase Date:ok]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[wk:Purchase Date:ok]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[wd:Purchase Date:ok]</cols>
      </table>
      <simple-id uuid='{EECF03BA-0481-43E2-A89F-29856F1149D4}' />
    </worksheet>
    <worksheet name='Cat Map'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/CatMap?rev=' id='21903896' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Hex Map' name='Workout Wednesday Superstore Sales' />
          </datasources>
          <datasource-dependencies datasource='Workout Wednesday Superstore Sales'>
            <column datatype='string' name='[Abbreviation]' role='dimension' type='nominal' />
            <column caption='Profitable?' datatype='boolean' name='[Calculation_151785433979125782]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_2679219574390378498]&gt;0' />
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='*+0%;-0%' name='[Calculation_2679219574390378498]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column aggregation='Sum' datatype='real' name='[Column]' role='dimension' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Row]' role='dimension' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Abbreviation]' derivation='None' name='[none:Abbreviation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Column]' derivation='None' name='[none:Column:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Row]' derivation='None' name='[none:Row:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433979125782]' derivation='User' name='[usr:Calculation_151785433979125782:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Workout Wednesday Superstore Sales].[none:Row:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[Workout Wednesday Superstore Sales].[none:Column:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[Workout Wednesday Superstore Sales].[none:Row:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[Workout Wednesday Superstore Sales].[usr:Calculation_151785433979125782:nk]' />
              <lod column='[Workout Wednesday Superstore Sales].[none:Abbreviation:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='5.2192649841308594' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Workout Wednesday Superstore Sales].[none:Row:qk]</rows>
        <cols>[Workout Wednesday Superstore Sales].[none:Column:qk]</cols>
      </table>
      <simple-id uuid='{D00B196A-F56B-4712-AEEF-9F1ADC9B54B7}' />
    </worksheet>
    <worksheet name='Colored &amp; Sized Scatterplot'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/ColoredSizedScatterplot?rev=' id='21903863' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Gapminder' name='federated.1tqpy1s1y1uo3m1eka2jz0glef5q' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqpy1s1y1uo3m1eka2jz0glef5q'>
            <column datatype='real' name='[Children per Woman (Fertility Rate)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Life Expectancy (Years)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Use Me' datatype='string' name='[Region (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Region]' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region (copy)]' derivation='None' name='[none:Region (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Children per Woman (Fertility Rate)]' derivation='Sum' name='[sum:Children per Woman (Fertility Rate):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy (Years)]' derivation='Sum' name='[sum:Life Expectancy (Years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region (copy):nk]</column>
            <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region:nk]' />
              <size column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Population:qk]' />
              <lod column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='129' />
                <format attr='size' value='3.1270718574523926' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Life Expectancy (Years):qk]</rows>
        <cols>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Children per Woman (Fertility Rate):qk]</cols>
      </table>
      <simple-id uuid='{7926DAB7-FED3-4BC8-B526-DB3738B8C426}' />
    </worksheet>
    <worksheet name='Colored Packed Bubbles'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/ColoredPackedBubbles?rev=' id='21903915' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Colors' datatype='string' name='[Color (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Color]' new-bin='true'>
                <bin default-name='false' value='&quot;Black&quot;'>
                  <value>&quot;Maroon&quot;</value>
                  <value>&quot;Mauv&quot;</value>
                  <value>&quot;Purple&quot;</value>
                  <value>&quot;Violet&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Blue&quot;'>
                  <value>&quot;Aquamarine&quot;</value>
                  <value>&quot;Blue&quot;</value>
                  <value>&quot;Teal&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Green&quot;'>
                  <value>&quot;Green&quot;</value>
                  <value>&quot;Turquoise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Red&quot;'>
                  <value>&quot;Crimson&quot;</value>
                  <value>&quot;Fuscia&quot;</value>
                  <value>&quot;Pink&quot;</value>
                  <value>&quot;Red&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Yellow&quot;'>
                  <value>&quot;Goldenrod&quot;</value>
                  <value>&quot;Indigo&quot;</value>
                  <value>&quot;Khaki&quot;</value>
                  <value>&quot;Orange&quot;</value>
                  <value>&quot;Puce&quot;</value>
                  <value>&quot;Yellow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' hidden='true' name='[Color]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' />
              <lod column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Make:nk]' />
              <size column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BA025792-F7DD-40BE-82EE-2871DAA755A1}' />
    </worksheet>
    <worksheet name='Colored Scatterplot'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/ColoredScatterplot?rev=' id='21903862' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Gapminder' name='federated.1tqpy1s1y1uo3m1eka2jz0glef5q' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqpy1s1y1uo3m1eka2jz0glef5q'>
            <column datatype='real' name='[Children per Woman (Fertility Rate)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Life Expectancy (Years)]' role='measure' type='quantitative' />
            <column caption='Use Me' datatype='string' name='[Region (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Region]' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region (copy)]' derivation='None' name='[none:Region (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Children per Woman (Fertility Rate)]' derivation='Sum' name='[sum:Children per Woman (Fertility Rate):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy (Years)]' derivation='Sum' name='[sum:Life Expectancy (Years):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region (copy):nk]</column>
            <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region:nk]' />
              <lod column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='244' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Life Expectancy (Years):qk]</rows>
        <cols>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Children per Woman (Fertility Rate):qk]</cols>
      </table>
      <simple-id uuid='{698D32D2-BDDC-493D-8497-2D6110FDF99E}' />
    </worksheet>
    <worksheet name='Common Baseline Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/CommonBaselineChart?rev=' id='21903876' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='First Purchase Date' datatype='date' name='[Calculation_151785433974398992]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ FIXED [Color (group)] : MIN([Purchase Date]) }' />
            </column>
            <column aggregation='Sum' caption='Elapsed Months' datatype='integer' name='[Calculation_151785433974505489]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;month&apos;,[Calculation_151785433974398992],[Purchase Date])' />
            </column>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Colors' datatype='string' name='[Color (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Color]' new-bin='true'>
                <bin default-name='false' value='&quot;Black&quot;'>
                  <value>&quot;Maroon&quot;</value>
                  <value>&quot;Mauv&quot;</value>
                  <value>&quot;Purple&quot;</value>
                  <value>&quot;Violet&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Blue&quot;'>
                  <value>&quot;Aquamarine&quot;</value>
                  <value>&quot;Blue&quot;</value>
                  <value>&quot;Teal&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Green&quot;'>
                  <value>&quot;Green&quot;</value>
                  <value>&quot;Turquoise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Red&quot;'>
                  <value>&quot;Crimson&quot;</value>
                  <value>&quot;Fuscia&quot;</value>
                  <value>&quot;Pink&quot;</value>
                  <value>&quot;Red&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Yellow&quot;'>
                  <value>&quot;Goldenrod&quot;</value>
                  <value>&quot;Indigo&quot;</value>
                  <value>&quot;Khaki&quot;</value>
                  <value>&quot;Orange&quot;</value>
                  <value>&quot;Puce&quot;</value>
                  <value>&quot;Yellow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' hidden='true' name='[Color]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[Price]' derivation='Sum' name='[cum:sum:Price:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Calculation_151785433974505489]' derivation='None' name='[none:Calculation_151785433974505489:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[cum:sum:Price:qk]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Calculation_151785433974505489:qk]</cols>
        <page-trail-options enabled='true' line-pattern='line-pattern-dashed' lines='true' mark-type='all' marks='false' trail-effect='none' />
      </table>
      <simple-id uuid='{234E9454-DD0E-4EA6-A02C-5DB5785C3653}' />
    </worksheet>
    <worksheet name='Comparison to Prior Year'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/ComparisontoPriorYear?rev=' id='21903844' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='2018 Sales' datatype='real' name='[2017 Sales (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])=2018 THEN [Sales] END' />
            </column>
            <column caption='2017 Sales' datatype='real' name='[Calculation_151785433965207552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])=2017 THEN [Sales] END' />
            </column>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[2017 Sales (copy)]' derivation='Sum' name='[sum:2017 Sales (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433965207552]' derivation='Sum' name='[sum:Calculation_151785433965207552:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[Sample - Superstore].[none:Sub-Category:nk]' direction='DESC' using='[Sample - Superstore].[sum:2017 Sales (copy):qk]' />
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='stroke-size' id='refline0' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Sample - Superstore].[sum:Calculation_151785433965207552:qk]' />
            </encodings>
            <reference-line axis-column='[Sample - Superstore].[sum:2017 Sales (copy):qk]' enable-instant-analytics='false' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[Sample - Superstore].[sum:Calculation_151785433965207552:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Sub-Category:nk]</rows>
        <cols>[Sample - Superstore].[sum:2017 Sales (copy):qk]</cols>
      </table>
      <simple-id uuid='{FC17820F-5DCD-4C81-98D3-CDCA7A5E81D5}' />
    </worksheet>
    <worksheet name='Comparison to Prior Year (single color variance)'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/ComparisontoPriorYearsinglecolorvariance?rev=' id='21903846' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='2018 Sales' datatype='real' name='[2017 Sales (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])=2018 THEN [Sales] END' />
            </column>
            <column caption='2017 Sales' datatype='real' name='[Calculation_151785433965207552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])=2017 THEN [Sales] END' />
            </column>
            <column caption='SUM([2018 Sales])&gt;SUM([2017 Sales])' datatype='boolean' name='[Calculation_151785433966657539]' role='measure' type='nominal' user:unnamed='Comparison to Prior Year (single color variance)'>
              <calculation class='tableau' formula='SUM([2017 Sales (copy)])&gt;SUM([Calculation_151785433965207552])' />
            </column>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[2017 Sales (copy)]' derivation='Sum' name='[sum:2017 Sales (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433965207552]' derivation='Sum' name='[sum:Calculation_151785433965207552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433966657539]' derivation='User' name='[usr:Calculation_151785433966657539:nk]' pivot='key' type='nominal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[usr:Calculation_151785433966657539:nk]' type='palette'>
                  <map to='#bab0ac'>
                    <bucket>true</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>false</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <computed-sort column='[Sample - Superstore].[none:Sub-Category:nk]' direction='DESC' using='[Sample - Superstore].[sum:2017 Sales (copy):qk]' />
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Sample - Superstore].[sum:Calculation_151785433965207552:qk]' />
              <color column='[Sample - Superstore].[usr:Calculation_151785433966657539:nk]' />
            </encodings>
            <reference-line axis-column='[Sample - Superstore].[sum:2017 Sales (copy):qk]' enable-instant-analytics='false' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[Sample - Superstore].[sum:Calculation_151785433965207552:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Sub-Category:nk]</rows>
        <cols>[Sample - Superstore].[sum:2017 Sales (copy):qk]</cols>
      </table>
      <simple-id uuid='{5671C306-5E74-4930-BC47-10E8EDAD6880}' />
    </worksheet>
    <worksheet name='Comparison to Prior Year (with variance)'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/ComparisontoPriorYearwithvariance?rev=' id='21903845' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='2018 Sales' datatype='real' name='[2017 Sales (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])=2018 THEN [Sales] END' />
            </column>
            <column caption='2017 Sales' datatype='real' name='[Calculation_151785433965207552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])=2017 THEN [Sales] END' />
            </column>
            <column caption='YoY Change' datatype='real' name='[Calculation_151785433966313473]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([2017 Sales (copy)])-SUM([Calculation_151785433965207552])' />
            </column>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[2017 Sales (copy)]' derivation='Sum' name='[sum:2017 Sales (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433965207552]' derivation='Sum' name='[sum:Calculation_151785433965207552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433966313473]' derivation='User' name='[usr:Calculation_151785433966313473:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[Sample - Superstore].[none:Sub-Category:nk]' direction='DESC' using='[Sample - Superstore].[sum:2017 Sales (copy):qk]' />
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore].[usr:Calculation_151785433966313473:qk]' />
              <lod column='[Sample - Superstore].[sum:Calculation_151785433965207552:qk]' />
            </encodings>
            <reference-line axis-column='[Sample - Superstore].[sum:2017 Sales (copy):qk]' enable-instant-analytics='false' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[Sample - Superstore].[sum:Calculation_151785433965207552:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Sub-Category:nk]</rows>
        <cols>[Sample - Superstore].[sum:2017 Sales (copy):qk]</cols>
      </table>
      <simple-id uuid='{7BE10FE7-D622-4AD0-9264-A6226F5BF4D6}' />
    </worksheet>
    <worksheet name='Connected Scatterplot'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/ConnectedScatterplot?rev=' id='21903866' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Life Expectancy vs Health Expenditure Extract' name='federated.0fyl1iy05z739a1eonl6v0ss7gzi' />
          </datasources>
          <datasource-dependencies datasource='federated.0fyl1iy05z739a1eonl6v0ss7gzi'>
            <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Health Expenditure]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Code]' derivation='None' name='[none:Country Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health Expenditure]' derivation='Sum' name='[sum:Health Expenditure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fyl1iy05z739a1eonl6v0ss7gzi].[none:Country Code:nk]'>
            <groupfilter function='level-members' level='[none:Country Code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0fyl1iy05z739a1eonl6v0ss7gzi].[none:Country Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0fyl1iy05z739a1eonl6v0ss7gzi].[sum:Life Expectancy:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='80' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0fyl1iy05z739a1eonl6v0ss7gzi].[none:Country Name:nk]' />
              <path column='[federated.0fyl1iy05z739a1eonl6v0ss7gzi].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-range-field' value='[federated.0fyl1iy05z739a1eonl6v0ss7gzi].[none:Year:qk]' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='681' />
                <format attr='maxwidth' value='681' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fyl1iy05z739a1eonl6v0ss7gzi].[sum:Life Expectancy:qk]</rows>
        <cols>[federated.0fyl1iy05z739a1eonl6v0ss7gzi].[sum:Health Expenditure:qk]</cols>
      </table>
      <simple-id uuid='{5E055B77-C533-4336-9E8E-9DB0442DE5BB}' />
    </worksheet>
    <worksheet name='Dashed Lines: Method 1'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/DashedLinesMethod1?rev=' id='21903874' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</cols>
        <pages>
          <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:ok]</column>
        </pages>
        <page-trail-options enabled='true' line-pattern='line-pattern-dashed' lines='true' mark-type='all' marks='false' trail-effect='none' />
      </table>
      <simple-id uuid='{1B7AB94D-FAB1-490E-A832-96E0FAA82775}' />
    </worksheet>
    <worksheet name='Dashed Lines: Method 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; (don&apos;t do this!)</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/DashedLinesMethod2?rev=' id='21903875' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk] + [federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk])</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</cols>
        <page-trail-options enabled='true' line-pattern='line-pattern-dashed' lines='true' mark-type='all' marks='false' trail-effect='none' />
      </table>
      <simple-id uuid='{8D15BB21-56F0-4A1F-A3EC-333EE92CCFC6}' />
    </worksheet>
    <worksheet name='Density Map'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/DensityMap?rev=' id='21903894' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Rat Sightings' name='federated.1itr43q1qo4wyh15x1x5o1biy42h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1itr43q1qo4wyh15x1x5o1biy42h'>
            <column datatype='string' name='[Borough]' role='dimension' type='nominal' />
            <column datatype='string' name='[Complaint Type]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Borough]' derivation='None' name='[none:Borough:nk]' pivot='key' type='nominal' />
            <column-instance column='[Complaint Type]' derivation='None' name='[none:Complaint Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1itr43q1qo4wyh15x1x5o1biy42h].[none:Borough:nk]'>
            <groupfilter function='level-members' level='[none:Borough:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1itr43q1qo4wyh15x1x5o1biy42h].[none:Complaint Type:nk]</column>
            <column>[federated.1itr43q1qo4wyh15x1x5o1biy42h].[none:Borough:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <style>
              <style-rule element='mark'>
                <encoding attr='density-color' palette='Magma 20 diverging' type='interpolated' />
                <format attr='density-intensity' value='0.89292812347412109' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1itr43q1qo4wyh15x1x5o1biy42h].[avg:Latitude:qk]</rows>
        <cols>[federated.1itr43q1qo4wyh15x1x5o1biy42h].[avg:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{CD6D7D8D-4CBC-439A-AE80-479B61E31BA7}' />
    </worksheet>
    <worksheet name='Diverging Area Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/DivergingAreaChart?rev=' id='21903851' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='World Population 1950-2015' name='federated.1skpayh1cn9yes1ac0p7s08rw3gj' />
          </datasources>
          <datasource-dependencies datasource='federated.1skpayh1cn9yes1ac0p7s08rw3gj'>
            <column caption='Male' datatype='real' default-format='*#,##0;#,##0' name='[Calculation_151785433967984646]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-if [Gender]=&apos;Male&apos; THEN [Pivot Field Values]&#10;END' />
            </column>
            <column caption='Female' datatype='real' name='[Calculation_151785433968058375]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&apos;Female&apos; THEN [Pivot Field Values]&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Population' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433967984646]' derivation='Sum' name='[sum:Calculation_151785433967984646:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433968058375]' derivation='Sum' name='[sum:Calculation_151785433968058375:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[sum:Calculation_151785433968058375:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[sum:Calculation_151785433967984646:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[:Measure Names]</column>
            <column>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[none:Pivot Field Names:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[none:Pivot Field Names:qk]</rows>
        <cols>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{267AB839-7265-4961-BC2C-21F88ABF4F03}' />
    </worksheet>
    <worksheet name='Diverging Bar Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/DivergingBarChart?rev=' id='21903850' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='World Population 1950-2015' name='federated.1skpayh1cn9yes1ac0p7s08rw3gj' />
          </datasources>
          <datasource-dependencies datasource='federated.1skpayh1cn9yes1ac0p7s08rw3gj'>
            <column caption='Male' datatype='real' default-format='*#,##0;#,##0' name='[Calculation_151785433967984646]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-if [Gender]=&apos;Male&apos; THEN [Pivot Field Values]&#10;END' />
            </column>
            <column caption='Female' datatype='real' name='[Calculation_151785433968058375]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Gender]=&apos;Female&apos; THEN [Pivot Field Values]&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Population' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_151785433967984646]' derivation='Sum' name='[sum:Calculation_151785433967984646:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433968058375]' derivation='Sum' name='[sum:Calculation_151785433968058375:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[sum:Calculation_151785433968058375:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[sum:Calculation_151785433967984646:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[:Measure Names]</column>
            <column>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[Multiple Values]' value='*#,##0;#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[none:Pivot Field Names:ok]</rows>
        <cols>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{5D5D53CF-EBE7-417C-84B7-F24F788A4EAA}' />
    </worksheet>
    <worksheet name='Donut Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/DonutChart?rev=' id='21903911' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='avg(0)' datatype='real' name='[Calculation_151785433982238751]' role='measure' type='quantitative' user:unnamed='Donut Chart'>
              <calculation class='tableau' formula='avg(0)' />
            </column>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Colors' datatype='string' name='[Color (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Color]' new-bin='true'>
                <bin default-name='false' value='&quot;Black&quot;'>
                  <value>&quot;Maroon&quot;</value>
                  <value>&quot;Mauv&quot;</value>
                  <value>&quot;Purple&quot;</value>
                  <value>&quot;Violet&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Blue&quot;'>
                  <value>&quot;Aquamarine&quot;</value>
                  <value>&quot;Blue&quot;</value>
                  <value>&quot;Teal&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Green&quot;'>
                  <value>&quot;Green&quot;</value>
                  <value>&quot;Turquoise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Red&quot;'>
                  <value>&quot;Crimson&quot;</value>
                  <value>&quot;Fuscia&quot;</value>
                  <value>&quot;Pink&quot;</value>
                  <value>&quot;Red&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Yellow&quot;'>
                  <value>&quot;Goldenrod&quot;</value>
                  <value>&quot;Indigo&quot;</value>
                  <value>&quot;Khaki&quot;</value>
                  <value>&quot;Orange&quot;</value>
                  <value>&quot;Puce&quot;</value>
                  <value>&quot;Yellow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' hidden='true' name='[Color]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433982238751]' derivation='User' name='[usr:Calculation_151785433982238751:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' direction='DESC' using='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' />
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[usr:Calculation_151785433982238751:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[usr:Calculation_151785433982238751:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[usr:Calculation_151785433982238751:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[usr:Calculation_151785433982238751:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' />
              <wedge-size column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='5.0694117546081543' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[usr:Calculation_151785433982238751:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.3038673400878906' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[usr:Calculation_151785433982238751:qk] + [federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[usr:Calculation_151785433982238751:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{290E1362-D295-40D1-B6C1-2EA6BF55888E}' />
    </worksheet>
    <worksheet name='Dot Map'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/DotMap?rev=' id='21903893' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Rat Sightings' name='federated.1itr43q1qo4wyh15x1x5o1biy42h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1itr43q1qo4wyh15x1x5o1biy42h'>
            <column datatype='string' name='[Borough]' role='dimension' type='nominal' />
            <column datatype='string' name='[Complaint Type]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Borough]' derivation='None' name='[none:Borough:nk]' pivot='key' type='nominal' />
            <column-instance column='[Complaint Type]' derivation='None' name='[none:Complaint Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1itr43q1qo4wyh15x1x5o1biy42h].[none:Complaint Type:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1itr43q1qo4wyh15x1x5o1biy42h].[none:Borough:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1itr43q1qo4wyh15x1x5o1biy42h].[avg:Latitude:qk]</rows>
        <cols>[federated.1itr43q1qo4wyh15x1x5o1biy42h].[avg:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{D14DC285-6AA8-4A9F-B4FA-CAA274C906C0}' />
    </worksheet>
    <worksheet name='Dot Plot'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/DotPlot?rev=' id='21903904' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' default='&quot;Central&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Order ID:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='119' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]</cols>
      </table>
      <simple-id uuid='{BAD8C039-6EBB-4C84-9E89-6B41D84685C7}' />
    </worksheet>
    <worksheet name='Forecast'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/Forecast?rev=' id='21903886' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[Price]' derivation='Sum' forecast-column-base='[sum:Price:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[fVal:sum:Price:qk]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{2215A683-FE9D-4D73-A0A8-9371BEB73D30}' />
    </worksheet>
    <worksheet name='Geographic Grouping'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/GeographicGrouping?rev=' id='21903870' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' default='&quot;Central&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)]' />
              <geometry column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Latitude (generated)]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9F36A8EA-87E3-44CA-9178-7BAA47FFE2DB}' />
    </worksheet>
    <worksheet name='Heat Map'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/HeatMap?rev=' id='21903891' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Measles Cases Extract' name='federated.12a25yn0j3y0lv12hjel90sllvle' />
          </datasources>
          <datasource-dependencies datasource='federated.12a25yn0j3y0lv12hjel90sllvle'>
            <column caption='State' datatype='string' name='[Pivot field names]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Cases' datatype='integer' name='[Pivot field values]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='ordinal' />
            <column-instance column='[Pivot field names]' derivation='None' name='[none:Pivot field names:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pivot field values]' derivation='Sum' name='[sum:Pivot field values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.12a25yn0j3y0lv12hjel90sllvle].[none:YEAR:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12a25yn0j3y0lv12hjel90sllvle].[sum:Pivot field values:qk]' palette='Magma 20 diverging' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12a25yn0j3y0lv12hjel90sllvle].[sum:Pivot field values:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12a25yn0j3y0lv12hjel90sllvle].[none:Pivot field names:nk]</rows>
        <cols>[federated.12a25yn0j3y0lv12hjel90sllvle].[none:YEAR:ok]</cols>
      </table>
      <simple-id uuid='{98BAEF04-17C1-433C-A3DD-C55BE62F3CBE}' />
    </worksheet>
    <worksheet name='Heat Map (Continuous)'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/HeatMapContinuous?rev=' id='21903892' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Measles Cases Extract' name='federated.12a25yn0j3y0lv12hjel90sllvle' />
          </datasources>
          <datasource-dependencies datasource='federated.12a25yn0j3y0lv12hjel90sllvle'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
            <column caption='State' datatype='string' name='[Pivot field names]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Cases' datatype='integer' name='[Pivot field values]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot field names]' derivation='None' name='[none:Pivot field names:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot field values]' derivation='Sum' name='[sum:Pivot field values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.12a25yn0j3y0lv12hjel90sllvle].[none:YEAR:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.12a25yn0j3y0lv12hjel90sllvle].[sum:Pivot field values:qk]' />
              <size column='[federated.12a25yn0j3y0lv12hjel90sllvle].[avg:Number of Records:qk]' />
            </encodings>
            <reference-line axis-column='[federated.12a25yn0j3y0lv12hjel90sllvle].[none:YEAR:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='1963' value-column='[federated.12a25yn0j3y0lv12hjel90sllvle].[none:YEAR:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.12a25yn0j3y0lv12hjel90sllvle].[none:Pivot field names:nk]</rows>
        <cols>[federated.12a25yn0j3y0lv12hjel90sllvle].[none:YEAR:qk]</cols>
      </table>
      <simple-id uuid='{71F570A9-7956-4094-9743-FEA04C0FF9FC}' />
    </worksheet>
    <worksheet name='Hex Map'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/HexMap?rev=' id='21903895' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Hex Map' name='Workout Wednesday Superstore Sales' />
          </datasources>
          <datasource-dependencies datasource='Workout Wednesday Superstore Sales'>
            <column datatype='string' name='[Abbreviation]' role='dimension' type='nominal' />
            <column caption='Profit Ratio' datatype='real' default-format='*+0%;-0%' name='[Calculation_2679219574390378498]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column aggregation='Sum' datatype='real' name='[Column]' role='dimension' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Row]' role='dimension' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Abbreviation]' derivation='None' name='[none:Abbreviation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Column]' derivation='None' name='[none:Column:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Row]' derivation='None' name='[none:Row:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2679219574390378498]' derivation='User' name='[usr:Calculation_2679219574390378498:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Workout Wednesday Superstore Sales].[none:Row:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[Workout Wednesday Superstore Sales].[none:Column:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[Workout Wednesday Superstore Sales].[none:Row:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[Workout Wednesday Superstore Sales].[usr:Calculation_2679219574390378498:qk]' max='1.0' min='-1.0' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[Workout Wednesday Superstore Sales].[usr:Calculation_2679219574390378498:qk]' />
              <lod column='[Workout Wednesday Superstore Sales].[none:Abbreviation:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='Icons/Hexagon.png' />
                <format attr='size' value='5.7254762649536133' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='657' />
                <format attr='maxwidth' value='657' />
                <format attr='minheight' value='512' />
                <format attr='maxheight' value='512' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Workout Wednesday Superstore Sales].[none:Row:qk]</rows>
        <cols>[Workout Wednesday Superstore Sales].[none:Column:qk]</cols>
      </table>
      <simple-id uuid='{7F572DF0-C2EE-45E7-BB59-A3336805C2BA}' />
    </worksheet>
    <worksheet name='Highlighted Line Chart: Method 1'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/HighlightedLineChartMethod1?rev=' id='21903878' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Colors' datatype='string' name='[Color (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Color]' new-bin='true'>
                <bin default-name='false' value='&quot;Black&quot;'>
                  <value>&quot;Maroon&quot;</value>
                  <value>&quot;Mauv&quot;</value>
                  <value>&quot;Purple&quot;</value>
                  <value>&quot;Violet&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Blue&quot;'>
                  <value>&quot;Aquamarine&quot;</value>
                  <value>&quot;Blue&quot;</value>
                  <value>&quot;Teal&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Green&quot;'>
                  <value>&quot;Green&quot;</value>
                  <value>&quot;Turquoise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Red&quot;'>
                  <value>&quot;Crimson&quot;</value>
                  <value>&quot;Fuscia&quot;</value>
                  <value>&quot;Pink&quot;</value>
                  <value>&quot;Red&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Yellow&quot;'>
                  <value>&quot;Goldenrod&quot;</value>
                  <value>&quot;Indigo&quot;</value>
                  <value>&quot;Khaki&quot;</value>
                  <value>&quot;Orange&quot;</value>
                  <value>&quot;Puce&quot;</value>
                  <value>&quot;Yellow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' hidden='true' name='[Color]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</cols>
        <page-trail-options enabled='true' line-pattern='line-pattern-dashed' lines='true' mark-type='all' marks='false' trail-effect='none' />
      </table>
      <simple-id uuid='{7DB5EA97-F99E-4601-A6BB-ACEB8526E94D}' />
    </worksheet>
    <worksheet name='Highlighted Line Chart: Method 2'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/HighlightedLineChartMethod2?rev=' id='21903879' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Region' datatype='string' name='[Region Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;West&quot;'>
              <calculation class='tableau' formula='&quot;West&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Highlight region' datatype='boolean' name='[Calculation_151785433975320594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Region Parameter]=[State (group)]' />
            </column>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' default='&quot;Central&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_151785433975320594]' derivation='None' name='[none:Calculation_151785433975320594:nk]' pivot='key' type='nominal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Calculation_151785433975320594:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Calculation_151785433975320594:nk]' field-type='nominal' max-size='1' min-size='0.0228162' reverse='true' type='catsize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Calculation_151785433975320594:nk]' />
              <size column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Calculation_151785433975320594:nk]' />
              <lod column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.4382857084274292' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</cols>
        <page-trail-options enabled='true' line-pattern='line-pattern-dashed' lines='true' mark-type='all' marks='false' trail-effect='none' />
      </table>
      <simple-id uuid='{BB01E982-A18A-4198-8BCB-40AB6687F4D6}' />
    </worksheet>
    <worksheet name='Histogram'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/Histogram?rev=' id='21903867' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Gapminder' name='federated.1tqpy1s1y1uo3m1eka2jz0glef5q' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqpy1s1y1uo3m1eka2jz0glef5q'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='None' caption='Life Expectancy (Years) (bin)' datatype='integer' name='[Life Expectancy (Years) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Life Expectancy (Years)]' peg='0' size='5' />
            </column>
            <column datatype='real' name='[Life Expectancy (Years)]' role='measure' type='quantitative' />
            <column caption='Use Me' datatype='string' name='[Region (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Region]' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country Name]' derivation='CountD' name='[ctd:Country Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy (Years) (bin)]' derivation='None' name='[none:Life Expectancy (Years) (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region (copy)]' derivation='None' name='[none:Region (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Life Expectancy (Years) (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Life Expectancy (Years) (bin):ok]' />
              <groupfilter function='member' level='[none:Life Expectancy (Years) (bin):ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region (copy):nk]</column>
            <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Life Expectancy (Years) (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[ctd:Country Name:qk]</rows>
        <cols>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Life Expectancy (Years) (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[Life Expectancy (Years) (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{140EA8E6-74F0-44D5-A41F-352CA56B866F}' />
    </worksheet>
    <worksheet name='Hockey Stick Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/HockeyStickChart?rev=' id='21903885' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Top 100 IPOs' name='federated.1pvzafn150cndk172zsld170gnoh' />
          </datasources>
          <datasource-dependencies datasource='federated.1pvzafn150cndk172zsld170gnoh'>
            <column aggregation='Sum' caption='years since ipo' datatype='integer' name='[Calculation_151785433976746004]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Year]-[Year Founded]' />
            </column>
            <column datatype='string' name='[Company Name (Full)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Growth Group]' role='dimension' type='nominal' />
            <column datatype='real' name='[Revenue (Inflation Adjusted)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ticker]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year Founded]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Revenue (Inflation Adjusted)]' derivation='Sum' name='[cum:sum:Revenue (Inflation Adjusted):qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Calculation_151785433976746004]' derivation='None' name='[none:Calculation_151785433976746004:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Company Name (Full)]' derivation='None' name='[none:Company Name (Full):nk]' pivot='key' type='nominal' />
            <column-instance column='[Growth Group]' derivation='None' name='[none:Growth Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ticker]' derivation='None' name='[none:Ticker:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1pvzafn150cndk172zsld170gnoh].[none:Company Name (Full):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pvzafn150cndk172zsld170gnoh].[none:Growth Group:nk]' />
              <lod column='[federated.1pvzafn150cndk172zsld170gnoh].[none:Ticker:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pvzafn150cndk172zsld170gnoh].[cum:sum:Revenue (Inflation Adjusted):qk]</rows>
        <cols>[federated.1pvzafn150cndk172zsld170gnoh].[none:Calculation_151785433976746004:qk]</cols>
      </table>
      <simple-id uuid='{39030C38-2B90-4713-96AF-CEB23486E71B}' />
    </worksheet>
    <worksheet name='Jitter Plot'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/JitterPlot?rev=' id='21903906' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='RANDOM()' datatype='real' name='[Calculation_151785433981681693]' role='measure' type='quantitative' user:unnamed='Jitter Plot'>
              <calculation class='tableau' formula='RANDOM()' />
            </column>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Colors' datatype='string' name='[Color (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Color]' new-bin='true'>
                <bin default-name='false' value='&quot;Black&quot;'>
                  <value>&quot;Maroon&quot;</value>
                  <value>&quot;Mauv&quot;</value>
                  <value>&quot;Purple&quot;</value>
                  <value>&quot;Violet&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Blue&quot;'>
                  <value>&quot;Aquamarine&quot;</value>
                  <value>&quot;Blue&quot;</value>
                  <value>&quot;Teal&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Green&quot;'>
                  <value>&quot;Green&quot;</value>
                  <value>&quot;Turquoise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Red&quot;'>
                  <value>&quot;Crimson&quot;</value>
                  <value>&quot;Fuscia&quot;</value>
                  <value>&quot;Pink&quot;</value>
                  <value>&quot;Red&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Yellow&quot;'>
                  <value>&quot;Goldenrod&quot;</value>
                  <value>&quot;Indigo&quot;</value>
                  <value>&quot;Khaki&quot;</value>
                  <value>&quot;Orange&quot;</value>
                  <value>&quot;Puce&quot;</value>
                  <value>&quot;Yellow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' hidden='true' name='[Color]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_151785433981681693]' derivation='Avg' name='[avg:Calculation_151785433981681693:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[avg:Calculation_151785433981681693:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Order ID:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='65' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)] * [federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[avg:Calculation_151785433981681693:qk])</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]</cols>
      </table>
      <simple-id uuid='{7CBAC55C-BFC2-4C6C-93A0-3B31307A6C1C}' />
    </worksheet>
    <worksheet name='KPI Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/KPIChart?rev=' id='21903901' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Profitable' datatype='boolean' name='[Calculation_151785433980731418]' role='measure' type='nominal'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])&gt;0' />
            </column>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_151785433980731418]' derivation='User' name='[usr:Calculation_151785433980731418:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[Sample - Superstore].[usr:Calculation_151785433980731418:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Sub-Category:nk]</rows>
        <cols>[Sample - Superstore].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{2A147AA1-7421-434E-91B6-A367B807985A}' />
    </worksheet>
    <worksheet name='Line Chart (Continuous)'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/LineChartContinuous?rev=' id='21903872' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</cols>
      </table>
      <simple-id uuid='{D2F47E3F-7362-45C0-9823-674868167B6B}' />
    </worksheet>
    <worksheet name='Line Chart (Discrete)'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/LineChartDiscrete?rev=' id='21903871' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Purchase Date]' derivation='Quarter' name='[qr:Purchase Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Year' name='[yr:Purchase Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]</rows>
        <cols>([federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[yr:Purchase Date:ok] / [federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[qr:Purchase Date:ok])</cols>
      </table>
      <simple-id uuid='{1F2BADE1-9304-432E-B341-6FCD0DC9822D}' />
    </worksheet>
    <worksheet name='Lollipop Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/LollipopChart?rev=' id='21903833' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[Sample - Superstore].[none:Sub-Category:nk]' direction='DESC' using='[Sample - Superstore].[sum:Sales:qk]' />
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[Sample - Superstore].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='1' field='[Sample - Superstore].[sum:Sales:qk]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[Sample - Superstore].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.43878453969955444' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[Sample - Superstore].[sum:Sales:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Sub-Category:nk]</rows>
        <cols>([Sample - Superstore].[sum:Sales:qk] + [Sample - Superstore].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{FE7512A0-B3DB-48CD-9CB0-C00E6487C82F}' />
    </worksheet>
    <worksheet name='Nested Sorting'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/NestedSorting?rev=' id='21903852' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[Sample - Superstore].[none:Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[Sample - Superstore].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([Sample - Superstore].[none:Segment:nk] / [Sample - Superstore].[none:Category:nk])</rows>
        <cols>[Sample - Superstore].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{B839E40C-ECE5-4067-9048-778ACD0BD4FA}' />
    </worksheet>
    <worksheet name='Nested Sorting with Rank'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/NestedSortingwithRank?rev=' id='21903853' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='rank(SUM([Sales]))' datatype='integer' name='[Calculation_151785433969180681]' role='measure' type='quantitative' user:unnamed='Nested Sorting with Rank'>
              <calculation class='tableau' formula='rank(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433969180681]' derivation='User' name='[usr:Calculation_151785433969180681:ok:3]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[Sample - Superstore].[Category]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[Sample - Superstore].[usr:Calculation_151785433969180681:ok:3]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[Sample - Superstore].[usr:Calculation_151785433969180681:ok:3]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([Sample - Superstore].[none:Segment:nk] / ([Sample - Superstore].[usr:Calculation_151785433969180681:ok:3] / [Sample - Superstore].[none:Category:nk]))</rows>
        <cols>[Sample - Superstore].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{4439527D-69D3-4BC5-A288-7449ADCFD06C}' />
    </worksheet>
    <worksheet name='No Axis Bar Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/NoAxisBarChart?rev=' id='21903831' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[Sample - Superstore].[none:Sub-Category:nk]' direction='DESC' using='[Sample - Superstore].[sum:Sales:qk]' />
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <size column='[Sample - Superstore].[sum:Sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Sub-Category:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{FA30EA37-96F4-4EB8-82B9-6BF650E89414}' />
    </worksheet>
    <worksheet name='Packed Bubbles'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/PackedBubbles?rev=' id='21903914' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' />
              <lod column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Make:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{399A014C-F146-44C2-94AB-031CB7CE4BD9}' />
    </worksheet>
    <worksheet name='Pie Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/PieChart?rev=' id='21903909' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' default='&quot;Central&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)]' direction='DESC' using='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' />
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)]' />
              <wedge-size column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3A1776DD-DD92-43FC-BDAC-464E41E389AD}' />
    </worksheet>
    <worksheet name='Rounded Bar Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/RoundedBarChart?rev=' id='21903848' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='avg(0)' datatype='real' name='[Calculation_151785433967259653]' role='measure' type='quantitative' user:unnamed='Rounded Bar Chart'>
              <calculation class='tableau' formula='avg(0)' />
            </column>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433967259653]' derivation='User' name='[usr:Calculation_151785433967259653:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Superstore].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sample - Superstore].[usr:Calculation_151785433967259653:qk]&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[Sample - Superstore].[none:Sub-Category:nk]' direction='DESC' using='[Sample - Superstore].[sum:Sales:qk]' />
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
            <column>[Sample - Superstore].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[Multiple Values]' field-type='quantitative' min='0.0' range-type='fixedmin' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <path column='[Sample - Superstore].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='9.2114095687866211' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Sub-Category:nk]</rows>
        <cols>[Sample - Superstore].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{9A0D7E2C-9819-4DD2-99AB-C17C1099DFE0}' />
    </worksheet>
    <worksheet name='Scatterplot'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/Scatterplot?rev=' id='21903861' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Gapminder' name='federated.1tqpy1s1y1uo3m1eka2jz0glef5q' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqpy1s1y1uo3m1eka2jz0glef5q'>
            <column datatype='real' name='[Children per Woman (Fertility Rate)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Life Expectancy (Years)]' role='measure' type='quantitative' />
            <column caption='Use Me' datatype='string' name='[Region (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Region]' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region (copy)]' derivation='None' name='[none:Region (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Children per Woman (Fertility Rate)]' derivation='Sum' name='[sum:Children per Woman (Fertility Rate):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy (Years)]' derivation='Sum' name='[sum:Life Expectancy (Years):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region (copy):nk]</column>
            <column>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Life Expectancy (Years):qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Life Expectancy (Years):qk]</rows>
        <cols>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Children per Woman (Fertility Rate):qk]</cols>
      </table>
      <simple-id uuid='{3B575FEF-667D-4905-8215-FACF562EFD7D}' />
    </worksheet>
    <worksheet name='Simple Pareto Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/SimpleParetoChart?rev=' id='21903897' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:cum:sum:Profit:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[Sample - Superstore].[none:Customer ID:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[Sample - Superstore].[none:Customer ID:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[Sample - Superstore].[none:Customer ID:nk]' direction='DESC' using='[Sample - Superstore].[sum:Profit:qk]' />
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[Sample - Superstore].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[pcto:cum:sum:Profit:qk:1]</rows>
        <cols>[Sample - Superstore].[none:Customer ID:nk]</cols>
      </table>
      <simple-id uuid='{BE2E9ACF-5408-4475-8677-BE9264F27A2D}' />
    </worksheet>
    <worksheet name='Single Line with Forecast'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/SingleLinewithForecast?rev=' id='21903889' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[Price]' derivation='Sum' forecast-column-base='[sum:Price:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[fVal:sum:Price:qk]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='custom' range-type='auto' season-type='ets-additive' show-prediction-bands='false' trend-type='ets-additive' />
      </table>
      <simple-id uuid='{02D8DFFE-4152-494D-9B4C-7A8C77C8ACF1}' />
    </worksheet>
    <worksheet name='Slope Graph: Method 1'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/SlopeGraphMethod1?rev=' id='21903883' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='MLB Beer Prices Extract' name='federated.0wrjl5h0i4y1dq18z0hbr10hi7iw' />
          </datasources>
          <datasource-dependencies datasource='federated.0wrjl5h0i4y1dq18z0hbr10hi7iw'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Price per Ounce]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Price per Ounce]' derivation='Sum' name='[sum:Price per Ounce:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wrjl5h0i4y1dq18z0hbr10hi7iw].[none:Year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Year:ok]' member='2013' />
              <groupfilter function='member' level='[none:Year:ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wrjl5h0i4y1dq18z0hbr10hi7iw].[none:City:nk]</column>
            <column>[federated.0wrjl5h0i4y1dq18z0hbr10hi7iw].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='140' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0wrjl5h0i4y1dq18z0hbr10hi7iw].[none:Team:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wrjl5h0i4y1dq18z0hbr10hi7iw].[sum:Price per Ounce:qk]</rows>
        <cols>[federated.0wrjl5h0i4y1dq18z0hbr10hi7iw].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{D96F9F8E-862F-43D9-B286-789FC66E4BB2}' />
    </worksheet>
    <worksheet name='Slope Graph: Method 2'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/SlopeGraphMethod2?rev=' id='21903884' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Obesity vs. Education' name='federated.1qp3t760n9ryc00zr15730ttix9k' />
          </datasources>
          <datasource-dependencies datasource='federated.1qp3t760n9ryc00zr15730ttix9k'>
            <column caption='Ba Or Higher' datatype='real' name='[BA OR HIGHER]' role='measure' type='quantitative' />
            <column caption='Color' datatype='boolean' name='[Calculation_151785433984864288]' role='measure' type='nominal'>
              <calculation class='tableau' formula='SUM([BA OR HIGHER])&gt;SUM([OBESITY %])' />
            </column>
            <column caption='Sort' datatype='real' name='[Calculation_151785433985024033]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([BA OR HIGHER])-SUM([OBESITY %])' />
            </column>
            <column caption='Obesity %' datatype='real' name='[OBESITY %]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Abbr]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State Abbr]' derivation='None' name='[none:State Abbr:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[BA OR HIGHER]' derivation='Sum' name='[sum:BA OR HIGHER:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OBESITY %]' derivation='Sum' name='[sum:OBESITY %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433984864288]' derivation='User' name='[usr:Calculation_151785433984864288:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_151785433985024033]' derivation='User' name='[usr:Calculation_151785433985024033:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qp3t760n9ryc00zr15730ttix9k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qp3t760n9ryc00zr15730ttix9k].[sum:BA OR HIGHER:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qp3t760n9ryc00zr15730ttix9k].[sum:OBESITY \%:qk]&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1qp3t760n9ryc00zr15730ttix9k].[none:State Abbr:nk]' direction='DESC' using='[federated.1qp3t760n9ryc00zr15730ttix9k].[usr:Calculation_151785433985024033:qk]' />
          <manual-sort column='[federated.1qp3t760n9ryc00zr15730ttix9k].[usr:Calculation_151785433984864288:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1qp3t760n9ryc00zr15730ttix9k].[none:State:nk]</column>
            <column>[federated.1qp3t760n9ryc00zr15730ttix9k].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='140' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1qp3t760n9ryc00zr15730ttix9k].[usr:Calculation_151785433984864288:nk]' />
              <lod column='[federated.1qp3t760n9ryc00zr15730ttix9k].[none:State Abbr:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='size' value='0.40580111742019653' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qp3t760n9ryc00zr15730ttix9k].[Multiple Values]</rows>
        <cols>[federated.1qp3t760n9ryc00zr15730ttix9k].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E314943D-2445-4144-8418-92EFC7C8BB10}' />
    </worksheet>
    <worksheet name='Small Multiple Area Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/SmallMultipleAreaChart?rev=' id='21903860' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Five Year Cancer Survival Rates in USA Extract' name='federated.106g7yy0yvz4iw1ghef0r16vljmb' />
          </datasources>
          <datasource-dependencies datasource='federated.106g7yy0yvz4iw1ghef0r16vljmb'>
            <column caption='Mortality Rate' datatype='real' name='[Calculation_151785433970638860]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1-[Survival Rate]' />
            </column>
            <column caption='2013 Survival Rate' datatype='real' name='[Calculation_151785433971154959]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Year]=2013 then [Survival Rate] END' />
            </column>
            <column caption='Columns' datatype='real' name='[Calculation_475974238064123913]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='(index()-1)%(round(sqrt(size())))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rows' datatype='integer' name='[Calculation_475974238064164874]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='int( (index()-1)/(round(sqrt(size()))))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Cancer Type]' role='dimension' type='nominal' />
            <column caption='Use Me' datatype='string' name='[Gender (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Gender]' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Race]' role='dimension' type='nominal' />
            <column datatype='real' name='[Survival Rate]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Cancer Type]' derivation='None' name='[none:Cancer Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender (copy)]' derivation='None' name='[none:Gender (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Race]' derivation='None' name='[none:Race:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433970638860]' derivation='Sum' name='[sum:Calculation_151785433970638860:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_151785433971154959]' derivation='Sum' name='[sum:Calculation_151785433971154959:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Survival Rate]' derivation='Sum' name='[sum:Survival Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_475974238064123913]' derivation='User' name='[usr:Calculation_475974238064123913:ok:4]' pivot='key' type='ordinal'>
              <table-calc level-address='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[Cancer Type]' ordering-type='Field'>
                <order field='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[Cancer Type]' />
                <order field='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Year:qk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_475974238064164874]' derivation='User' name='[usr:Calculation_475974238064164874:ok:4]' pivot='key' type='ordinal'>
              <table-calc level-address='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[Cancer Type]' ordering-type='Field'>
                <order field='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[Cancer Type]' />
                <order field='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Year:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.106g7yy0yvz4iw1ghef0r16vljmb].[sum:Calculation_151785433970638860:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.106g7yy0yvz4iw1ghef0r16vljmb].[sum:Survival Rate:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Cancer Type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Cancer Type:nk]' />
              <groupfilter function='member' level='[none:Cancer Type:nk]' member='&quot;All cancers&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Cancer Type:nk]' direction='DESC' using='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[sum:Calculation_151785433971154959:qk]' />
          <filter class='categorical' column='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Gender:nk]'>
            <groupfilter function='member' level='[none:Gender:nk]' member='&quot;total&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Race:nk]'>
            <groupfilter function='member' level='[none:Race:nk]' member='&quot;All races&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Year:qk]' included-values='in-range'>
            <min>1977</min>
            <max>2013</max>
          </filter>
          <slices>
            <column>[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Cancer Type:nk]</column>
            <column>[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Gender (copy):nk]</column>
            <column>[federated.106g7yy0yvz4iw1ghef0r16vljmb].[:Measure Names]</column>
            <column>[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Year:qk]</column>
            <column>[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Gender:nk]</column>
            <column>[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Race:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[usr:Calculation_475974238064123913:ok:4]' value='false' />
            <format attr='display' field='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[usr:Calculation_475974238064164874:ok:4]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[:Measure Names]' />
              <lod column='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Cancer Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.106g7yy0yvz4iw1ghef0r16vljmb].[usr:Calculation_475974238064164874:ok:4] * [federated.106g7yy0yvz4iw1ghef0r16vljmb].[Multiple Values])</rows>
        <cols>([federated.106g7yy0yvz4iw1ghef0r16vljmb].[usr:Calculation_475974238064123913:ok:4] * [federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Year:qk])</cols>
      </table>
      <simple-id uuid='{CB2A8D0A-F2A2-481D-8859-9BAD00C86210}' />
    </worksheet>
    <worksheet name='Small Multiple Line Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/SmallMultipleLineChart?rev=' id='21903873' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Colors' datatype='string' name='[Color (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Color]' new-bin='true'>
                <bin default-name='false' value='&quot;Black&quot;'>
                  <value>&quot;Maroon&quot;</value>
                  <value>&quot;Mauv&quot;</value>
                  <value>&quot;Purple&quot;</value>
                  <value>&quot;Violet&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Blue&quot;'>
                  <value>&quot;Aquamarine&quot;</value>
                  <value>&quot;Blue&quot;</value>
                  <value>&quot;Teal&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Green&quot;'>
                  <value>&quot;Green&quot;</value>
                  <value>&quot;Turquoise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Red&quot;'>
                  <value>&quot;Crimson&quot;</value>
                  <value>&quot;Fuscia&quot;</value>
                  <value>&quot;Pink&quot;</value>
                  <value>&quot;Red&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Yellow&quot;'>
                  <value>&quot;Goldenrod&quot;</value>
                  <value>&quot;Indigo&quot;</value>
                  <value>&quot;Khaki&quot;</value>
                  <value>&quot;Orange&quot;</value>
                  <value>&quot;Puce&quot;</value>
                  <value>&quot;Yellow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' hidden='true' name='[Color]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' default='&quot;Central&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)] * [federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk])</rows>
        <cols>([federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)] * [federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk])</cols>
      </table>
      <simple-id uuid='{B92ED3DD-E257-4991-BD37-7929B49EC4BD}' />
    </worksheet>
    <worksheet name='Sparkbars'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/Sparkbars?rev=' id='21903882' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Colors' datatype='string' name='[Color (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Color]' new-bin='true'>
                <bin default-name='false' value='&quot;Black&quot;'>
                  <value>&quot;Maroon&quot;</value>
                  <value>&quot;Mauv&quot;</value>
                  <value>&quot;Purple&quot;</value>
                  <value>&quot;Violet&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Blue&quot;'>
                  <value>&quot;Aquamarine&quot;</value>
                  <value>&quot;Blue&quot;</value>
                  <value>&quot;Teal&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Green&quot;'>
                  <value>&quot;Green&quot;</value>
                  <value>&quot;Turquoise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Red&quot;'>
                  <value>&quot;Crimson&quot;</value>
                  <value>&quot;Fuscia&quot;</value>
                  <value>&quot;Pink&quot;</value>
                  <value>&quot;Red&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Yellow&quot;'>
                  <value>&quot;Goldenrod&quot;</value>
                  <value>&quot;Indigo&quot;</value>
                  <value>&quot;Khaki&quot;</value>
                  <value>&quot;Orange&quot;</value>
                  <value>&quot;Puce&quot;</value>
                  <value>&quot;Yellow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' hidden='true' name='[Color]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' default='&quot;Central&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='250' />
                <format attr='maxwidth' value='250' />
                <format attr='minheight' value='87' />
                <format attr='maxheight' value='87' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)] * [federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk])</rows>
        <cols>([federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)] * [federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk])</cols>
      </table>
      <simple-id uuid='{367ABA4C-6AD6-4AA5-B1CE-290EDA038F9C}' />
    </worksheet>
    <worksheet name='Sparklines with Labels'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/SparklineswithLabels?rev=' id='21903881' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' default='&quot;Central&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[avg:Price:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[avg:Price:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[avg:Price:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]' enable-instant-analytics='false' formula='constant' id='refline0' label-type='none' paired-id='refline1' scope='per-table' symmetric='false' value='#2013-01-01 00:00:00#' value-column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]' z-order='1' />
            <reference-line axis-column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]' enable-instant-analytics='false' formula='constant' id='refline1' label-type='none' paired-id='refline0' scope='per-table' symmetric='false' value='#2020-10-01 00:00:00#' value-column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='195' />
                <format attr='maxwidth' value='195' />
                <format attr='minheight' value='123' />
                <format attr='maxheight' value='123' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)] * [federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[avg:Price:qk])</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]</cols>
      </table>
      <simple-id uuid='{6F6E5020-EBF9-4D24-A24D-BBE7F7520BA5}' />
    </worksheet>
    <worksheet name='Stacked Area Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/StackedAreaChart?rev=' id='21903856' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[Sample - Superstore].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[Sample - Superstore].[none:Region:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[sum:Sales:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sample - Superstore].[sum:Sales:qk] + [Sample - Superstore].[sum:Sales:qk])</rows>
        <cols>[Sample - Superstore].[tqr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{FDE10D62-041F-482E-A7AD-D4904575BAE0}' />
    </worksheet>
    <worksheet name='Stacked bar chart (sales per month)'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/Stackedbarchartsalespermonth?rev=' id='21903836' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Sample - Superstore].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[sum:Sales:qk]</rows>
        <cols>[Sample - Superstore].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{7F95A6D5-2F04-496C-A141-187FDB72208A}' />
    </worksheet>
    <worksheet name='Stacked bar chart (with a total line)'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/Stackedbarchartwithatotalline?rev=' id='21903837' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[Sample - Superstore].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Sample - Superstore].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[sum:Sales:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sample - Superstore].[sum:Sales:qk] + [Sample - Superstore].[sum:Sales:qk])</rows>
        <cols>[Sample - Superstore].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{4328313D-BDF1-4FE2-BACE-BA48A6FFE126}' />
    </worksheet>
    <worksheet name='Stacked bar chart (with end of bar label): Method 1'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/StackedbarchartwithendofbarlabelMethod1?rev=' id='21903838' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='off' />
            <format attr='text-align' id='refline0' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Sample - Superstore].[none:Category:nk]' />
            </encodings>
            <reference-line axis-column='[Sample - Superstore].[sum:Sales:qk]' enable-instant-analytics='false' formula='sum' id='refline0' label-type='value' scope='per-cell' value-column='[Sample - Superstore].[sum:Sales:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[sum:Sales:qk]</rows>
        <cols>[Sample - Superstore].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{AF3ABC3D-3386-44FF-9AE6-D2BED78111AE}' />
    </worksheet>
    <worksheet name='Stacked bar chart (with end of bar label): Method 2'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/StackedbarchartwithendofbarlabelMethod2?rev=' id='21903839' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Use Me' datatype='string' name='[Category (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Category]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category (copy)]' derivation='None' name='[none:Category (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[Sample - Superstore].[none:Category (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[Sample - Superstore].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[Sample - Superstore].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[sum:Sales:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sample - Superstore].[sum:Sales:qk] + [Sample - Superstore].[sum:Sales:qk])</rows>
        <cols>[Sample - Superstore].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{BFCC7B6A-4129-4EDB-A8D7-03D4C68B4AF5}' />
    </worksheet>
    <worksheet name='Stepped Common Baseline Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/SteppedCommonBaselineChart?rev=' id='21903877' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='First Purchase Date' datatype='date' name='[Calculation_151785433974398992]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ FIXED [Color (group)] : MIN([Purchase Date]) }' />
            </column>
            <column aggregation='Sum' caption='Elapsed Months' datatype='integer' name='[Calculation_151785433974505489]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;month&apos;,[Calculation_151785433974398992],[Purchase Date])' />
            </column>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Colors' datatype='string' name='[Color (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Color]' new-bin='true'>
                <bin default-name='false' value='&quot;Black&quot;'>
                  <value>&quot;Maroon&quot;</value>
                  <value>&quot;Mauv&quot;</value>
                  <value>&quot;Purple&quot;</value>
                  <value>&quot;Violet&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Blue&quot;'>
                  <value>&quot;Aquamarine&quot;</value>
                  <value>&quot;Blue&quot;</value>
                  <value>&quot;Teal&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Green&quot;'>
                  <value>&quot;Green&quot;</value>
                  <value>&quot;Turquoise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Red&quot;'>
                  <value>&quot;Crimson&quot;</value>
                  <value>&quot;Fuscia&quot;</value>
                  <value>&quot;Pink&quot;</value>
                  <value>&quot;Red&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Yellow&quot;'>
                  <value>&quot;Goldenrod&quot;</value>
                  <value>&quot;Indigo&quot;</value>
                  <value>&quot;Khaki&quot;</value>
                  <value>&quot;Orange&quot;</value>
                  <value>&quot;Puce&quot;</value>
                  <value>&quot;Yellow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' hidden='true' name='[Color]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[Price]' derivation='Sum' name='[cum:sum:Price:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Calculation_151785433974505489]' derivation='None' name='[none:Calculation_151785433974505489:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[cum:sum:Price:qk]</rows>
        <cols>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Calculation_151785433974505489:qk]</cols>
        <page-trail-options enabled='true' line-pattern='line-pattern-dashed' lines='true' mark-type='all' marks='false' trail-effect='none' />
      </table>
      <simple-id uuid='{B6543A5E-41FE-44CE-AC26-CF5ED73F256F}' />
    </worksheet>
    <worksheet name='Treemap'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/Treemap?rev=' id='21903912' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Colors' datatype='string' name='[Color (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Color]' new-bin='true'>
                <bin default-name='false' value='&quot;Black&quot;'>
                  <value>&quot;Maroon&quot;</value>
                  <value>&quot;Mauv&quot;</value>
                  <value>&quot;Purple&quot;</value>
                  <value>&quot;Violet&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Blue&quot;'>
                  <value>&quot;Aquamarine&quot;</value>
                  <value>&quot;Blue&quot;</value>
                  <value>&quot;Teal&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Green&quot;'>
                  <value>&quot;Green&quot;</value>
                  <value>&quot;Turquoise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Red&quot;'>
                  <value>&quot;Crimson&quot;</value>
                  <value>&quot;Fuscia&quot;</value>
                  <value>&quot;Pink&quot;</value>
                  <value>&quot;Red&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Yellow&quot;'>
                  <value>&quot;Goldenrod&quot;</value>
                  <value>&quot;Indigo&quot;</value>
                  <value>&quot;Khaki&quot;</value>
                  <value>&quot;Orange&quot;</value>
                  <value>&quot;Puce&quot;</value>
                  <value>&quot;Yellow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' hidden='true' name='[Color]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' default='&quot;Central&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' />
              <lod column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)]' />
              <size column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{80723995-4DE2-40FB-BC01-3234AB179B9A}' />
    </worksheet>
    <worksheet name='Treemap Bar Chart'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/TreemapBarChart?rev=' id='21903913' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Car Purchases' name='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0j6jkqj0ik8noa1cr5yxu1skwdf0'>
            <column caption='Use Me' datatype='string' name='[City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[City]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Colors' datatype='string' name='[Color (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Color]' new-bin='true'>
                <bin default-name='false' value='&quot;Black&quot;'>
                  <value>&quot;Maroon&quot;</value>
                  <value>&quot;Mauv&quot;</value>
                  <value>&quot;Purple&quot;</value>
                  <value>&quot;Violet&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Blue&quot;'>
                  <value>&quot;Aquamarine&quot;</value>
                  <value>&quot;Blue&quot;</value>
                  <value>&quot;Teal&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Green&quot;'>
                  <value>&quot;Green&quot;</value>
                  <value>&quot;Turquoise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Red&quot;'>
                  <value>&quot;Crimson&quot;</value>
                  <value>&quot;Fuscia&quot;</value>
                  <value>&quot;Pink&quot;</value>
                  <value>&quot;Red&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Yellow&quot;'>
                  <value>&quot;Goldenrod&quot;</value>
                  <value>&quot;Indigo&quot;</value>
                  <value>&quot;Khaki&quot;</value>
                  <value>&quot;Orange&quot;</value>
                  <value>&quot;Puce&quot;</value>
                  <value>&quot;Yellow&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' hidden='true' name='[Color]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[City (copy)]' derivation='None' name='[none:City (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Year' name='[yr:Purchase Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' />
              <size column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Price:qk]' />
              <lod column='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Make:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[yr:Purchase Date:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{A45FE412-1866-4C01-9272-8260168AEA61}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Meetup'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/Meetup?rev=' id='21903829' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='web' _.fcp.SetMembershipControl.true...type-v2='web' forceUpdate='' h='86783' id='1' param='https://www.meetup.com/Lets-talk-Data/' w='98698' x='651' y='1146'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='10925' id='3' w='98698' x='651' y='87929'>
            <formatted-text>
              <run auto-url='true' bold='true' fontalignment='1' fontcolor='#1b1b1b' fontsize='36' hyperlink='tabdoc:load-url url=&amp;quot;http://til.bi/talkdata&amp;quot;'>http://til.bi/talkdata</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{78DF020D-1478-47E7-ACBD-3445C926E2FF}' />
    </dashboard>
    <dashboard name='Recording'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/Recording?rev=' id='21903830' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='web' _.fcp.SetMembershipControl.true...type-v2='web' forceUpdate='' h='97708' id='1' param='https://www.youtube.com/embed/S5QN-fK2-wU' w='98698' x='651' y='1146'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{4B5BA82C-1508-4E0C-91AC-EE888C650A0C}' />
    </dashboard>
    <dashboard name='Small Multiple Area Chart Example'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/SmallMultipleAreaChartExample?rev=' id='21903859' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <style />
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' preset-index='3' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='97714' id='1' is-scaled='1' param='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Image/Klaus.jpg' w='98222' x='889' y='1143'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{C53A556B-7CF1-4B01-87D5-83DB56C699EC}' />
    </dashboard>
    <dashboard name='Title'>
      <repository-location derived-from='https://public.tableau.com/workbooks/TipsTricks-ChartsEdition/Title?rev=' id='21903828' path='/workbooks/TipsTricks-ChartsEdition' revision='' />
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='21773' id='3' w='99002' x='499' y='77249'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#333333' fontsize='24'>Andy Kriebel  |  @VizWizBI</run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontcolor='#333333' fontsize='24'>Head Coach - The Information Lab Data School</run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontcolor='#333333' fontsize='18'>www.vizwiz.com  </run>
              <run fontalignment='1' fontcolor='#dc4130' fontsize='18'>●</run>
              <run fontalignment='1' fontcolor='#133576' fontsize='18'>●●●</run>
              <run fontalignment='1' fontcolor='#333333' fontsize='18'>  makeovermonday.co.uk  </run>
              <run fontalignment='1' fontcolor='#dc4130' fontsize='18'>●</run>
              <run fontalignment='1' fontcolor='#133576' fontsize='18'>●●●</run>
              <run fontalignment='1' fontcolor='#333333' fontsize='18'>  dataschool.co.uk</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='76271' id='4' is-scaled='1' param='C:/Users/Elias/projects/Data-Analysis-Projects/Project 8 - Tableau/Tips &amp; Tricks - Charts Edition.twb Files/Image/Title.png' w='99002' x='499' y='978'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{7B16F9CC-34B7-4A01-9C2B-2756792E608B}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='211'>
    <window class='dashboard' maximized='true' name='Title'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{5B231F57-106B-4279-853E-AA95B3CC1A19}' />
    </window>
    <window class='dashboard' name='Meetup'>
      <viewpoints />
      <active id='1' />
      <simple-id uuid='{EDBD85AD-A014-410C-A6B9-97CBEE80348D}' />
    </window>
    <window class='dashboard' name='Recording'>
      <viewpoints />
      <active id='1' />
      <simple-id uuid='{61AB58D8-18BE-4934-BB95-A235BBC6C9A9}' />
    </window>
    <window class='worksheet' name='No Axis Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Category (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2DB0626-EDE6-4E14-AC01-799127D053E6}' />
    </window>
    <window class='worksheet' name='Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Category (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E7A7519-4266-48C6-A282-99563E4270D3}' />
    </window>
    <window class='worksheet' name='Lollipop Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Category (copy):nk]</field>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB611622-32B0-4453-9D20-5375ECA2DADF}' />
    </window>
    <window class='worksheet' name='Bar Chart by Month (with spacing)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Category (copy):nk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCE589AF-6124-4972-9783-68EA4EFB763E}' />
    </window>
    <window class='worksheet' name='Bar Chart by Month (without spacing)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Category (copy):nk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8204F3D-AD42-4525-A976-DAB89AFAECFA}' />
    </window>
    <window class='worksheet' name='Stacked bar chart (sales per month)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[mn:Order Date:ok]</field>
            <field>[Sample - Superstore].[none:Category (copy):nk]</field>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8552D85-2EC4-41F7-A863-69AB8B986DCF}' />
    </window>
    <window class='worksheet' name='Stacked bar chart (with a total line)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[Sample - Superstore].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Category (copy):nk]</field>
            <field>[Sample - Superstore].[none:Category:nk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B520EB87-EF3F-4123-B91B-1F5A7C5B35CE}' />
    </window>
    <window class='worksheet' name='Stacked bar chart (with end of bar label): Method 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[mn:Order Date:ok]</field>
            <field>[Sample - Superstore].[none:Category (copy):nk]</field>
            <field>[Sample - Superstore].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E19F88BC-57FD-4CA0-B83F-99A569ED77DD}' />
    </window>
    <window class='worksheet' name='Stacked bar chart (with end of bar label): Method 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[Sample - Superstore].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[mn:Order Date:ok]</field>
            <field>[Sample - Superstore].[none:Category (copy):nk]</field>
            <field>[Sample - Superstore].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{51D7751F-42A5-4F76-AAC0-C428CA2A0020}' />
    </window>
    <window class='worksheet' name='Bar-in-bar chart: Method 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[yr:Order Date:ok]' type='color' />
            <card pane-specification-id='0' param='[Sample - Superstore].[yr:Order Date:ok]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{94F61D46-D96B-46E4-8A0E-CC379BEDC271}' />
    </window>
    <window class='worksheet' name='Bar-in-bar chart: Method 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[:Measure Names]' type='color' />
            <card pane-specification-id='0' param='[Sample - Superstore].[:Measure Names]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[:Measure Names]</field>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D44C934F-CA89-487A-AD01-EF276E91CC20}' />
    </window>
    <window class='worksheet' name='Bar-in-bar chart: Method 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[Sample - Superstore].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[:Measure Names]</field>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F78D972-59FF-466A-B4DE-985051494891}' />
    </window>
    <window class='worksheet' name='Bullet Graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6753ABED-C83C-47D8-B418-33E1618EE8F9}' />
    </window>
    <window class='worksheet' name='Comparison to Prior Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF761BEE-BBE4-48C3-AADF-F2F510E4291F}' />
    </window>
    <window class='worksheet' name='Comparison to Prior Year (with variance)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[usr:Calculation_151785433966313473:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B8A4E62-9216-4D79-8528-395F24CCD86B}' />
    </window>
    <window class='worksheet' name='Comparison to Prior Year (single color variance)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[usr:Calculation_151785433966657539:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
            <field>[Sample - Superstore].[usr:Calculation_151785433966657539:nk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95F2B55B-9F1F-4E7F-AFE9-394F36C4F141}' />
    </window>
    <window class='worksheet' name='100% Stacked Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[mn:Order Date:ok]</field>
            <field>[Sample - Superstore].[none:Region:nk]</field>
            <field>[Sample - Superstore].[none:Ship Mode:nk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BB4CB37-08B9-47AB-B0E5-396BBCD27133}' />
    </window>
    <window class='worksheet' name='Rounded Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[:Measure Names]</field>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0878781A-F411-4EC4-87AD-FDFAA8AC6217}' />
    </window>
    <window class='worksheet' name='Barbell Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[Sample - Superstore].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[:Measure Names]</field>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C99C66E1-E38A-44D0-84E4-8FD9230782BF}' />
    </window>
    <window class='worksheet' name='Diverging Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[:Measure Names]</field>
            <field>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[none:Country (copy):nk]</field>
            <field>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[none:Country:nk]</field>
            <field>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[none:Pivot Field Names:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11D3F9B0-3923-43C9-A714-FC61FA0646EE}' />
    </window>
    <window class='worksheet' name='Diverging Area Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[:Measure Names]</field>
            <field>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[none:Country (copy):nk]</field>
            <field>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[none:Country:nk]</field>
            <field>[federated.1skpayh1cn9yes1ac0p7s08rw3gj].[none:Pivot Field Names:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BAEC374-B2C2-4B90-B56B-5325A329C7EC}' />
    </window>
    <window class='worksheet' name='Nested Sorting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Category:nk]</field>
            <field>[Sample - Superstore].[none:Region:nk]</field>
            <field>[Sample - Superstore].[none:Segment:nk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7326E892-53FC-40B7-B4B2-A8C85EDFA8C0}' />
    </window>
    <window class='worksheet' name='Nested Sorting with Rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Category:nk]</field>
            <field>[Sample - Superstore].[none:Segment:nk]</field>
            <field>[Sample - Superstore].[usr:Calculation_151785433969180681:ok:3]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{957EA6F4-8F3F-4A41-A99C-782826AD8C39}' />
    </window>
    <window class='worksheet' name='Area Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[tmn:Order Date:qk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{65E398AA-76FB-4DB2-8AAC-747470504799}' />
    </window>
    <window class='worksheet' name='Area Chart with Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[tmn:Order Date:qk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D987C3F-99A1-4EC6-89B4-689320261CAA}' />
    </window>
    <window class='worksheet' name='Stacked Area Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[Sample - Superstore].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Region:nk]</field>
            <field>[Sample - Superstore].[tqr:Order Date:qk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50C68832-B013-4B23-A1FE-165B4E231302}' />
    </window>
    <window class='worksheet' name='100% Stacked Area Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Ship Mode:nk]</field>
            <field>[Sample - Superstore].[tqr:Order Date:qk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ECF55240-5069-41DB-BFF4-0419A5262175}' />
    </window>
    <window class='worksheet' name='100% Stacked Area Chart with Divider Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[Sample - Superstore].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Ship Mode:nk]</field>
            <field>[Sample - Superstore].[tqr:Order Date:qk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2856D9A3-C61D-406B-9073-747410D29DA3}' />
    </window>
    <window class='dashboard' name='Small Multiple Area Chart Example'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{9F9212DE-718D-4EF4-8E07-6B49AEDEE896}' />
    </window>
    <window class='worksheet' name='Small Multiple Area Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.106g7yy0yvz4iw1ghef0r16vljmb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.106g7yy0yvz4iw1ghef0r16vljmb].[:Measure Names]</field>
            <field>[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Cancer Type:nk]</field>
            <field>[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Gender:nk]</field>
            <field>[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Race:nk]</field>
            <field>[federated.106g7yy0yvz4iw1ghef0r16vljmb].[none:Year:qk]</field>
            <field>[federated.106g7yy0yvz4iw1ghef0r16vljmb].[usr:Calculation_475974238064123913:ok]</field>
            <field>[federated.106g7yy0yvz4iw1ghef0r16vljmb].[usr:Calculation_475974238064164874:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A087FD6E-24FD-4B2C-8995-7846B222089D}' />
    </window>
    <window class='worksheet' name='Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Country Name:nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region (copy):nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F942427B-E162-4028-B061-50ECB023AFDF}' />
    </window>
    <window class='worksheet' name='Colored Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Country Name:nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region (copy):nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region:nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52B9E945-47E2-46D6-BB2C-C9334A34A03C}' />
    </window>
    <window class='worksheet' name='Colored &amp; Sized Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Population:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Country Name:nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region (copy):nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region:nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE12062C-FEEC-448A-A32F-75BD2D460C3A}' />
    </window>
    <window class='worksheet' name='Animated Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Population:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Country Name:nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region (copy):nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region:nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{083E7C95-0CA5-4CE2-BCBB-56AF98594654}' />
    </window>
    <window class='worksheet' name='Annotated Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[sum:Population:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Country Name:nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region (copy):nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Region:nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4604A11C-C76C-42E2-919C-0BDF49D5176C}' />
    </window>
    <window class='worksheet' name='Connected Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0fyl1iy05z739a1eonl6v0ss7gzi].[none:Country Name:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0fyl1iy05z739a1eonl6v0ss7gzi].[none:Country Name:nk]' pattern='United Kingdom' type='highlight'>
          <color-one-way>
            <field>[federated.0fyl1iy05z739a1eonl6v0ss7gzi].[none:Country Code:nk]</field>
            <field>[federated.0fyl1iy05z739a1eonl6v0ss7gzi].[none:Country Name:nk]</field>
            <field>[federated.0fyl1iy05z739a1eonl6v0ss7gzi].[none:Year:qk]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;United Kingdom&quot;</bucket>
          </bucket-selection>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{88262B21-1F5A-4AF1-82C9-76656F6B2903}' />
    </window>
    <window class='worksheet' name='Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Life Expectancy (Years) (bin):ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City:nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Life Expectancy (Years) (bin):ok]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{DE4D6C3A-FE56-4340-ABCE-9C65253F3845}' />
    </window>
    <window class='worksheet' name='Animated Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2013</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Life Expectancy (Years) (bin):ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City:nk]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Life Expectancy (Years) (bin):ok]</field>
            <field>[federated.1tqpy1s1y1uo3m1eka2jz0glef5q].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{340AA9FD-AAE7-4A72-8CCE-D91F036A0BE4}' />
    </window>
    <window class='worksheet' name='Basic Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CECD5A60-1A51-4119-94D6-A8C4129E600C}' />
    </window>
    <window class='worksheet' name='Geographic Grouping'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A23EC79-0997-4BAA-9BC1-724792F2944C}' />
    </window>
    <window class='worksheet' name='Line Chart (Discrete)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[my:Purchase Date:ok]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{51CBA3FD-93D5-4052-B021-61921915E3FF}' />
    </window>
    <window class='worksheet' name='Line Chart (Continuous)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[my:Purchase Date:ok]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8EFF4A56-907E-477B-8CEF-6A70E8E782DB}' />
    </window>
    <window class='worksheet' name='Small Multiple Line Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[my:Purchase Date:ok]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Color:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Make:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:State:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD6CB96B-DFDF-4BAE-B7EC-710160EF75DC}' />
    </window>
    <window class='worksheet' name='Dashed Lines: Method 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2018-12-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[my:Purchase Date:ok]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Color:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Make:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Model Year:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:State:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2187C50-C549-4AAA-9F59-EC5E9F32DE90}' />
    </window>
    <window class='worksheet' name='Dashed Lines: Method 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[my:Purchase Date:ok]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Color:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Make:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Model Year:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:State:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8861E66E-DA2F-40F9-9496-82E458D3A7FD}' />
    </window>
    <window class='worksheet' name='Common Baseline Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[my:Purchase Date:ok]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Calculation_151785433974505489:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Calculation_20195882047930369:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Color:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Model Year:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Model:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:State:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{19CBEBA3-E1CC-42B8-9CFD-E9D72F25A34F}' />
    </window>
    <window class='worksheet' name='Stepped Common Baseline Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[my:Purchase Date:ok]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Calculation_151785433974505489:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Calculation_20195882047930369:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Color:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Make:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Model Year:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Model:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:State:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1636E4A4-4438-4B3E-9CFA-5474DDBA8D93}' />
    </window>
    <window class='worksheet' name='Highlighted Line Chart: Method 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' type='color' />
            <card param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' pattern='Black' type='highlight'>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[my:Purchase Date:ok]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Calculation_20195882047930369:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Color:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Make:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Model Year:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Model:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:State:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;Black&quot;</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C69CB3E9-D984-45DE-BB55-B80070E8120C}' />
    </window>
    <window class='worksheet' name='Highlighted Line Chart: Method 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Region Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Calculation_151785433975320594:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Calculation_151785433975320594:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[my:Purchase Date:ok]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Calculation_151785433975320594:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Calculation_20195882047930369:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City (copy):nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:City:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Color:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Make:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Model Year:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Model:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:State:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C23AAFB-10DA-47FA-94A6-64C4EC8B3A7F}' />
    </window>
    <window class='worksheet' name='13-week Moving Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[:Measure Names]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[twk:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tyr:Purchase Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A2EC11FE-62AF-4D45-AA53-E68EC3196A16}' />
    </window>
    <window class='worksheet' name='Sparklines with Labels'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[twk:Purchase Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{512108CC-12DC-4478-96B9-A93A87E4D1CF}' />
    </window>
    <window class='worksheet' name='Sparkbars'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Color:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Country:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[twk:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[yr:Purchase Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13BD678A-EF81-410F-8A03-5ED26786DCA8}' />
    </window>
    <window class='worksheet' name='Slope Graph: Method 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wrjl5h0i4y1dq18z0hbr10hi7iw].[none:City:nk]</field>
            <field>[federated.0wrjl5h0i4y1dq18z0hbr10hi7iw].[none:Team:nk]</field>
            <field>[federated.0wrjl5h0i4y1dq18z0hbr10hi7iw].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5632B2B9-2927-4E9F-A130-DE7BF0EFEACC}' />
    </window>
    <window class='worksheet' name='Slope Graph: Method 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qp3t760n9ryc00zr15730ttix9k].[usr:Calculation_151785433984864288:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qp3t760n9ryc00zr15730ttix9k].[none:State Abbr:nk]</field>
            <field>[federated.1qp3t760n9ryc00zr15730ttix9k].[none:State:nk]</field>
            <field>[federated.1qp3t760n9ryc00zr15730ttix9k].[usr:Calculation_151785433984864288:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{594D8D5D-70D2-4E19-9EFD-C25003752E0E}' />
    </window>
    <window class='worksheet' name='Hockey Stick Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pvzafn150cndk172zsld170gnoh].[none:Growth Group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pvzafn150cndk172zsld170gnoh].[none:Calculation_151785433976746004:ok]</field>
            <field>[federated.1pvzafn150cndk172zsld170gnoh].[none:Calculation_20195882055929862:ok]</field>
            <field>[federated.1pvzafn150cndk172zsld170gnoh].[none:Company Name (Full):nk]</field>
            <field>[federated.1pvzafn150cndk172zsld170gnoh].[none:Growth Group:nk]</field>
            <field>[federated.1pvzafn150cndk172zsld170gnoh].[none:Ticker:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3495DDF0-A96D-4F04-A150-1594D2630701}' />
    </window>
    <window class='worksheet' name='Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[twk:Purchase Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{529101F7-1F0D-41ED-8AE3-34D076BF7B4F}' />
    </window>
    <window class='worksheet' name='Adjusted Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[twk:Purchase Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E58868E-3CB3-452C-9B1F-882C62A3C964}' />
    </window>
    <window class='worksheet' name='Adjusted Forecast (no bands)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[twk:Purchase Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4B74FBE-F3CA-4BB9-B5CB-47A2BF5B0B0B}' />
    </window>
    <window class='worksheet' name='Single Line with Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[twk:Purchase Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC29113D-C703-4951-82F2-122A45054E99}' />
    </window>
    <window class='worksheet' name='Bump Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tmn:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[tqr:Purchase Date:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[twk:Purchase Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D5B12D8-C065-43F2-8E6C-35A8B117A21B}' />
    </window>
    <window class='worksheet' name='Heat Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12a25yn0j3y0lv12hjel90sllvle].[sum:Pivot field values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.12a25yn0j3y0lv12hjel90sllvle].[none:Pivot field names:nk]</field>
            <field>[federated.12a25yn0j3y0lv12hjel90sllvle].[none:YEAR:ok]</field>
            <field>[federated.12a25yn0j3y0lv12hjel90sllvle].[none:YEAR:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8A7E9337-2B44-48F6-9167-60DAB37B19C5}' />
    </window>
    <window class='worksheet' name='Heat Map (Continuous)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12a25yn0j3y0lv12hjel90sllvle].[sum:Pivot field values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.12a25yn0j3y0lv12hjel90sllvle].[none:Pivot field names:nk]</field>
            <field>[federated.12a25yn0j3y0lv12hjel90sllvle].[none:YEAR:ok]</field>
            <field>[federated.12a25yn0j3y0lv12hjel90sllvle].[none:YEAR:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{4D49BD8B-41D6-4029-9EB4-AB23F7B4E49A}' />
    </window>
    <window class='worksheet' name='Dot Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1itr43q1qo4wyh15x1x5o1biy42h].[none:Borough:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1itr43q1qo4wyh15x1x5o1biy42h].[none:Borough:nk]</field>
            <field>[federated.1itr43q1qo4wyh15x1x5o1biy42h].[none:Complaint Type:nk]</field>
            <field>[federated.1itr43q1qo4wyh15x1x5o1biy42h].[none:Unique Key:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6251B7C4-67B3-4705-AF1B-30A40EB0AF34}' />
    </window>
    <window class='worksheet' name='Density Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1itr43q1qo4wyh15x1x5o1biy42h].[none:Borough:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B73E3901-0EC2-4F83-A4B1-F581A9F5AE37}' />
    </window>
    <window class='worksheet' name='Hex Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Workout Wednesday Superstore Sales].[usr:Calculation_2679219574390378498:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Workout Wednesday Superstore Sales].[none:Abbreviation:nk]</field>
            <field>[Workout Wednesday Superstore Sales].[none:Column:qk]</field>
            <field>[Workout Wednesday Superstore Sales].[none:Customer Name:nk]</field>
            <field>[Workout Wednesday Superstore Sales].[none:Row:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{18072D0D-0E63-419A-A376-860336B358C9}' />
    </window>
    <window class='worksheet' name='Cat Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Workout Wednesday Superstore Sales].[usr:Calculation_151785433979125782:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Workout Wednesday Superstore Sales].[none:Abbreviation:nk]</field>
            <field>[Workout Wednesday Superstore Sales].[none:Column:qk]</field>
            <field>[Workout Wednesday Superstore Sales].[none:Customer Name:nk]</field>
            <field>[Workout Wednesday Superstore Sales].[none:Row:qk]</field>
            <field>[Workout Wednesday Superstore Sales].[usr:Calculation_151785433979125782:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{DF5AAB1A-2497-49C6-9E47-A840FAD34200}' />
    </window>
    <window class='worksheet' name='Simple Pareto Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Customer ID:nk]</field>
            <field>[Workout Wednesday Superstore Sales].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{4763DB73-9417-4473-BD88-1674F71DBD6F}' />
    </window>
    <window class='worksheet' name='Advanced Pareto Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Customer ID:nk]</field>
            <field>[Workout Wednesday Superstore Sales].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{FCD1F6F9-83B3-4D8E-A56A-030370D96C7F}' />
    </window>
    <window class='worksheet' name='Advanced Pareto Chart with Lines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Customer ID:nk]</field>
            <field>[Workout Wednesday Superstore Sales].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{E25410AA-6242-4EBA-BB4E-B156297B8DE4}' />
    </window>
    <window class='worksheet' name='Calendar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[dy:Purchase Date:ok]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[med:Profit:qk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[my:Purchase Date:ok]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[wd:Purchase Date:ok]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[wk:Purchase Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{31FD664D-2479-4F8C-BC74-9433FAFA73DB}' />
    </window>
    <window class='worksheet' name='KPI Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[usr:Calculation_151785433980731418:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Region:nk]</field>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
            <field>[Sample - Superstore].[usr:Calculation_151785433980731418:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C39F3A8-BA24-403E-A305-4C884916C338}' />
    </window>
    <window class='worksheet' name='BANs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09A02686-2E77-421F-86A0-9BAD0DE418C2}' />
    </window>
    <window class='worksheet' name='BANs with Text Below'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68307367-E67F-46B1-8946-0C463FC7C9C1}' />
    </window>
    <window class='worksheet' name='Dot Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Order ID:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{F96F1C57-A31B-4764-A748-90E07ABAA4DB}' />
    </window>
    <window class='worksheet' name='Jitter Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Order ID:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{4E0D3773-3E28-406B-BFF5-DA0F9B8FD16F}' />
    </window>
    <window class='worksheet' name='Box Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Order ID:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{43998115-BA91-406B-895B-78A30BE1D92F}' />
    </window>
    <window class='worksheet' name='Box Plot (no ends)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Order ID:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{84FE4FE6-8B0E-4D52-8F7D-B0AE2F5FBCC6}' />
    </window>
    <window class='worksheet' name='Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5345F159-D61F-4B06-95E8-1A1408738FC7}' />
    </window>
    <window class='worksheet' name='Donut Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8EE8C30B-851C-4C48-891F-66F04A6E471D}' />
    </window>
    <window class='worksheet' name='Treemap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[State (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF3D845D-0C81-474B-997F-FFAED9167386}' />
    </window>
    <window class='worksheet' name='Treemap Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Make:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[yr:Purchase Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A2BA3C3-7BBA-492D-99E7-A5238572FFCF}' />
    </window>
    <window class='worksheet' name='Packed Bubbles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Make:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Order ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D475D91F-044A-4B9C-8299-29B6E56B12EF}' />
    </window>
    <window class='worksheet' name='Colored Packed Bubbles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Make:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Order ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6378074F-C3DB-45D9-B6F4-12A2CBE87C8B}' />
    </window>
    <window class='worksheet' name='Bullseye Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[Color (group)]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Make:nk]</field>
            <field>[federated.0j6jkqj0ik8noa1cr5yxu1skwdf0].[none:Order ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C921610-5266-4788-BD00-8212CFE67538}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Title' width='192'>
      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
      YYOi7+V/33rrrZx33nk89thj1Gq1ricLvv/977N3797cC5UkCT/84Q8B8gzOIPAZGBhgfHyc
      zZs384mPf4LLLr+M3/yN3+Dss89m9+7dPL5lC1/6m7/h+BNOwPcDPMfhxOOP54orruhJAnQc
      m8f0M+UC+elLKVROkXEcI7MQNGlOOLOLzucD606NZ30msyxGrXnTm97Et7/9baIo4gtf+AJS
      Ss4773zK5TK1Wi0VkZ280Ixzf+tb38rHXLJkCW9729vwfZ/TTz89P/Vm586d3HjjjbztbW/j
      Ix/5CNdddx2jo6N84xvf6JnTu971Ls4880yuueYannzySRqNBp/61KdwXTe3D3IjVgje8Y53
      8OijjxKGIfv37+fAgQOcfvrp7Nq9m9GREaI4YbLeQPoB7aRjIB8am+jpaFbr6smfwYFDhxgd
      H+f63/99nnrqKfbs2cNtt93Wc81rrriCVcdtotHjkp47KhvFmig2aNEhDq11zsUd14VqP7Fy
      OOW0TelBiTFLly5laGgI1/NYsWp1ft+BgyOcefrp/Ou3vk29Xufmm2/m5ptv5sQTT2TFihXs
      2rUrD5DddNNNPPTQQ7Pm5Hkel19+OdNTUyilePOb38znP/954jjmnnvvoVavcc011/D+97+f
      LVu2sGvXLu6/93vcf+/38jFe97rXcckll/TEiPIcNdOFCWN6u0IcCUTtNhNTU1bHSo+hjFNR
      P9fxoPNBNo0wDLnpppuYnJxk9erVXHTRRQwMDOSHrT388MPcf//9OI7DmWeeyfHHH8/DDz/M
      nj17OO200zjjjDN4+umneeqpp+jv7+f0009ny5YtvPjii5RKJS6++GJWrVpFf38/pVKJer3O
      fffdx9atW/E8j7e85S1UKhVGR0d58MEH2bVrl/WMlEqsX7+eTZs2WWmmFPfffz+PPfYYpVKJ
      c845h/Xr13PnnXcyPT3N+eefz4YNG6hUKjzxxBPcd999aK056eST2Xjsq7j/Bw+za8d2Vq5a
      xQUXXWxPcuwquRwbHeXWb3+LZpdnqzf1F84/+ywuueQSyqUS9do0DzzwANu3b2ff/v14nsvq
      VatZv349g4ODTIyP8MQTT5CELY4/+QxWr1lNX7XKnj17eOQnj9BsNDnttNNYvnw5fX19eJ6P
      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
      NRbzeA8+/kw2bPop5559LpMnNNHd3sruR53J5S7Hz0cFiqJw7leu4HvXXcc5Tz3A2DH1pHs6
      SIs41974vQ/xxhpf+MY1fPe6/+bzT93P6JoY69dv5LSLvs6sSe9f5ClFhHlnH883Lvwc06dN
      oqdjO7vMOIDGhmBKqsoZZ87lO5dfyNSpUxBOght/ej3ldkIjVjdyK5Cdz4iVa5oH/a15zUqR
      ydsl36V6O8XSpUvE8hUrRX8mX/JbPtsvVixbKlaubRaW7YhUT4fY1No+4PxlS5aI5pZtwrEK
      YuXqNcKyy3LaSuCIrvZWsWTJYrFqbbMomKXtsQo5sWblCrF0+TsinSsMOLtz22axZMkS0dre
      LRzHES3N60Sq7Liutq1iyZIlYuOW7cJxrSy9ndvFlraukuN6O1rF1rbuYdq6Azi2WLt6lcgU
      rLKvTbF27RoRfDTHscSalWuEVXKcJVo2rBWLFy8WzZu2Crs8FzB4nzWrRa5QvOCm9atEuuRd
      OmLTurUiXTD9b7a1NIvO3owoh+NYYuO61WLJkmWiqy9d8luuv1s0b9424BwrnxVr1m8oSVfs
      3LZZtHX3B48SqwPP6DiOaG9tEUuWLBHbOnplu9etFulgfzmO6Nq+RSxevERs3tbhW6e2bFgn
      +jLF91pJiKlgp8ZHL4yjggr+hahMgAp2alQmQAU7NSoToIKdGpUJUMFOjcoEqGCnxv8DbCT4
      MVe0xB4AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='KPI/01.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbND6kK1KI3WvBNwGJWBkOwvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0JfVVhiwFi9N
        l8DfP39B0NQJfCILd9EzsWm+HJV4PH5dVcdtNa/h3WdwO8RD27fClGBod52OhwSWtVyL2O7H
        YwTBCWK2CUzHC/B98QCYVAIQx59VLsaAUgcHhFL8CXgu9pBrF53hICY09kJwHtCqqfo5XvLi
        rGWtBG6M6WOEDoeDc/AdqV4Qns/now/Pm1nETL92phxmnb6ZPHChK9X0ppEdGO1yLfcmgXBK
        oe0Xi4vjTjunhJxKtmgoe4QdF7UtmtDaLMXzdbRevfYCLYWWe1UJC795I3WdOgJtNPE31dhP
        KXdcVvtWdOaeJ9DeOHVTx0FKOeaEpnZyjnGUZZR5uCAkz33ippOP97hF5qeMUN/SCca5H0Vh
        lBd5nnHGipBduPedNmVXiYnb/ON6V7kxU6I0Uq2k3E0V8LCRRuqN7AF7pODDU9PV8qA/jt9z
        jlSo5oeoCyVbcHrfuHlHP2Mpi1KS04CT3Mc49SI3wn7AgnAeuNTq/+XWb/Le78fAA1aQgLmY
        hxHPMc5CgvMi5VGKvZzhACIbCfqvUqYjW37j9lL31rh0juhsuyjbF38A6YkGSkr/HRQAAAIU
        SURBVFiF7dhNqA1RHADw3/UoIilKilBI+U6SjWwoio1EFha+yuplQWIlFhYWYmWrbJWs3oIs
        ZSdZWPgo5dVb+Oh5Pc+77ljMvXW7ZuacuR/mLpw6u/P/n9/M/PufmaklSWKYx5yqAaHxH9jz
        SJJEhXW4DLewpuXonFUDHyPBOHYOG/B8E9eakzg0LMAN+NEBTDCLs1UD5+FlBq59XqsSeDOA
        S/C0KuBe1AO4KWysArgEHwO4BBeqqsGHEbgnqFUBPBmBG8fyKtrManwN4Bo4WEWjHsHzAC7B
        vbJH3Qhu4DJqPQCvRuDeYEFZ4O22BHe7xO3CrwBuBtvzcHnAExmJrpfELcTbAC7BJeTisoDb
        pI0yK9nFEsD7Ebhnmu+jscDFeF+QsIHTEbgjEbgvWNUKiAXui0hcx9EC3ApMROQ53h4UC1wk
        rm5mcCADV8NYRPyDzsAyNbgS7yI2mcKejn1GI+I+SEupayCsxaeIzb5hazNmM6YD6+sZF9UV
        ENZLz8YQcgKb8CpibW6r6gbYuisxBT8bseYF5vYbCDukjzIEKJqTWJe3Qa9A2I3vPQDPFCXv
        B5D0VT3vhCmaj0KJ+wWE/fhZAvcZS/8lEA5LG3UI15DdzAcOhGPCX2Z3yiTsNxBO4XcO7jXm
        Vw2Ec9JH2Y6bxpayiQYF5O/zd7SbJIMEwpUmbkyX3y9FwFqPuIGPof8FPPTAP7paeKi9UDuN
        AAAAAElFTkSuQmCC
      </shape>
      <shape name='KPI/02.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbKP1IVuVRupeCbgNSsDIOAvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0BXlVhqwli91
        m8DfP39BUFcJfCILd9Exuam/HLV8PH5dlcdtOa/g3WdwO8RD0zXSFGBodm0fDwksKrWWsd2P
        xwiCE8RsE5iOF+D74gEwpSUgjj8rXYwBpQ4OCKX4E/Bc7CHXLjrDQUxo7IXgPKBV09VzvOT5
        WctaCdwY08UIHQ4H5+A7Sr8gPJ/PRx+eN7OIWf/ammKYtf3N5IHLvtR1Z2rVgtEu1mpvEgin
        FJpusbg4bnvnlJBTqgYNRYew46KmQRO6N0v5fB3dr147iZayV3tdSgu/eSN1nToCbTTxN13b
        Tyl2XJX7RrbmnifQ3jhVXcVBSjnmhKZ2co5xlGWUeTgnRAifuOnk4z1unhFMuZdbOsFY+FEU
        RiIXIuOM5SG7cO/b3hRtKSdu/Y8rrnJjpmVhlF4ptZsq4GGjjOo3qgPskYIPT3VbqUP/cfye
        c6RS1z9klWvVgNP7xvU7+hlLWZQSQQNOhI9x6kVuhP2ABeE8cKnV/8ut3uS934+BBywnAXMx
        DyMuMM5CgkWe8ijFnmA4gMhGgv6rlOnIlt+4vdS9NS6dI1vbLtr2xR/wLwZQllJg0QAAASdJ
        REFUWIXtWEtKA1EQrHKhS71HPI5MziOeKHdJsvESxv/ESLkwy2mk6Xr4yKSgGagHRTH9eR9K
        Qs+4+G8Df+H0DZJckdRErBwGWa1Bkk8ArieWdpJuSuLwpPgr4A8GbYvB94B/M2hbDH4G/GjQ
        thiMjETGU3AYfA34blL8HfDdNMku4J8N2k3/YMSn0LIGXwzaFoP7JJ+Cw+BHkk+h5U7SjcFo
        L+4mxVEzRM2TwiwGdTSQuxnU5/NgFefzYBVRKqPUp1C+1bXG6V/cW2MeBkkOJNckx+N3cOgC
        ACSVAsAdAE3EUNWWZHmbWQNYTCxtJN2WxOF5PBoBXE4s7SVdlcThqcHHJJ+Cw+B9wD8YtOtN
        ciyRJYAtfo/5WwBLh66lSVpjHoO6JX4AZswqmojMTWIAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/03.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGGMCG
        oKUrsEHdQ9pVNtL2SsC7QQkYGadh82s99JP6CzVpSFfVKrYPHvu9eTP2zO3d0BXlVmi0Fi91
        G+PfP39hVFcxfiILZ9Exsam/HJV4PH5dlcdtOa/w3Wd0O0RD0zVCF2hodm0fDTEuKrkWkdmP
        xzZGJ4jexjgZL9D3xQNiUglELG9WOgCIUgt8Qil8Qq4Dru2YRWfgR4RGboDOAxs1VT1HS56f
        tYwV443WXWTbh8PBOniWVC82zOfz0Yfrzgxi1r+2uhhmbX8zeeCiL1Xd6Vq2aLSLtdzrGOMp
        haZbLC6O2946JWSVsrGHorPBcuymsSd0r5fi+Tq6X712wl6KXu5VKQz85o3UdeoINNFE31Rt
        PqXYcVnuG9Hqex5jc2NVdRX5CeXACU3M5BwgTFPKXMgJyTKPOMnk4z1unhKg3AsMnQBkXhgG
        YZZnWcoZywN24d63vS7aUkzc+h+XXuVGTIlCS7WScjdVwMNGatlvZIfYI0Ufnuq2kof+4/g9
        50iFqn+IKleyQaf3jep39FOWsDAhGfU5yTyAxA2dEDyf+cHcd6jR/8ut3uS934+B+ywnPnOA
        ByHPANKAQJYnPEzAzRj42DaR2P9VynRkym/cXureGJfOEa1pF2X64g/OuQY0x2QNAgAAAVlJ
        REFUWIXN2D1uwzAMBeDnDlk6BD1A7pcxSzPmRC1yjiQ9U9glLlxFEv+eEBPgZksfYJEUPIkI
        1hxvrwZosXogROQvizgAuAH4GLj9FsAFwH7p+GdqAA8A7gAEwM8g5BbA9bHHvYWsAZe4OdnI
        JW7OKrIE1nBsZA3XRJbAS+NFFrKHm/OrB7QsEEVa1v4GsNHO4AhkCNerYiYyjOsB54WzZzKF
        04BZZBpnAUaRZhyAJs4K9CJdOBbQg3ThmEAr0oVjAzPIKm4EMIJs4kYBPchzD6cBszfqyfDM
        DsB7eIfEJ9aq1dLMnwysIvHgVCS7zURwXSSzUWu4MwKzmzXqrBPCPbsZlwXv+HIhM8AIzo2M
        AjM4GrIFZOAoyBqQiUsjS+AIXApZAkfhXMge8DQQZ0UetTNYQ7JwGvLTWsVLJBvXQj7htD54
        GogrkVWciGByXLNeEqv/R7164C96sSVWO4KjCgAAAABJRU5ErkJggg==
      </shape>
      <shape name='KPI/04.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGGMCG
        oKUrsEHdQ9pVNtL2SsC7QQkYGadh82s99JP6CzVpSFfVKrYPHvu9eTP2zO3d0BXlVmi0Fi91
        G+PfP39hVFcxfiILZ9Exsam/HJV4PH5dlcdtOa/w3Wd0O0RD0zVCF2hodm0fDTEuKrkWkdmP
        xzZGJ4jexjgZL9D3xQNiUglELG9WOgCIUgt8Qil8Qq4Dru2YRWfgR4RGboDOAxs1VT1HS56f
        tYwV443WXWTbh8PBOniWVC82zOfz0Yfrzgxi1r+2uhhmbX8zeeCiL1Xd6Vq2aLSLtdzrGOMp
        haZbLC6O2946JWSVsrGHorPBcuymsSd0r5fi+Tq6X712wl6KXu5VKQz85o3UdeoINNFE31Rt
        PqXYcVnuG9Hqex5jc2NVdRX5CeXACU3M5BwgTFPKXMgJyTKPOMnk4z1ungYeJOlIJwCZF4ZB
        mOVZlnLG8oBduPdtr4u2FBO3/sd1rnIjpkShpVpJuZsq4GEjtew3skPskaIPT3VbyUP/cfye
        c6RC1T9ElSvZoNP7RvU7+ilLWJiQjPqcZB5A4oZOCJ7P/GDuO9To/+VWb/Le78fAfZYTnznA
        g5BnAGlAIMsTHibgZgx8bJtI7P8qZToy5TduL3VvjEvniNa0izJ98QfaxQY+qMi/ygAAAbRJ
        REFUWIXN2LFSwjAcx/FvPVZ1g1HAUR7BgjM+ATyKp7yTCiej+Aw4i5M6AiN4cWiqaY7UpoSk
        v7v/kOs1/dyV8k8SCSGoco5CA/5L5YG1sjdGUVQH+kAP6ABN4EReXgELYA7MgCnwaZor92cm
        hLAqIAYegQ0gCtZW3hPbGmxgbWBsgTLVWM7lDggMgKUDXFpLYOgECIwcwvQa7QUEbg6IS+u2
        FFC+1kPj0hpYAYEWyV+FL+AKaNkAXXyttjUuBAQuA+DSiosAHwIC73OBQB27DuG6NkBdNemL
        hT579GcHqUnDb3Rgz5/FmCt1oAM7/hzGXKgDHdj05zCmpQ504LFHiCkZgw6MPEIKRQeugyiy
        yRh04JtHiCkLdaADX/05jJmrAx347M9hzCwz0lpdg/CtrmFsdUKIL5ItYqhMpeEvO1YzMVVe
        bgVcsE5sVtRt/C/527abpqFH4LDstvPOA25UatupIKu7cdde99ohbI2row8FeY6br3si58Ip
        UIF2SY7Sthaob3lPlx3Je14kH2odeYB5zd8B5hlwKi8vgXeSxv8CPAEfprnyDKWBvlL5M+rK
        A38AJRJHiz0chcgAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/05.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W6bMBR+Fcu92aQFY8Dm
        R2UV2KD1gq1KI3W3BNwGJWBknIXm1XaxR9orzGQhq6Yqti987O873zn2Obd3Y19WW6HBWrw0
        XQx///wFQVPH8IkUdtEzsWm+HJV4PH5dVcdtFdbw7jO4HaOx7VuhSzC2u26IxhiWtVyLyOyn
        YwTBCaK3MUymC/C9eABMKgGI5S4qG2NAqYU9Qin+BBwbO8g2iy6wFxEaOT44D2jUVP0cLXl+
        1jJWDDda9xFCh8PBOriWVC8Ih2E4+XCchUEshtdOl+OiG25mD1wMlWp63cgOTHa5lnsdQzin
        0PZFcXHcDdYpIauSLRrLHmHLRm2LZvSgl+L5OnpYvfYCLcUg96oSBn7zRuo6dQKaaKJvqjGf
        Uu64rPat6PQ9j6G5seqmjryEcswJTczkHOMgTSlzcE5IlrnETmYf73HzNPQDxkJDJxhnbhD4
        QZZnWcoZy3124d53gy67Sszc5h83uMqNmBKllmol5W6ugIeN1HLYyB6wRwo+PDVdLQ/Dx+l7
        zpEK1fwQda5kC07vGzXv6KcsYUFCMupxkrkYJ05gB9j1mOeHnk2N/l9u/Sbv/X4K3GM58ZiN
        uR/wDOPUJzjLEx4k2MkY9iAykaD/KmU+MuU3bS91b4xL54jOtIsyffEHFJwGbpDfEecAAAGy
        SURBVFiFzdi/SwJhHMfx9yMiCIKChUMtLjU51ebm6OZWU20FQUKQ/Tk11VZTbW6OTrbU4lJb
        gYNgiOjT0D1y2Hnej+d57r7wAU/vzhcfzsN7hJSSNE8macCmST0w694QQsQ5Vx54dV7XgJ+g
        B/peZlLKZWLOJSCdtMMc6DasRhcwB3y4gJ/Oe6kBnrlwKudpAWaBoQdwyMo1nhTwxAOncpo0
        MAO8+QDfCXArMwk88sGpHCcFFMAgAHDg7Gsd2AqAU2klAeyHAPZtA5shcCpNm8BeBGDPFrAR
        AafSsAHsxgB2TQPrMXAqdZPAZw3AF1PAAw04lUMTwEeNwCfdwBqw0AhcOOfUBrzXiFN50AXc
        A+YGgHNgXwfw1gBO5S4usArMDAJnQNUPuOnfboeAzxURJwvc+O7h0+AOMMVceypTYDdKgx1C
        PNvGmBxwvfbTNQ1WgAnm21OZAJUwDV7xt9Zia/LOd/4fjwbLwBh77amMgXKQBttAIWITcaaA
        16LTSoNFYIT99lRGQNGvwQugFLuL6FNyDMsR7l+vEOIL2LKMWp1vKeW22hAeN+hUTerXqFMP
        /AVLJss8zee8nAAAAABJRU5ErkJggg==
      </shape>
      <shape name='KPI/06.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAiBpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W6bMBR+Fcu92aQFY8Dm
        R2UV2KD1gq1KI3W3BNwGJWBknIXm1XqxR9orzGQhqqYqti987O873zn2Obd3Y19WW6HBWrw0
        XQz/vP2GoKlj+EQKu+iZ2DTfjko8Hr+vquO2Cmt49xXcjtHY9q3QJRjbXTdEYwzLWq5FZPbT
        MYLgBNHbGCbTBfhZPAAmlQDEcheVjTGg1MIeoRR/AY6NHWSbRRfYiwiNHB+cBzRqqn6Oljw/
        axkrhhut+wihw+FgHVxLqheEwzCcfDjOwiAWw2uny3HRDTezBy6GSjW9bmQHJrtcy72OIZxT
        aPuiuDjuBuuUkFXJFo1lj7Blo7ZFM3rQS/F8HT2sXnuBlmKQe1UJA795J3WdOgFNNNEP1ZhP
        KXdcVvtWdPqex9DcWHVTR15COeaEJmZyjnGQppQ5OCcky1xiJ7OPj7h5mtqcucTQCcaZGwR+
        kOVZlnLGcp9duPfdoMuuEjO3OXFDP2DcvsqNmBKllmol5W6ugIeN1HLYyB6wRwo+PTVdLQ/D
        5+l7zpEK1fwSda5kC07vGzUf6KcsYUFCMupxkrkYJ05gB9j1mOeHnk2N/j9u/S7v/X4K3GM5
        8ZiNuR/wDOPUJzjLEx4k2MkY9iAykaD/KmU+MuU3bS91b4xL54jOtIsyffEXBVYGYV78fTkA
        AAEUSURBVFiFzdi7DsMgDAVQU/WXk6GdO/WP24EuNMoDsMHX4CshkSHWkUlIRIgxkufcZgO4
        uAfeEUVCCP/pg4gCEb1a7q8+ZjFG9djhYhrPVmCxNgi4xzUjTYEFXBPSDMjgxEgToBAnQsKB
        jTgWCQV24qpIGFCJKyIhQBAui1QDwbgLUgVMhdC4A7IbaIzbkF3AQTgW6QFXRXrBFZGecFnk
        +Y/6Q/PzPVxllnihed1bpS/JDOQFx20zI5FZnGSjHoEs4qSfOkvkSsQ0iQMaIldKUQMNkBsO
        BgQiDzgoEIC84OBABTKLMwF2IIs4M2ADsoozBQqQC4czB1aQItwo4BkpxnFAyAFmyrswVyXs
        OuAy7s+o3QN/HTxebpAd/IAAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/07.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        WGUV2KD1IVuVRupeCbgNSsDIOAvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0BXlVhqwli91
        G8PfP39BUFcxfCILd9Fxuam/HLV8PH5dlcdtOa/g3WdwO7Ch6RppCjA0u7ZnQwyLSq0ls/vx
        GEFwgphtDJPxAnxfPACutATE8WelizGg1MEBoRR/Ap6LPeTaRWc4YIQyLwTnAa2arp7ZUuRn
        LWvFcGNMxxA6HA7OwXeUfkF4Pp+PPjxvZhGz/rU1xTBr+5vJg5B9qevO1KoFo12s1d7EEE4p
        NN1icXHc9s4pIadUDRqKDmHHRU2DJnRvlvL5OrpfvXYSLWWv9rqUFn7zRuo6dQTaaNg3XdtP
        KXZClftGtuZexNDeOFVdsSChAgtCEzuFwDhKU8o9nBOSZT5xk8nHe9w8TV3BfWHpBOPMj6Iw
        yvIsSwXnecgv3Pu2N0Vbyolb/+Pyq1zGtSyM0iuldlMFPGyUUf1GdYA/UvDhqW4rdeg/jt9z
        jlTq+oescq0acHpfVr+jn/KERwnJaCBI5mOceJEbYT/gQTgPXGr1/3KrN3nv92PgAc9JwF0s
        wkhkGKchwVmeiCjBXsZxAJGNBP1XKdORLb9xe6l7a1w6R7a2XbTtiz8qagaALBkM7gAABGRJ
        REFUWIXtmH9olHUcx1/f7805t7lNb7d5+3G3qZvldIViUEGBlUKQBBHcdkIhJkUliZJCkUFE
        9YdCgiDZoMxri/4YYSBUYAQxDLNh0+Z+uPO2eZu7/XDuh1s+329/3Cbb7Xm2u93a+Yfvv47P
        5/18nxfPj8/3fY/QWnM/SyYaYC49AIxXSZM/PBXeRJw/GzgAnKip9vnNDIm+glVybfdBoM5T
        4d1sZkgk4B5Z2LtDlnQhN7avAn71VHifjzQlCrAUOCpcvWGIgj5sm9vSgR88Fd7dU42JAFwC
        nJYP30gTGaP3iiJnENuTTUmysO+kp8L7XiIBD0t3aIss6pnREBmjsHwUYOtkbbEBnwIOyZIu
        06a+nYK6kj8CvDlZW0zALOCU7dHrNpYYpgYdyAY4UFPta5ysLSbgcbnmpls4B0ybqiUXFbD/
        CJyYWl8swEqR118pS4OmTX0zA9W8qgvYXVPtm5ZeFgPQDRyXEyNlhrTA+LNYA7tqqn3dke3/
        G9AGfC3XBbPEimFTg7rqBDheU+07a9a3ArQBHwHvAiIOwIPSHXparr5pDtduR7U5rkycx1RJ
        FvXPpDu0Hw0qkF0A7J0H3BbgQys4PZqMaigYB7w11b5RU5MFoEc4B/bLdUGQGhBvq4C9Hzgc
        A1wacFpubF9Cyr/mgG0OgPeB+tkWirzFjwBV0hUCmwKhkSVdSFfvB8C+GACPyuKeUlnQZ9pU
        rTmo69nngCNzLTQVMAOolRs6UsXKKQ908l1EeFs6AuyKAm6HyBncIx+6YdrUfemoJmc/8Aqg
        YgHcJFYOFcvCmeNApI1he6JZAF8AL82ynhP4UrpClgYVsAO8AbTPBRcJeEH3pTep1hxTo8gc
        wfZYqw34FthmZgG+kiVdDuG4bQ531YkOZn0DfBcNXCTgEPCManJeU20WkPYhbJv8yUAt8HhE
        e690hbbJtTNmLQC6cwXqWo4feCtauEhAgA7gWdXo7FB+hzlk7i1s5YFU4CxQPlHeAHwqiixu
        7XgSxiWXAVQCg/EAArQBW9U/eV0qnC5mQub3I8s6MoFfgDLAJ8s6U0TamKlfteQCfAzUxQJn
        BQjQDDynLuf3qHa7+YGuXuT6TgdQL9d3llu9GKrNgbqefZ7wzhSzrHYSgAZgu2ooOCekzhT5
        M2eadIeQrt4khPnnE31rGaoxbwjYCdydD+BcYeEvYLtxqXBQB7PMHRZwcC+AvgO0zAcOoksz
        54EXjHr3iO7OjHph1bQK1bGyFqiaLxxEH7d+A140LhaN6Z7lc5p1dyaqNTcIvBYPHMSWB38G
        XjYurB7XvenWLiUwLhZp4FXAIqVGr1gD6xlgp/HHGkMPpJoaJgLoMeCn+NDCmk+i/h7YZdSV
        KD24bFpDBewov6MBOLQQcDD/yH8KeN34vVTr4aUA6OGlqMsFdwjvFncWiC+u/yQngX3a74DR
        ZLQ/G8JX7u8FIZvQbIM6Gn2uAvZlKmD/hPAzd2wBmKZJPPiIHqfue8D/ACwQY+JcyR6NAAAA
        AElFTkSuQmCC
      </shape>
      <shape name='KPI/08.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbND6kK1KI3WvBNwGJWBkOwvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0JfVVhiwFi9N
        l8DfP39B0NQJfCILd9EzsWm+HJV4PH5dVcdtNa/h3WdwO8RD27fClGBod52OhwSWtVyL2O7H
        YwTBCWK2CUzHC/B98QCYVAIQx59VLsaAUgcHhFL8CXgu9pBrF53hICY09kJwHtCqqfo5XvLi
        rGWtBG6M6WOEDoeDc/AdqV4Qns/now/Pm1nETL92phxmnb6ZPHChK9X0ppEdGO1yLfcmgXBK
        oe0Xi4vjTjunhJxKtmgoe4QdF7UtmtDaLMXzdbRevfYCLYWWe1UJC795I3WdOgJtNPE31dhP
        KXdcVvtWdOaeJ9DeOHVTx0FKOeaEpnZyjnGUZZR5uCAkz33ippOP97hFxv2IcmrpBOPcj6Iw
        yos8zzhjRcgu3PtOm7KrxMRt/nHJVW7MlCiNVCspd1MFPGykkXoje8AeKfjw1HS1POiP4/ec
        IxWq+SHqQskWnN43bt7Rz1jKopTkNOAk9zFOvciNsB+wIJwHLrX6f7n1m7z3+zHwgBUkYC7m
        YcRzjLOQ4LxIeZRiL2c4gMhGgv6rlOnIlt+4vdS9NS6dIzrbLsr2xR8BmAZedgi/9AAAAdlJ
        REFUWIXtmD0vBFEUht8VFvsDVDpZySYUOioFWtqZbKUQ4hcIUSnwBwS90FLbfssVRFilhs4u
        M3PnzodibiT32kRxX3GLPd05k7x5cs49H7ulPM/hsg38N8Bv5jzgoK2A59cvASz3+HR1cX62
        YqtvDQhg/mh3DKMjpe9AGOXY3HubJ2hTSizTTG805ScEbQpgIGIdUPmfBG0KYCSNXCUpAEAQ
        tCmAIkn1DMokB4CIoE0B/IiE2yVOzWWUZQAcapL3IMq0QFj4HYI2J4OZzgc1dVKCNucNmmNG
        vckuQZsCGJtdrPyYoE0BDKXUA8oPCdqkTSL1DMbFHHQGUKZmiRO3StyNeu/iD4L234yZ1LFB
        3QmFMaiFW4NapsZIdm3VBbF0+1iI1Hn1baqLHboHjWKqA5ZyDzJ+NH3ePAqs7rya8YCgjVL/
        nwVL6wPaGqNJ4Pn1dQBbAMYBvAA4uDg/O2FoWzeJ59fXahPl06W5CqaqZdy1YzSaAe6f4w0G
        JKPE24uzFczUhjE0WMJMbRgLsxWgyKi1MQDHpyfLWmCqWgaKclsbA/Dl9km/Te/bMVC8RWtj
        AO43mgFaDwJJArQeBK6bAQAcErQ5m8Tz6xv42cXH1sLorzp7cx7wCztR4jstIoJvAAAAAElF
        TkSuQmCC
      </shape>
      <shape name='KPI/09.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbKP1IVuVRupeCbgNSsDIOAvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0BXlVhqwli91
        m8DfP39BUFcJfCILd9Exuam/HLV8PH5dlcdtOa/g3WdwO8RD0zXSFGBodm0fDwksKrWWsd2P
        xwiCE8RsE5iOF+D74gEwpSUgjj8rXYwBpQ4OCKX4E/Bc7CHXLjrDQUxo7IXgPKBV09VzvOT5
        WctaCdwY08UIHQ4H5+A7Sr8gPJ/PRx+eN7OIWf/ammKYtf3N5IHLvtR1Z2rVgtEu1mpvEgin
        FJpusbg4bnvnlJBTqgYNRYew46KmQRO6N0v5fB3dr147iZayV3tdSgu/eSN1nToCbTTxN13b
        Tyl2XJX7RrbmnifQ3jhVXcVBSjnmhKZ2co5xlGWUeTgnRAifuOnk4z1unuWRlwtq6QRj4UdR
        GIlciIwzlofswr1ve1O0pZy49T8uucqNmZaFUXql1G6qgIeNMqrfqA6wRwo+PNVtpQ79x/F7
        zpFKXf+QVa5VA07vG9fv6GcsZVFKBA04ET7GqRe5EfYDFoTzwKVW/y+3epP3fj8GHrCcBMzF
        PIy4wDgLCRZ5yqMUe4LhACIbCfqvUqYjW37j9lL31rh0jmxtu2jbF38ALPoGgtAaSM0AAAJT
        SURBVFiF7dixi9NgGMfxb2pOPGgOEyyeaA9cahfFoc53CILWVaSlm4ubNyp0LA6u/g2WdlMH
        BxHuijfqdEfxHC0qSMOBvd5dOIc4pfRyedM3ed9gB58t8JB8eJO8zy8xfN9nniv3rwGzau6B
        5vRBrd6YPmwBD4HbwI+Mrr8MbAKvup3286gG0Qq2gOat0bAEbACXM8L1KqNhGWjV6o2mLLAF
        NB9//2JU3QEZIQPctfvugEc/dw0RMgyc4JaPDwHIAHkCB1D0DoTIMPBBZTSc4ILSiDyFC6ro
        HXBjf88A7sQB1z4vFb6+u7By6swakEIcwOvCVbYt5yNQjQP+AlYzQMri7nU77RO3L+ol0Y1M
        jRMBp5G7ikglXBwwQK4pIJVxs4AqSGkcIMTJANMgteFkgUmR2nAQCguSyB5QDgOq7oDr472S
        j8GKt68FB8njVuxKFr2xVlwa4EykThykD6wT5LdzlrBpx3LYtpyttDhQS9QGYBgxDef/HANc
        BOy0F0kLnGwlUc9cUEVvrJyC0gBj97lwqaagpMBY3I7lEPVMqiCT7IMyE2ILKFRGw8h9Eih9
        WipskOBDTHYFZcfXXdQCRipg0tmqmoISAdMOfm3IOKBqKpFG1uoNIVIE1BWZlJFRQK15ThUZ
        BurGKSPDwCxwiZFxwPdHOZPf5lnduJlId2GRw5wJ8CYOuN7P2y8/OFcmSI04IdJdWKRnX6Kf
        t190O+2n081Ro269n7cBnpzxfd24MLIHlI9yZoB7Fm4UzeIAeTMDXBTybRQOwPj/E12x5h74
        F8U8DkvlrA52AAAAAElFTkSuQmCC
      </shape>
      <shape name='KPI/11.png'>
        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
        AAAAAElFTkSuQmCC
      </shape>
      <shape name='KPI/12.png'>
        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
        Xc5rPfBWb+cAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/13.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLKK2EbrA1uVRupeCbgNSsDIOAvNr/Vhn7RfmMlCVE1VbD/42ufcc6997+3d0BXlVhqwli91
        m8A/b78hqKsEPpHczTsmN/W3o5aPx++r8rgt5xW8+wpuh3houkaaAgzNru3jIYFFpdYytvvx
        GEFwgphtAtPxAvzMHwBTWgLi+LPSxRhQ6uCAUIq/AM/FHnLtojMcxITGXgjOA1o1XT3HS56d
        tayVwI0xXYzQ4XBwDr6j9AvC8/l89OF5M4uY9a+tKYZZ299MHrjsS113plYtGO1irfYmgXBK
        oeny/OK47Z1TQk6pGjQUHcKOi5oGTejeLOXzdXS/eu0kWspe7XUpLfzmndR16gi00cQ/dG0/
        pdhxVe4b2Zp7nkB741R1FQcp5ZgTmtrJOcbRYkGZhzNChPCJm04+PuJmzBMuI66lE4yFH0Vh
        JDIhFpyxLGQX7n3bm6It5cStL9wgu8qNmZaFUXql1G6qgIeNMqrfqA6wRwo+PdVtpQ795/F7
        zpFKXf+SVaZVA07vG9cf6C9YyqKUCBpwInyMUy9yI+wHLAjngUut/j9u9S7v/X4MPGAZCZiL
        eRhxgfEiJFhkKY9S7AmGA4hsJOi/SpmObPmN20vdW+PSObK17aJtX/wF9TIGVo7wNFAAAAGM
        SURBVFiF7di9boMwFAXgQ4WaKSgLSh8kazORqTwAiOdD8ABNhzBn4z1SKQvK1oaIDoU2UAy2
        7+Vn6JksWb76dCRLlo2iKDDnPEwN6MvsgSbHEM8PquUBgAFgp3I+jkLhHmeDh83lvNtczg6A
        hGsoS4Mocc/ZOwwUAOCklp1Ascm2kBv0/OAHZ+WfWOZXbLMTuJokAZu4KpxIbaAIx43UAvbh
        OJHKQFkcF1IJqIrjQEoDdXFUpBSQiqMge4GeHyQcOF1kJ7DEOdvsxILTQQqB97hlfmXDtSE9
        PxAiW4FD41SQf4Bj4WSRNeDYOBlks8EPALhN8NC+waiWtdtYk8RR6KaWvT+u1sjMxVg2ZOYj
        jqsnpJb9FkfhixA4BbIL1wocE9mHEwLHQMrgOoFDIu9xAIS4XuAQSBWcFJATqYqTBnIgdXBK
        QApSF6cM1EFScFpAFSQVpw2UQWbmgowjAbuQ37g1UsveU3BkYBuygXOp87l+t9zUsl9RtsWF
        A/iAwC8SYMIBgPH/iU7M7IFfIdyNLuJOcwcAAAAASUVORK5CYII=
      </shape>
      <shape name='Cats/1.PNG'>
        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
        hSgAAAAASUVORK5CYII=
      </shape>
      <shape name='Cats/2.PNG'>
        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
      </shape>
      <shape name='Cats/3.PNG'>
        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
      </shape>
      <shape name='Cats/4.PNG'>
        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
      </shape>
      <shape name='Cats/5.PNG'>
        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
      </shape>
      <shape name='Cats/6.PNG'>
        iVBORw0KGgoAAAANSUhEUgAAAGMAAABgCAYAAAAJr8w7AAAACXBIWXMAAA7EAAAOxAGVKw4b
        AAAA3XpUWHRYTUw6Y29tLmFkb2JlLnhtcAAAGJVlUMsOgjAQvPMVTT3TBdQDTeEi8WY0nrwC
        FiVKS9oa6t9LeZloT7uz05nZZZbapm24yZFtnkJTm+D8KgtO+9rBgNFAMY8EXw4ntJOKoy3Z
        kACnHkKIqWtFz9l++t53Cb4b01KArutItyZS3SCM4xiCCKLI7xm+fguTW1/o1Sgy62Rcl6pu
        TS0Fcn1eyJdJMJ444xuNTF19nYQmQ2hSygbcBEISwKLt5B1Kj6rmvbPTT0MGf9icBX7CjJvC
        tGrqMVjOlnofcmpi8lC+XU8AACAASURBVHic7b13lOVXdef7Oef8wk2VU1dVR3VL3S11tyJC
        gIQIAiEJkTFgmJGtscFm7Gcbe8zYHpMe9nrMc5jnZ2beMjbOGINMkAUCBSSBEkJqodCtVudQ
        XVXdlW/+hXPO++P8btXtUoOl6pbFe4u9Vq2691bdX9jfs/Pe5wc/pZ/ST+mn9FP6Kf2Ufko/
        pZeIrLXBwvjOR2szB3/BWtvxUl/Pi03WWmGtXVs9sftPqif3fNNaK87m8c/oYAvHvvuBg7f8
        /N/nO7spjlxEacO1X86vuvp3wq7Bg0IIe7Yu8qUma61MyidetnDwa3/VOHbfBeWxJ2imIdtu
        uvW8XNeafWfrPGcExrG7fuOwmrx1XS6nkJ6gWk5Jw3WU1l/3TGH9jb+YH9z8kBDCnK2L/fcm
        a62qTTxyTfXgbX/XPHTXYKimKBQkaWypVDSFi3/rvw5e8uHPnK3zrRgMa8cLh77wgVpv6TiF
        oocQgjQ1mNQQx5ZKvZtw9SvmO7b83M35wQv/VQiRnq2LfrHJWqsqR79zfWXvP/2dPvFwd3dH
        jOcppC9RvkAnhno5pRK+/MC6G/9+09k6r7fSL1bGp9bI9CRhKPF8DyEkKhBYo/FTQ65QIVm4
        vXv6zru+ooauaMwfufemrrVXf0UIoc/WxZ9tstbKuX23XD/2jfd8Qcw+3tHVq/AGFZ4Kkb5E
        oBBYpNCEOUOlNr7RWqvO1j2tGAxTP7Q9UA2EzIEAiwArQASoQCM9Dy/QeKEmbXwvP3vv/V9q
        jlw9Xx1/7L3F4Uvu/ElSX9ZauXD03tcdv+29/2Tnd/Z3dyu8VQG+rxDKc/rDKiwaEAjpfmxj
        gvnDP+wA5s/GdawYjKR29BWFokQpCSiMhWZTY9H4vnJi7XkESuMFij5fYxr3dU9/56FvlUev
        ORZPPfN2v3/LzpfS0FtrRWPyoZcdv/2mW+zcI2u6O0EOhviBh1QeAoGxljS1pEmCkoIwEAgh
        kJ4kH0aIdKKPlxyM8vGrQiVBCiyKJNFUqwZrLEpZPF8S5iR+oJBKkitodJLQq1KSuW+smfjW
        vY966294oD597D2F/jXHz8bNvBCaP/roxuN3/ecvp8fvubir2+L1KsJAITwFQqENJLElaqbo
        xJIag+9JvG6JpxRCpihPElWPrAIOnI1rkiv5krVWmIXJS9s/S1IDBoQQaG1pNjULCwnzszG1
        mkYbifJ9woJPvhjQ091AHf/nV03e+fNjM8986Y+tteHZuKF/+9pnOk/s/OwXpr7zi/uDhbsv
        7h0Q5IoeYU4hPI80EVSrmrnZmHI5Jo4M2likEOjUkqRgcZpLSDDVkyNn69pWKhkqjWelCAQI
        MFajU5webV2pFWAgSgxRQyM9Q5AThKFESVChTygk1MeYe+B3P1I5dOcvV6b3vLnUt/meF0N1
        WWtlZfz+mw78y4c+71V/SFeHT5jzUL7CoEgit4DiCKy2IHAqWLjXLeanqcUEFoRAKYFuTK45
        W9e4QjAmAhNVETmnP7WxGA0IgbUCay0tbhrAGksSWRoN8KTFyynCUCIFqECQLwmSqXvzB7/6
        5N0DO/7DPbZSeY/o6Jg6S/eIrZ5cdeTej91VefarF3QVY7yCj/I8UiOIGoKoaUgjjbYCTwIC
        pBRYnGMibOabCLApYC1COSOe1qZHz8o1WitWBkZZ50Q87wTAWnRLdLMLNgAGUmOxBoyF1AiS
        1BAZS1rXeJ4ln1cEPlghsdIjlPOMP/wnr53Y+8DJ6sl9nykObPpDIUT5DG4wP3v4wd9+5As3
        fSJM95HPKbTwkEgakSCKDfUGWAtSWpQUWCFQAndDJvtMupsTwqIRaANSuB9h6kMrvb7ltCIw
        Ggl5q+toFNaCNgACKSXGWjAWYy3aOLWVZAYwNQKtDWlqsU2YX0iQSpDPC6QU6FSQ4lE79gj3
        /sUHPrrljb/xUWvtrcCfALuAMpACdrkqs5/4hOTjb1bz8xuL3d3dG6MouvmJb//xh/ff/zl6
        SykUFCSC2EBSszTrCRZQ0p3b85zjYY3FeALPk1gjkBLEojsLWNCpQXhOfZE0+88EgHZaERjC
        qwXWWlq6yBiLtc691cZiEBgrMMa5hc00AyQ1pBqS1BJri9YWbSCdsSAFvpdJlhYoOcOzd3yc
        sPbQW/oH+t6S1CcQpoGwCdYklL/3DqzNFImQVMTT8NAepPUoqzyV+Rrlpx5lsBtSo1ioQ1q1
        NOMUoyHwBUqCpwSBEniewFeGxBf4VhBi8X13H9KC1u48wuIWHGCMwFqz6iUFI02THMIx22jQ
        OrMbi+A4lRSnkCSQaogiS5xaGqkliixR4t6n2iIFFEJBb8ljoE/RWfIoFgM838dXT6DmJZ5U
        IKQLLiVOR7QoA8W5cxa0JiykdF8yQBpHJImmUU+ZW0iZXdDM1QzVhiDV4HuCQiAJQ0voSQIL
        QlqEELRysoEvsMItHinAGDDaYq3FWNt7Rgi00cokw6ShxgDOHzfZCjfWrepUZ8xOIE4szaah
        FkEjsjRjQ61p0cbSUxBsGPQYHvLp6gzIF3ykFyCkB1KB8LBSooULLJESQWaY2skawEmqtQbQ
        CKVRwiD9HL7R5DsSevti1sWaZjOhUkk4MWM4uWBYqFtkJAhz0BlItIF8zl3jIqOUcGpMQJqC
        LwUgsDrNr5T5y2llYAjPE9Z5STpTN0aDNoJmYki1pdG0xLEhii3lpqFaN1Qji0ktQ12WjaM+
        g/0exY4Qz/cRKpeB4CGkh5AOACEVQjgXx0qJPG1olDHNGiwGTOpeW4O1GozGWh9UDs+PCcKE
        fDGir1ezrpowPa8Zm7bM1QxxZClphTGGIBROCnLgGwgBK+3S4nNgvbRgYKVOjXP9Ug2JxkmB
        tiSJIUqg0TTUYkujaZivGupNzUCn4LxRychwQC4f4AUBQoUI6SNVCwiFEO43wgFhs98IuZRm
        PkVLmUU8BAZhXFrGgdD67YHUWOMhVIrwQ6zXwAsUhWLCUE/CyRnDwSlDtW7RWlHSAheKSowH
        xkoChcswaDLXV760YFhPptZAnILColNLI4EkNjQTqDUM1aal1rSUa5rAM1yyQbJuxKNQCvBD
        HxkUkMoH5SGl5wDJVJOQnouwhLMTMvtNJiFAm82wCGPbVJV2oFoN0gGBSrFGY0yKsBKMQGgJ
        UuL5KZ4X4QcxQS6htythclpzeMYyHVsaeUlnainkJYGx6AB8D7Rn0QkYq1aUxTgdrQgM3xaM
        MRarQQucfYgMUQyNyFCuW+YqhmrTsKbPsm2doqfHJ8yH+EGA9HII1SYNykNKH6QHomUvFCBB
        SffZcjCARXGQLQNuHfOtBqtchGYUoBAmRhkJNnUuq3CuqzUST3ooz7m4Sgl8P6GjkHJw0jBT
        URij3FmNs0uxLwm0dQ7MWcwVrEwyirmmsT5pqhFIolgQRZZGbFloWOarhijWbBmG89cpCh0B
        YT7EC3IIFSA9Hym9TCp8x/gWGC0ghDPY7rUAWgDBYn7CtnSTyV4bUAKMBDQYAUKz6BaRghWZ
        EyAX/ySEwIgcAQ4MISVCSrYGCUcmEk7UXFpWCOniptCQ+g5zpH8m/D+FVgSG1rIugi6MmcWm
        lijW1JuWcgSzFYNJUy7bACNDPoWiT1gI8IM8qACpPKTynYFuAaD8Nolo/V5SUy4/4bGU1xSn
        /AKdqSmZqanWvwmwMksJsJQzE63ai8NKCO0+QiCyVIhSIJVgg4gpzKQcmbPMS58ObcnlJPkA
        F+2GxZWw8LS0IjAKhf4qXpEomQHlUs0LTScRQmsu2QDDgx75QkCY9/GCHNLzEUoh3V2CF4Dn
        ZyvLc0xTbbahpaaeo6JOo6bw3GubZlLkikAurRq784GTHgtgnBpTAjwBOkVkXxWECCEIyApm
        WIZFgpIJh2dhwXh0RIY4dJ6hKnVgrRVnI7m50qxt0wbdpPUjpNrSTCyVmkGi2b7OsmrAxQxh
        3sMLQqQXumKNp8DzwAgWZhc4OW0xBoZHCnQOrsqY7i3FEUIupUtbzP2RZXvj/t7mWTmRyCRB
        StBZFlZKiBOOH51jrqzpyMPQgCJX8BHCorTIzmIWWTQgBNbEjM0bmklAlAApBEHfCln4XFop
        GKkq9tOcsURGs9AQGJ1ywahhqD8kl/cIch6e7yOlj/IUBIryXMqTu2e4f1eVmUpCnLgIPAwk
        v/GzmjVb1y2pFOBUSRA8VzIgi/RoQ+DU7zj90/aZBGG45bYD3LWz7FSSB/lAcN6wz6u2dbD5
        nDzSD/GsdgFGwcNaGOgzaJNQjiReVeBj6ehalR2UM66DrzDoE/aZb31ystYwq6opVOuC9X2W
        wT6PsOAR5r2sdBmiAh+t4f7vnuQ7T1Q4sWAJAoEnBShBmlpKwhKIZKlq02J6Kw18CgiWUwFp
        GXNwPDFtALTxyLY+t2AMBZVirZMYKQVRCo8fTHjs4Cxbhj3e+qoS69fm8YUBEkxOYbVPfy/o
        6ZiFmk8oDEPFkWUnWjmtuOwalgYOLNTtqmps6C0Y1gwpcnmfIFD4vkLJAOl7TE03+MK3Z9g3
        oQkCQV+nAunS0L4wXLnOctUFIUPDxefy2drTaKXTqSnhbIw9HT9aakossctKrn9FNyP5Jvfu
        g/Gq86JkTpBo2HtC86dfneeaHXWuv7JIEHouD6UVeW3p6dLUpxLmm5agNALgA8lKedmiFYPh
        l0aqJ+cTSgXF2j5JPu9Kl0EgUUohfcXRI1U+9+055qrQUVIEynkrxgo29mlesxk2rOtA9I5A
        7jT5ttZKfj7dXXZ5s8miuDhqDwhUAN19XHSpZdOaaR7fZ3joqGIhluSUxVeKKDF8c2fMdNnw
        M68rUMxLUm0xRlFKfQa6mtTiAl5xEKAA1F8oD5fTisEIetZ01nWBzd2RY3TOww8kni9Rns+e
        /VX+5o4yTS3o6VB4ynE0VIJXb0i5ZItPrn8YSn3gdzhPqhVBi8w3XQQiiyFsZoCfo7Za1KaS
        sNn7lk1ZRn4eulZRyhW5qnea80ar3LVbsHda4nvgKYWSgkf2p1QbVX7uugL5nMAkgjRUdHX4
        DKUBngoBeoDplfKyRSsO5Us95+xYv6qLoX6PIFT4gcAPBJ7nc2yszt/cUSbWgs6CkwgLDBYs
        77s05ZUv7yG3eiN0jUCxA/Ie+C1GQ1aszSJp26Z+2pnaZrRbBtyaDIjl7m/r7xm4gYB8AKEP
        +U7oWc3QphHe9UrBNRu1uxQBhUDQ1SF5ZsLwhTvr6BSCUGT369NdLNMYuwNg40r52E4r7Q4J
        iE8U1w00CEOFH3r4vsD3FJVqyt/dXaWeSIp5t7q0hU29hndfbli3ZRi6RyHfBYHiwJPT3Hnr
        IR67fxwi4/z+Raa3gHBp8dOvcnvq39tBOuU4FnyX/37s/hPc+a9jHHx6HpQFT0Ghk3BohKsu
        DnjLBQl5z2KEIPQknUXJE0cMd30/yqQffF9QzPtM//CLNBbGXrcSPi6nlaqpVbNPfZ5SUMf3
        AzzfSQUIvvFAjfF56C5KlBQYC9uHNNddoigOr4JCtwv4koRP/eluPvfVXYxNNckFkhuuPo/P
        /t7lDK3vhjSLqBFLK78lOaes/pYUtYNk3E9LUowD4uSRBX75//gh37zvAM3YsHog5INvPY/f
        //A5bhEEBegdZvuOKQpBlVufUsxFksCTFPPwradS1g4pzt8gSROBTiVBc4y5Z774n6y1Hz3T
        wG9FklGb3vWO+b3fxPMUyleLUvHs/oiH9qZ0FASeEqQWLl6lufFyj+Loaih0Oa9GWT79P/fy
        8b/YydhUkzCXJ0rhX+7cw/v+6wM0ZhtZ8s+0Mbb1vn3VL3O/bCt7a5ZUmzGgoD7X5L2/+yhf
        uXMfUQphLs/YVMTH/vIp/uD/OegkBOuyAsVBNm7t4J2XaDoDg7UQBgKJ5BuPJtQiCHyJ8iRh
        qJjb9fXeSmXijKO/FwyGtVbO7P7CH+a9Op4v8X1X1NdacPeTMUgXQ6QWzu/XvOkyj3BwFYR5
        p4g9wd4n5vnLr+1HKsGNb76eB+69g9/76EfI5XLc8/AR/uGWQ6BY8pBaQCx6TKeRgueoKJaA
        kZZ/+MoY93z/GLlcjt/76Ed44N47uPHN1yOV5HO3HmHfk9VMT1iXKc73snZTkbddpCn5FgPk
        QsGxGcueAxrPB8+XSE8ho6PU99/6vhfKy+X0gsGozY1dsLD3nnzgC5Qv8ZQkCOD4RMKBE4bQ
        E6QGzu3RvOUyQW5oCIIciwZWCD5/+wTjc4K1a9fynne9nc6uLm644Xq279hBrpjj7+84gi1H
        mVpq2YosGegal3iO1CxKRRsIWThvKgn/eMcYuWKB7Tt2cMMN19PZ1cV73vV21q5dy/ic4K9u
        P9EmZNbFLfk+Np1X4K3bNTkJIFBS8NDeFJuZGt8T5AseM8/c+hlrreIM6AWD0Ry7+yNBOoFQ
        nmtz8QxCCA4cTWgkzlgP5i1vuQxKIwMOiJZ7KiCdi9i5v0Fnbyf5fJ6JyUkefuhBntm9m45S
        iZ6uLibnE555ds6pDtu28ls2YNGom2WftcBr2QoDvmXP3nkm5lN6urroKJV4ZvduHn7oQSYm
        J8nn83T2drPzQES6kLrvmux8QkKhny1b87xps8ZiUArG5gzz84YgAOW55u909tl8+fA9l50J
        GC/IgFtr/f1fff/PhTmJl5UfZebzj88bjHUdgzdeZOld3Q1+ofVFt8qFoVJLOT6j6S7mAHjs
        8R/S39dHM2oyNz9PqVggThKOHa9x/uUDkGRpDLKmJeAUVdQKDE+9UBYBkYKjx5vEGkrFHHPz
        8zz4/UfIhTmmZ2YA6C4GjM9oqhVNd1FmAWKbU1Do4rJtKYdnEu7bL0iFYKFq6e91TQpSSUq5
        mPmD3/oD4JoXwtN2ekFg1Ob3nl+dfJK+knIrQgpUlmEt+JZQGK7fDOduLkHY6W7IGJclzRgU
        x4ZmZPCDAKUUe/cf5sixCbTW6DTF931maglz1WyVtpgr2uoVwGIL46J6arcrmQeVxRULtYRK
        LFhV8NFpypNPP4tSiiiKUErheZZGnBDFbV5aO8jCQ3Z1ct2ls0xVDPumLKGX+SJZz1WiJOXD
        j7zeWlsQQqwoGn9hYBx58D+GsoJUOZQnsoqou/irzhecP2g4b2MIuW6WVnJ2gxbXLolBSYmS
        kjDM4XkexjhVF+Zy0GyS8wRKZHai5eECiy19p6U2MExW+8aAEUgBOQ88zyPM5Vxlzxh833ev
        dQMjJUq49iN3uCxAbKVRZEjHUIGfvbLG8ZOWoT7QuGNLT+L5inTuGOWx+64Gbn8hfG3R87YZ
        1lpRO3r/f86HKutLtQjPNT6DoH84x+ZtJURX31Ixp0UtxgBBCMWcJdFuhQdBQC6XIwgCNxeo
        DaGyDHZ5oJfZjMV0x7LI+xT1pdvUlgETM9ApCJUl1Q709nMCJFpTzFnC8HSFqzbwvQI9wwW2
        nR+QLyqksK6jXlqEFBRzmvKR7/3O8+XpcnreYNRqU0OVk3tCEEiVFe8BKbKij5eDsAdUJmzW
        tOWVMnVlLJ0dinWDHpVGTBQ1ieOYJE1IkoQoioijiNC3bNoQ4IYhsu9a08bkHxGFtwK8rJEN
        k0CScu76gNCzxFFEFEUkSUKSJsSxu4ZKI2LdoKKjSy4tgJaHBu5YIvOw/BzkS6A8RFaeVa7R
        BKUklaOPXWWtzb2oYEQTj16pK4ezC5BIbNu3MwO7mLtr937aGKc1FAXX7MhTnp2jUW9QKZep
        litUKhXqtRpT0xW2rAkZXZuDNGJxpZt2d7Xdi2qzK+32o+VhJSmj63NsWeMzNe3OUalU3DnL
        ZRr1BuXZOa7ZnoOizM7D0jFahrzlFLTVV4TIRsqyWQ0hBM3pPdQXDm57UcFoTD99Uy7wHBDC
        9ZzK5Wlqu6SOTl+vthCl3HTDAJvWBIyNT7FQXqBcKVOtVpiamiFqlvn1t42C1x5NLw/sTkft
        0fmyeERZfv2tQ0TNMlNTM1SrFcqVMgvlBcbGp9i02uOmG/pdbgxOk1ppu6XF1xkYGISwCOka
        GIQpUxvf+a7ny9d2el5gWGtl7djON4eha5GXSmCVcD0DrXT3on/fniVdJiHZuEDHKsVnP7SO
        rjDm+NgJJsYnOHZskvn5eX7zveu5+jVdrmPa6oyp7WrjNEnAFhCL6qz1He0+SxKuvrqL33zP
        WubL8xw7NsnE+ATHx07QFUb8+YfW0LFKkfVstkm0WWT8c0FxyLheCTcOoaQgF/g0p3Z9aAVb
        WTzPYZna1GBcPoEvXRa2NShyipZaFN+We7is9ryY5AMiw5XXdnN/7wV89K8n2Pn0DANDBX7t
        rWv5wDtHM4OfqT2jQLVWfZr1RLF0rFYlT2dSKjIAWul3jGOyhE//ylq2jvr8j68fY+pkg+1b
        h/jk+4e55IpOaLanW9oYD6e604v2ycVOApFpCmfEPR/qk7u6FxYWuoG558XfjJ4XGLXGzOuS
        5glEkUxP0tZ6JJbAWARl8crdjSz+c0utWe57uMSJhY38918dZMNQhJIKisoZUJP1Ptmssclq
        0IqF+W7K0TAJPSBz2KyBTJgEYep4dpaOYIzu0kmQ7SqO7JiW9793Fe9/8wBJYvFDIIdTT+2S
        0A6AaK267L5Mdi8ISIXrrWsZcOn4E1VmKPnxK4BvnlUwrLVibt9tn5JmDiGLSA98JQgCEDIL
        xoxwPwissa5p2bfgZVfZIuOM/lP7Crzm81tgJs+2bdM88ZF9EBiIdfb/WcsNwv2OEw4d7WE6
        3kShb5QgyCGVzNxq3CibNtTjVUyOd9KvIjasm8zSKZm72zLMkQEffB+3MKKWYc74LQWLQ3za
        YhspqTakCQhhscZgrEZaSxAalJ/13qbCbWchJXHtBM3G7B+ddTCAtUn54MZA+tSaUGuk7Fkw
        1BqaRtOyUHerIdGS1EA9NvhK0RFKrBDkfMlAj0dfb8Da4ZDeQZ9PfXcdpGtgleLp45185bEp
        3nXllFNJrbwQGWMwTJ1I2XcQSoMJaVxBJ9VM67XshhtssdaSJAn7jvl05DT9wxmjF+0A7r3F
        ASTJ2kEtRIbpqYSjx2KmF1JOzCQgYK6WZnMahkAJ8qGrUSUmxaLJB1DI+fSUFB1FSeiBp+cw
        tbGt1tpRIcTznnH/sWBYa0WlPP33ux59lCN7yqTGo7OYZ6jHY7BHMdDrUSx5+DkPT3qOKYC1
        kiQxzEynzJdTjs9apg42efCHdWZ0L7eMnQt9QxAoqMX8j8c38a7LppxtWFRnmbusDQuzVWbn
        52mmh4kbZbwwzCRDZdepMdqQRhHluVnq1XkWZsv0DxSygLrN7RXGqTALjTnDoUMJ+44lHDkR
        I4RloFPQ3yPYsSXH8ICkq0vh+S7tsdjkYDU60TQaKfV6SrmsGTthODadMj3XRBHRePAuLuq/
        /M+Bt58xGNZa+dh9X/lEeWryqvmpcc5b3cXoKp+eXo9CXuCF0tWtrUfacEP51kqiJphM33Z1
        K4aGfS7MOU8DofnwV7dBsA4GswCxI+KBE1t54JldvGr7nLski1vNwhlfZWaIKtBsCur1OYLA
        R2XNyQDWGLQxxHFCs64R8QTKTIMZdcC2YhRpoKkZH9c8tithai6lGFo2r/N4zcsLlDqk8wW0
        pVa1lMuGerW52IObC6Wr9XuaQl5Q6vYo9QgGh3zWrLU06oa5uYCx8TqzE3u5/7a/eduzO+++
        bvMlr39e6ZHTgjE/f6Tn4W/8zWsHN2y+7+JX3ji1N7rtz8LYVenn5zWHjhgmZ1LKVUOlaZmp
        pkSxoZgLUMpzQ5PajRuDmw0PPIGf7+R/Te2AwQFY0w2DBTi8AInh1+/ewpfsfaxeD34x6zzX
        KQhFR4dPUR3k+EKINEVMoACx1ERiACxprFmo1Bgt7qNU6soWcgZEnDI5aTlwKKHatKwdFlyy
        JUAbw7HxlG/cE1GNDHM1jdbGMd8zmT9i8ZRdtOO1KMKTKaWcR86X9HV7DPb49HVKrICRQY81
        q0cYed2Hzj/w+L2rn3n0zu1bL3vDUysCo7t73RzwFSchU48cPHzyz2amKizUDRpBXyFgqD9g
        7Sqf4UGfvr7Ater4Avy2tn0LaDcnXp1v8Kn7NoE4B4ZK/O5b1/HbF3TQfesE1GMeHb+AxyYe
        x9oy3f0hvf04NSYMnT2dbFw9wdjju7j7QD/dxQLb1vcRBA6NODY8fXiG+Vqdi0em2XjeDN29
        a2gNWyb1lJOTmkrNsmoA4kRwYsrw2O4EMBQLMDogGepXDPbn6e4WSE8447DY90sW/BtIUhrV
        lFotZWIq4fi05ol9CzQTsBiGOiWromOsvkaOnH/FtXf+WyC06LSBibVWzpw8+rqnH/jWH40f
        3X3h9DP/yjlDEeuGcvT1Knr7lEuqBQJQpHWo1Sxzs5pK1VCuGWbLlmbiGtZCX+AFPjceuAkK
        V8Cr1zPz7lFyEh6bjXn15w/BrjHe1/01/vvLHyHI+5RKHoVO5cA1koWZBR79weP8X7fG3P04
        XPvKbbzxwvUA3PHEYb794NO8/iL4tRvhZZfuoHOwH6zBRAm1qqXR0NTrlrmypRkZujosHQVX
        kzEGTk5rZhY0lYYmSdwgKMIisQQedHUK+joU/b2K3h5BqQCq6IZvSATNpmV+XnNiSnNoosrY
        whBDF7yVDVu2/em6ba/92ODgYPXHAWGtlc8Bo1abGn7ivtvumZ+Z2rxhyyUMjgxx6Cs/T1d+
        ls6Sh/TBpDA1nXL4hObYyQZzVYOUknyYI/QkA50e+YLAVxJPCEJP89d7z+dz5Z+Drev55M9s
        4pc2lZiJLX0hDN1xEu45DGNPsvONX2TTUI0grwhD5fxGzwMN0yfm2P3kE3zxuwl7xvO86dIr
        APjWo4+wZbTG+66EC7Zvo3dVv/OSUjf33GxqoqahGUuihmG+YpmdM0zOGSbnNaFnKOUshdAy
        2C3xlEUpsuldVzRbqGsmZ1KaiaWZNEm1prcoGB3Is36VT3+vQnhu64tKVZPmz2ftDZ/jwK4H
        Obp/F2vP3fZH1r8zrAAAEpNJREFUl1z19k8KIU4LynPAOLbnkTc9+cg9t6859wI2X3INQRCS
        Nmd4/HNvwkRTnFwwHJ+JqEUpec+ycaTEqt6AdWtCOrt9ZODx3PDcgJFc/o9v4QeNV8PFozz8
        3vV0epJyalkVSr58vM5/+dJB2HOU391wC5+++nGsl0d62cyG57mMaWqZmypzaP9B9uyfZja7
        rd4SbDmnwDnnbqJ7oC9rZkjdqkkNOjbODV+ActXNHhYKglLB0NUtyJdo7T3hIrfT6YysHoMG
        Ys1COebw0ZixqSaHJ+s0U0FXXjLcV2Swy5IbvIjtH/j6PwI/32zOjz55/ze+VZ6e2nzh1e+8
        enBk7XdPB8aizTjww/uvPLL/6duvfvsvUiz1AJDEEYeefoTvPr1A0pxnuDvPZed1MDIoGeiX
        +LmMWVYu3YyV7oJ1K0ln2Ll/lB9MbYFzimw7t5vhUDERGbQVzCaW1w3mYE0nnOjhD8e28+vV
        /Qz0Nly2phWAWcCT9Ax2Uuo4n5HVs8zPOTS6e/L09ffg53OuxcckuD5kl7KQyjVdDw1aRldL
        l4T0cMfN5vRc/CGyfq12BNqQacU2vqCrV3Fhb44LTUDUKDE1ZRg7odl1uMHThyp0DszS86qn
        3r96w/Y/zOd7dltrt08d3/exw7u/92HgOWDAJ5cMeP/qjfG6bVeglEIbzZ4f3Mnux75HZ3cv
        m9f0MdKR0NftkctLwlCSphYZW5Svl/JOUrEYzS5Bzsd37oBSP/R28OubitS0Jcr+rZ5a1uQl
        b97YyW2HZ2FmM3ccH+X9I3vcLiGoLEuhAR+kxC8FrCqsYtXqLEBsSaLNahiL3YUGpEUEliBs
        q01YljGdLAY5Td60BUDLkNssXZMlLtPYkqZQKEnWe4LB3iJTM5Ip0cMP7v564+H0S7vGDz7x
        i8DnB1ef9/vPPUGLPr4ERlf/8CPW2jdOjR+448Fvf5HAD3jtOz74J/2r1t26+8tP3huNT9BM
        XGigPIOnXLegsmSrtxWwtd2QMhw6PshtE+fDug5Y08HLegPmEktqW1EzzCSWmzcUuK2vA3q6
        +P2nLuT9O/a5Rnurl4pUFrCtAUwyX1AsZoOdNLTm+5al2u1zXizlrRbH1F4IOVvS2rBG62yf
        lMSipGTbJZex/jX/7dxDu7//ivtv/+cvj2564lcqlcobOn7M1k2LYFhrvX2P3/dL+3c9wkWv
        vPZr6zZfdrMQYg7gwJ2fqNWO3lVMEw8TWkwq0J4LA5S0Wfqpvf6QdQ5bzR8/sRlyo9Bb4MPn
        dhBKwbheEh6NYC6xbO704ZwOmClzaP953LtvNa/ZfgTSbF6vlcYQZAFhO6NbSb5l/bbPGRNo
        JS+XScHy/2uNo7VXGFqBYyuSt2BTi07dvik6tS62SiBJU3I9m04C4+dccMUt1toNzz529+P3
        3vJnJ0+M73vT0Mi53z4dGItn27vz3r8+OX4w97obP7hp/ZaXvb0FBEBxZMfdjShxGyem2U44
        emmrCpf7WVbZE5qZ6W4+e/RiWNUBwx28ZyTHiciSIEgzILQVVLMc4afPKUFfB3QO8qmnt0Pi
        ZV0hixzJsqmtWe9WvSP77BTGtqS0dYttErHI7B9Bi+n3Fnh2CZDWa22cNGjjtq/Q2S5tOiWx
        3ZSGL/pYq/dWCHF486WvH37l9T/77ae/d/u3Tow/+x9+LBgV23HzlW+++YZcd/dzNj8srX7Z
        /xL+arQ2RCno1O0OkGqXrTRacEoBCQ0i5bNPnQdiHfQUeMOGEt05xbzOsuQZIAZIkUwlltf2
        hzBUhKEC90xeyP37h7NaxvLLbVv9p3Jx2Xux7HXb+5ZkiNMds2UfWuDDKc0Q1qCN25Un1YI0
        cTyJMunI9a5HFNd97ZQrEaLZO7j+ukuvfc8bp48dvnY5j+GTS2BcdtllP3IMqti5+t6ONRcR
        JylJrN1gZOo2bGn92Jb3lIExNjnIx3dfASMl6C1y7aqQamppGom2kFhIbVb/t7CgIedJXjda
        gJ4i9PTzy99/GUQ+p85t/KifjFFiWWfKYgPcMptwSito++etz9rVXbqUTbYGk0CatCQj2z8r
        tW63z6hJ/3mvPlIsFk8u56MQwnZ3D915wcuv/cBzufzx51d2FUI0Ry5+58dqzZQ4tkSJ2+Yn
        jS1JdhFJAjbNVpLQ/O+PbAU56hjbnWM49Ci3NitoFQHt0i1rK6ikhq0dPnQWYKjI09ObuWvv
        6qxQlDFUKgiCbNglgFzoXnveUovQ4l4j7YC01+aXUyur266aWEpYLpaMNTa1JNqSuF4H0tiQ
        pm4/rSTRJHKQgS1v+9WVjAc87ya2wc03/J+l0Zd/Ip19TEaRdN0QSiCTrMgn3HajnjBMTXXw
        F+ObnP7vykPJJ7WCJpnTcxp+aAQN4+oflHzozENnF//30+dwzfYxV6gC6jMJTz5TYc94wsmy
        JVSwdsBj+zk+m87JuSmoVrXQtjVMCNVm6DnVbpxW27VWylLJ1SaWRAvSxC2+JHaS0UwsUWxI
        kpjBC66tdQxtWVET2/MGQwjRnNhz+3uf+uLPf0kID6kUnrRtouXKrp5n2DneD80R6A2hFELo
        sWCh00qUWKxUgFgCR1hIkNSMhKIPnTnoKnDr1Gqieom5qQU+e2uFr3+/ysRsg3J1KVTI+TDU
        r9gwVOJDbyzy7ms6ECUv67s6jZvbPie+/O+LDXKtIlRW8TOZNCSWOHWbmiUJRJEhitz7iCFG
        L7/5bSvdhP8FtXeu2vymW8Y3X//92qFvvlzKHEq1NlnB3ZAAX1gePNkDuU63wvMeqwLJeCxY
        E7qUUUuDWxYnt/EFRMYwpQXkFBR86A5hupvf+lvNffcf5cA4FPI+vl9kaMhbXAjGGOqR4bFn
        a9y8p8bf3tvgMzd1se3iotOni4WlbBm076Igsv7dRWnI9FOrTNvyGlPhtvlLl6SiGVuakSWK
        NFHUYN2rPnhn1+DWu1cCxAsGQwhh5488ed1jR384reIp2ZRZc0Kbl9NEcKxWhFC5QrMv2awk
        JxOoaOjMzrjYS+Jq+kgBB5uC2MJmT/CspxwoccCfP5KwpgpDgx3IzBYsNkJkPAx8SzEfYqzh
        /t1N3vWZhD+9WXPdG0tOhFoR5mK3Cm2fZQdZHOa0YIQrWmlBmpLZCEsSO+mIYmjG0IwtcZwS
        DFxeyW/+ubedySjZC57P6F63Y27rdb/32nLk02waGg1DIzLECUSx2wyynma1AF+CEuSUg+tg
        ZElt275dLSkRDqhjsaBLCnqVzBAClKIQ5MiVOgn8AD/w8X0fP/AJ/GDps8DHD9z7wZ4ijcTj
        V/5igX/+WtnN6y3fd6QlCa2OddMCQriOoNSQpCzusxhFljiyxJk0NCJDs2loNmMi08PWN/7e
        jpGRkTOaBV/RTN/Ijnd+d8s1v/bJciOh2dQ0mk5NuFViKcp4qXcJQyAseQmxhcMxNDRILCrT
        FfMpHI8hwBIKi9ea5wCwKSVPEPjZbp6+A8HzfDzPw/M8fC/7PAPED3xyYQAi4L99ocY3v11v
        m6JtC+RaAzWtzIEGm2gnCSnEMcSJIY5dpjeOLVFsaUSWRhOazZhaFHD+Wz7xsp4Nrzh8JkDA
        GQzlr3/l//bJqDp3wYEH/vxdUHT3FQo8LENBGeYSiGI6khShDRJLXlgsgukUatnOyomFmnXe
        WCgsqsWkJHF6oFGhUyZ4vo9GZhsat5kqWos863uVLjeklEIpTRQLfucf6mwaVZy3VbrhGwRL
        Y2nZj3ZFpjRTS2lmG9LMhU0SiBIHkLMTMdXIY+sb/ssrRra/69EzQiGjFYMhhLDW2vdZ1Ojh
        h//qFdbGGBvgWcPG4CTEM1AfoJIkRGmKMRprJdK6DGjUyjCQqW8LibXEOiVKU2jEUGtAdQYZ
        VxC+ZE2/YrhTMtyn6C5IOnISbSwLdc3JqmVyVjMxp5laALfzJ+QCQSVK+fg/1fnC7xQRPq4B
        uw0Mm1pnG7TNpMKVipPFzZGd+9pSUUmSUE/zyabX/caFG6788DNnAQfgDMAAEEKk1tqrO4e3
        fn/3Nz99sWkcx+qAIXkS9GGYXQOVOnPdRWrNhE5PEErPNeIJEFZgsKTGeURRmlKLEp6tN6Fa
        h9kaneznF18ruebSDtYPS7p7JBTajE5L7aRgaobJKc2uQynffDziB/sEU+WUwFf8YH/K1+6N
        ePsbFUuDNAaduIRnmgVyaWKyhJ8L7pyqcuopijVxHCFym8df+faP7+jces3MmfBvOZ0RGABC
        iMRae0Vx6IJH9t/1mQtn9t1KYBa4qfh9/vbEVhgq8kgpT3+gCDyZTWd5rtlQuM3rE2OpJCmz
        9Zhj9YiF2SpMLkD5GP90w1GuvyQHJenaKS2uC7DlGLVtXSRzMLJOMrLO5w1XSY4fifnn70r+
        5eEmx2cEX3oo5e2vBoTBpiaryhqS1JJqkUmDXbQZUQJx5DbETJOYSgNGt7/nFnX+L72/c+sF
        8ZnybjmdMRgAQojYWnv5he/+nw9P/PCqi3fe/lleXdzFHScfZuJoFxQCnvUVEkh1SE+gyXkS
        D2hYtxnxdJRyqNbk4ZMLMDELR6f54MgjXDo8hdadqKil0NpT3+1Z1cw11Uudg6NrDR/5WcnP
        vNLni98F0MSxxlNiSQVpQZqIpX3aE7d1eMsZiRMnDapwPtuv//C7R3e8+19erEcTnbY7ZKVk
        rQ2ARyaPPH7hzq9+hkef3cXHF26CNdthYz+9A11s6yrQmw/JexIfQQNDPTZM1CN2zpRhcg72
        THGJuI9/uOIuOkPByGgxe/xO5p4u3357kUyWBnG54MVtVYVTSyZyKW+dGeg4zdRRkiX8ErPk
        ysaWNE1o6iIjF7/zsTVX/eqbOjtHznjnnB/Du+d2h5yFgwbGmEfHjh7YPrP3Hr72nbv41NFL
        YWgbrO6G/hJ0FtnkKzwBTQ2HmxGUazBZhiOz7JAP8JeX3MVgPiIIfYZH8yxur7pYp1hOZqkO
        0ap5GAMmxWiTFYAy25BJRZK4olCcWpfeiCGKNVpryvWY/o3XmE2v/82f7Rq55Esv9oO6rLXq
        rIORHTicHD/6RJLEm+PyFN976Dv8wcN19qut0NMPPXmXaZXCuZq1JkzVoTzGOzof5Lc2P8pA
        IUZbxWC/oqc3wIGQbSZps4xsa/u7Vg0FFr0kt3Na1oObkj23w0XSOjEupdECIoY40aSJpRkn
        qMJGNrzmF/5p9cX/8YM/qrXmReDZiwNGdvDcoX3P7BZKbvC8gKmjT/K1+x7mK89WeVquAVXA
        hdkR6Cpvze/hzQP7uaj3JEpJrJQUc4KRYY9cKBDC7SUost35RXvdwmpaz9Iw1rpeJ4NL7sXa
        FYISF1HrxWRfZhNik6mphET0MXrpu59dd/mHbsx1DZ61Z7Y+T369eGAATE5OFivzUwelVIN+
        4GOTlMkD9/Pgg7fx6JEakcqxIVxgR9ckQ8XYdXMK5fYL9ASjA4quTumGaSUIzz2nSZ5Gu1rr
        gjaybbFT4xqYE23do910qxrnbEMSu8dKGG2oxx5DF1w3u+EVH3pnadW2+16KZwe+6GAAHDp0
        qDuN6mNSiqIQAuUp6vU648/ew9HHbyMt76cUQOC7fTh85cZ5+7sEQ72e2xbDk9lob9aelU1P
        Ld6Iu5usA9DV6HXG/FadPk0hyqQhSdxwTbWZ0r32isY5V334A33nvPbrL+WjTv9dwAA4efLQ
        qvJc/Sjgt8Z1/SCkNjfByWduZ2zXXejaUXzfQyrBQKfHYK/E89xDQ1wRL9uRIXv2kWxDw+JA
        aD3rKdXufetxEmmaVePiliQYOkcvi1Zf/v6bh89/x5d+Eh4C/O8GBkClMjEwO1V5LEmSNa3P
        lKeQUlKbm2Tq2TuZ2nc3ufQIvR0BXrYnh+e7GetAtgEiloNhs+c+uS1a01b3Suqe55FosNpQ
        bzbpXP3y2pqX/6ebV51/41d+EkBo0b8rGK0Tzk9PX9mMm+9MdXoR1paklARh2N3R2b1ON2fl
        zDNf5djOr9Gc20sukCipkErgexYpJXJRVXHKTJ8Dw6kno5dshtGaegSday49tuay9/3C8LZ3
        3f2T+OTlf3cwfhxlc9M+0BvVZi+c2Xv7z4w/+fWby+NP4otocQcCmbVySpbshusXcB6UNiBw
        nlNKicGNr/jmwCXv/O1Vm67d/VI+1Pffop8oME5H1lpvZuzRS2Z23frpE3sfekN1dh++51TW
        8ijcWve4uVQruocvODC05bUfO+f86/9VDGypvDRX/8LoJx6MdrL2ZOnknsd3LIw/dt38safe
        06zMnqt1gtAYmQ8ey3UMfqtrzUV39m9/5RN9fVes+KmXLxWd6ZZ6LzmtYEuIn1iy9iw+vOml
        oJ9kG7AS+v80GP9/o5+C8RNE/y+m87LnY3wUjgAAAABJRU5ErkJggg==
      </shape>
      <shape name='Cats/7.PNG'>
        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
      </shape>
      <shape name='Cats/8.PNG'>
        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
      </shape>
      <shape name='Cats/9.PNG'>
        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
        TkSuQmCC
      </shape>
      <shape name='Icons/Black X.png'>
        iVBORw0KGgoAAAANSUhEUgAAAGgAAABoCAYAAAAdHLWhAAAACXBIWXMAABcSAAAXEgFnn9JS
        AAACtElEQVR4nO3d204CQRCE4YmvxJMB7x+9II0TzLqH6emurqlK5s5E/nxooixLazG7BX2f
        yNE0PVpr3621Z/YDcdyzvZoe2Q9kdIZjhwHJcOyURfrEYUD6xCmLtIVTGWkLpxzSHk5FpD2c
        MkhHcSohHcWBRzqLUwHpLA4s0lUcZKSrOHBIoziISKM4MEheOEhIXjjpSN44CEjeOGlIs3Ay
        kWbhhCPNxslAmo0ThhSFE4kUhTMdKRonAikaZxpSFs5MpCwcd6RsnBlI2ThuSCg4ns86FJzh
        JjQcDySaJtSQESSaJvSQK0g0TVVCziDRNFULOYJE01Q15D8kmqYbwIPxRqqOY+d9cSTa3wYj
        SCw4f/4wZ0FiOJv/NRFS/tn9l5aQgHFsQgLGsQkJGMcmJGAcm5CAcWxCAsaxCQkYxyYkYByb
        kIBxbEICxrEJCRjHJiRgHJuQgHFsQgLGsQkJGMfG8mrmyEl/2+PeVkaCx7GtiFQGx7YSUjkc
        2wpIZXFszEjlcWyMSDQ4NiakMJyvqG/UXmEsY2pprXH99ND9imPEoUFiximPtAJOWaSVcMoh
        rYhTBmllHHgk4QAjCQcYSTjASMIBRhIOMJJwgJGEA4wkHGAk4QAjCQcYSTjASMIBRhIOMJJw
        gJGEA4wknPxDd1NZxkN3U1k7d6IWupvK3tvv7gCPx+O8bypb/VlHfVvm6kFL3Ni8atBSHw1Q
        LWjJD9eoErT0x9OgB+kDnoCDPF5DoWtCCfJ8FZKuKTtoxuv4dE1ZQTOvhKFrig6KuJaMrikq
        KPJqTLqm2UEZ1zPTNc0KynxHAF2Td1D62zUaYZNXUHpIN7qm0SCYkG50TVeD4EK60TWdDYIN
        6UbXdDQIPqQbXdNeUJmQbnRNW0HlQrrRNX0GlQ3pRtdkQeVDutE13fa/pNxCmn4AAwc9BggK
        Zr8AAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/Blue Circle.png'>
        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
      </shape>
      <shape name='Icons/Cube.png'>
        iVBORw0KGgoAAAANSUhEUgAAAMoAAADKCAYAAADkZd+oAAAACXBIWXMAABcSAAAXEgFnn9JS
        AAAEzklEQVR4nO3dMWpcVxiG4W+MC6czAXkDhjRaRHCddcSLcps1pDbZQ9QEvAJDcJcUgZsi
        kiKEZP/SzH/vOXeep5o5p/mKebncag7ZgWVZLpJ8THK59Rb26bD1gGOJhDVMHcrdSP769Cl/
        vH+ff7582XoWk3v5+nV++PAh3719e3v2YsM9RxEJHe5G8ufV1e35lKGIhA73I/n13bvbu+lC
        EQkdHork78+fb++nCkUkdPhWJMlEoYiEDpVIkklCEQkdqpEkE4QiEjo8JZJk8FBEQoenRpIM
        HIpI6PCcSJJBQxEJHZ4bSTJgKCKhwzGRJIOFIhI6HBtJMlAoIqHDKSJJBglFJHQ4VSTJAKGI
        hA6njCTZOBSR0OHUkSQbhiISOnREkmwUikjo0BVJskEoIqFDZyTJyqGIhA7dkSQrhiISOqwR
        SbJSKCKhw1qRJCuEIhI6rBlJ0hyKSOiwdiRJYygiocMWkSRNoYiEDltFkjSEIhI6bBlJcuJQ
        REKHrSNJThiKSOgwQiTJiUIRCR1GiSQ5QSgiocNIkSRHhiISOowWSXJEKCKhw4iRJM8MRSR0
        GDWS5BmhiIQOI0eSPDEUkdBh9EiSJ4QiEjrMEElSDEUkdJglkqQQikjoMFMkyTdCEQkdZosk
        +UooIqHDjJEkj4QiEjrMGknyQCgiocPMkST3QhEJHWaPJLkTikjosIdIkutQREKHvUSSJC9E
        Qoc9RZIkh2VZfk9yufUQ9mn2SH5eliT/hbJsvIUd++XNm2kjSf4P5eXNwW+Hw2Zj2J8fr39g
        M0dy1+b/4QgzEAoUCAUKhAIFQoECoUCBUKBAKFAgFCgQChQIBQqEAgVCgQKhQIFQoEAoUCAU
        KBAKFAgFCoQCBUKBAqFAgVCgQChQIBQoEAoUCAUKhAIFQoECoUCBUKBAKFAgFCgQChQIBQqE
        AgVCgQKhQIFQoEAoUCAUKBAKFAgFCoQCBUKBAqFAgVCgQChQIBQoEAoUCAUKhAIFQoECoUCB
        UKBAKFAgFCgQChQIBQqEAgVCgQKhQIFQoEAoUCAUKBAKFAgFCoQCBUKBAqFAgVCgQChQIBQo
        EAoUCAUKhAIFQoECoUCBUKBAKFAgFCgQChQIBQqEAgVCgQKhQIFQoEAoUCAUKBAKFAgFCoQC
        BUKBAqFAgVCgQChQIBQoEAo84tXFxe1nocADXl1c5KePH2++XgkF7rmJ5PvLyyS5SvJOKHDH
        Q5EcDofPQoFrj0WSeEeBJF+PJBEKfDOSRCicuUokiVA4Y9VIEqFwpp4SSSIUztBTI0mEwpl5
        TiSJUDgjz40kEQpn4phIEqFwBo6NJBEKO3eKSBKhsGOniiQRCjt1ykgSobBDp44kEQo70xFJ
        IhR2pCuSRCjsRGckiVDYge5IEqEwuTUiSYTCxNaKJBEKk1ozkkQoTGjtSBKhMJktIkmEwkS2
        iiQRCpPYMpJEKExg60gSoTC4ESJJhMLARokkEQqDGimSRCgMaLRIEqEwmBEjSYTCQEaNJBEK
        gxg5kkQoDGD0SBKhsLEZIkmEwoZmiSQRChuZKZJEKGxgtkgSobCyGSNJhMKKZo0kEQormTmS
        RCisYPZIEqHQbA+RJEKh2R4iSYRCsz1EkiSHZVmWrUewa9NHknii0GsXkSTJv1psoQaa3yT9
        AAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/Down Arrow.png'>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAC+CAYAAAArxx82AAAACXBIWXMAABcSAAAXEgFnn9JS
        AAAA30lEQVR4nO3csW2DUBiF0Yud2mt5ggzrMjOgbOEqC9iF9UsRIvg9DEXkcyUKhJ4On+gZ
        0rfb5H5oPXjohFYPBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAI
        BAKBQCAQCAQCgUAgEAj0btDHwrNTkvOT85+T+0uSn96XGJKMefygo+Ua0/Hzjrk3boWmdV1r
        rXqpptZS9VJN7VnVJjW1papNamp/VW1aU5ur2rSmNq3apab2u2qXmlpVddccV2DXJF9Jvlec
        7dqQHb+Nmdl/3h3Wc1AuzJmZSAAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/Fairground.png'>
        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
        RU5ErkJggg==
      </shape>
      <shape name='Icons/Green Filled Circle.png'>
        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
        /0QRnuLZl+H6AAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/Green Open Circle.png'>
        iVBORw0KGgoAAAANSUhEUgAAAK8AAACvCAYAAACLko51AAAACXBIWXMAABcSAAAXEgFnn9JS
        AAAZgklEQVR4nO2de1RWVd7Hv7/9XLgI3rhIQKiDFmniMnQyHZNUILUaJ5HUd71jvrOsplR6
        X2c107zNcrmmubVyveGlmXStzP5Q55GaMrOEVNIsS4kR0xiVRAJDbl4eRJ7b+b1/IA4qCA/P
        OfucB87nr5Y853y/tL/sZ5+zf3tvgkm3mOd4IGyIiBxqZQwHYRiYhrFQYogpmoEoIooGEMlg
        O4HsYIQwsY2YPCC4GOwmkBuAk5nrCWhg4npSRB2IK8Co8BLOnFecZ7fnfHFV7983GCC9DRiR
        ZdumJQuL5T6AUiEoFcxjQBhGIM3/fzGYwagA0TEoXApwqeLzfb12/t5yrbWDDTO8AC3Nz0iz
        Ag8yxGQAk4gQp7epm2FGDYDPCcpBL7B/XXZhMQDW25ee9MnwPrUlPTrEZs8ShIcByiJCjN6e
        /IUZdQDvVhgfuzzu3RsWFtXr7Uk2fSa8z22eHmXtZ32cgBwGHiKCRW9PasEMHwH7GHB4r3jf
        Xb9oT4PenmTQq8P71BtptpBBUT8VAv9FhAyArHp70h72MqNQUfCm60LD+xueLvbo7UgremV4
        l+dnjCTQEiIsAihWbz/6wbXM2MzgjWuyC0/p7UZtelV4c9/JfJAYv2LCIzLeDAQLDGZi7GTC
        q3lzC/br7UctekMDU+72jGwiegFE4/U2Y3iYjzDzK3nzCvMR5G8rgjq8z+dnzmHQKiKk6u0l
        2GBGKYFXvpZd8J7eXnpKUIY315GZAQv+RKA0vb0EOwwuhg8v5uUUFOrtxV+CKrzL8zNGCtBq
        ED2qt5deB/MHCnhFMD3YBUV4n3WkR9iFfSVAy0Gw6+2n18JwA7zGrbhXvZ5T1KS3na4wfHiX
        52fMItBfiShJby99BWauZPAv12QX7tLby+0wbHiXOabECBH2GhEt1NtLX4WZtyjK1efX5hyo
        09tLRxgyvMvzM2YJok19e4LBKHCtwrzYiL2wocL75Kb00IGRIa+C8JzeXkxugrH+otP1q7cW
        F7XobaUNw4R3aX5mihWUD8Jovb2YdALjuBecvS67oExvKwAg9DYAALn5WXOtRF+ZwTU4hNFW
        oq9y87Pm6m0F0LnnneeAJYGy/giBF/T0YdIDFLxSzbt/uz0HPr0s6BbeZx3pETZh/zsRzdLL
        g0lgMPMuj+J+Qq93wrqEd+nWjHiLTewkwjg99E3UgxklPo/yyLoFhedka0sP71LHjDEWi2UX
        AYmytU20gYEq9vDMNfMLvpGpK/WBLXfb9AlWIYrM4PYuCEgUVnyau236BMm6csh9J/NBAu0E
        EClL00Q6Tp/inb123p4DMsSkhDfXkZlBAu+DKEyGnpZYhA1xkUmIjUzE4PAhGNwvDgNCoxAR
        MgDh9v4It0XAIqywWmywkBU+9sLr88CreHDVcwXN7stocl3CpZYGNF6pQWPzedQ6q1DjrIRP
        Cf7lZgw0w8dzZJRYah7ea0tzPg7W4Mb1H4rhUaMxPGoUkgbehZjIBAhSf+Gxwj7UOatRefEk
        zjScwJmG46i5fFZ1HRkw0Kwo3oe17oE1DW/utukTyGbdgyAaKoTbInBP3ASkDBmPlCFpiAgZ
        qJuXJtdFlJ0vRtn5I/i25jCaPYavUmyPkz3e6Xnz9xzWSkCz8C51zBhjFaIIRIO10lCLEGsY
        UuMnY1ziVNwVOw4WYbwV8j7Fi5O1JSip+hSl5w7C5Q2C7cyYGxUvpmr1FkKT8C7dmhFvsYsv
        jf5WIWnQ3Xhg+EyMS0xHiDVUbzvdxuVtQUlVEb448xEqL/xLbzu3hYEqn1u5X4v3wKqHt3Xm
        LGS/UScgCAKpCZPx0Mi5GDo4RW87AXO2sQz7Tr2D0uqDYCh62+kQZpR4FNeDas/EqRreeQ5Y
        4kXmDiNO+RIExidNQ2bKQkRHxOttR3Xqm86hoGwLjlTuNWSImXnXOaXgMTVrIVR9bM7Myfoz
        CXpSzXuqwdiEKVg88XeYOPxhhNuD5tnRL8LtkRgTPwnjEqfC6bqA885KvS3dABGN7I8RoYe2
        l3+i2j3VulFuftZcIuSrdT81SBw4AnNSn0Zy9Bi9rUinvP4Y/nH0b6i+ZKxtfZmRnZe9+x01
        7qVKeJfmZ6ZYib6CQV6J2S2hmD16MX6S/CgEGaJkWRcUVvBZ+Qf48PgmuH2GWQDh9DL/WI2C
        9oDD++Sm9NABkSHFRBgV6L3UIGVIGnLG5WJQuLn8rY0LzbVwlOSh7Hyx3lYAAMw4ccnpSgt0
        SVHAY970/7z7NSLMDvQ+gWIVNsxJfQaPj30WYbZ+etsxFGG2fhifNB397P1xqu6fUFjfBzoi
        xITarYMOOcoDWtQZUM+7zDFjtsVi2RnIPdQgNiIRT058CXf0H6a3FcPzw+UKvHXoZdQ2Velt
        BT6f75G1OZ982NPrexzeZY4pMRZL2Dd6L09PjZ+MBWkrEGoL19NGUNHiacbW4tUoPXdQZydc
        6/Ndvben+0L0+GlGiLDX9A7uzFE/x+KJvzOD6yehtnAsnvg7zBz1c52dUGxrjnp4dU8uat0U
        RPS4uw8UC1mxYPwKpN35kF4Weg3F3+/D1iOr4WOvbh4UVmb3ZFMTv8N7beHkcb32DrNbQrFk
        0iqMiBmrh3yv5HTdUWz8fKVur9OYudKjuEf7O33s97DBLuwr9QpumC0Cz075sxlclRkRMxbP
        TvkzQnV6S0NESa27gPp5nT8fbt0fV3yjxzajobZ+eG7KX5A4cIRs6T5D1cXTWH/g12jxXJEv
        znArUO71Z39gv3re1o2d5QfXbgnFM5P/YAZXYxIHjsAzk/8Au0WH8lCCXYBW+3NJt8Ob68jM
        0GNHcouwYcmkVb2ifDEYGDo4BUsmrYJFjyPriB7NdWRmdPfj3e95LfhTjwwFyIK0/zHHuJIZ
        ETMWC8av0Efcj5x1a3r4+fzMOUT03z131DNmjvo5piQ/JlvWBED8gOEQJHC67qhUXQLFT8xJ
        PnrIUd5l4U53el5i0CoVfPlFavxkZKaYm6LrSWbKQqTGT5auey1vXb5M6DK8rQf0yT3nLDYi
        EQvSdPraMrmBBWkrEBshdykiEVJzt2dkd/W5LsNLRFK3H7UKG56c+JI55WsQQm3heHLiS7AK
        m1Td7uTutuFd5siYKvtI1MfGLDGrwwzGHf2H4bExS+SKEo1f5siYeruP3Da8FkFSv7tThqSZ
        D2gGZUryY0gZIvfA0a7y12l4l+dnjGTCI+pb6hi7JRQ543JlyZn0gJxxuVInMJjwyPL8jJGd
        /bzT8BJoCYGk7SI5e/Ric+mOwRkUHovZoxdL0yMQEajT8UqH4X3qjTQbERZpZ+tGEgeOwE+S
        zeOEg4GfJD+KhAHJ0vSIsOipN9I6fFrsMLwhg6J+KrPQfE7q0316lW8wIUjgZ2OfkahIsa15
        7MBLh/9owS+0NfRvxiZM6ZP7KgQzydFjMDZhijS9zvJ4S3if2zw9ioAZ2ltq3YJp1ihpoxMT
        FZk1ahFI0qkQBMx4bvP0qJv//RZ1az/r44CckqLxSdMQG2nojSRNOiE2MhHjk6ZJUiNray5v
        pKM/nSckuAFBmLULQU5mykJpvS86yOUNyk9tSY8GkC7DSWrC5F65W2NfIjoiHqkJ0gp30q/l
        8zo3hDfEZs8iUnfnyM54aKQhjq81CRBZ7UgES4jNntX+324IryA8LMNI0qC7zZURvYShg1OQ
        NOhuKVo357N9eAmgLEjggeEzZciYSEJee1IW2tX5Xg/v0vyMNCLEaC0fYg3DuMR0rWVMJNJ6
        pof2J5URIWZpfsb16qDr4bUCD2qujtYVEsF0eIlJ14RYQ6WtuGif0+vhZQgp6uMSb1uiaRKk
        yGrX9jn995iXWPPwhtsicFesIQ8JMgmQu2LHIdwWIUNqUtt/CABYtm1aMoGGaK16T9wEQx7Q
        ZxI4FmHFPXHaH/pOhLhl26YlA9fCS1YhpUQ+ZYjUE+1NJJMyRM6KMWGx3Ae0hZeFlLKulCH3
        yZAx0Ql5y4QoFWgb8wrSfGl7XP+huh5CbaI9ESEDEdd/qPZCon14of2+DD+KuldrCRMDMDxq
        tAyZ1vDOczwQBrDmfy7Dowxx0pWJxshpZx46z/FAmEhQ+g2TsdDyzoGdLgI16UUkDbxLcw0C
        UYLSb5iARQzTWswibIiJTNBaxsQAxEQmwCJjdx2LGCYYGK61TlxkEgRJqbQ00RlBFsRFan/q
        AwPDBYE0H++aS336FjLam0BDBQtF80qyweFxWkuYGIjB4ZpP1oKFEiOIKbrrjwbG4H7a/zIm
        xmFwP+07K2KKFgzcsqRYbQaEai5hYiBktDcDUYJI+543ImSA1hImBkJGexNRtAAQqbVQuL2/
        1hImBkJSe0cKBmt+rpqkOk8TgyCjvRlsF2CEaC1ktcjdEt5EX6S0NyNEEEjzntcsQO9byGhv
        AtkFE2v+Z6LLaYomuiGjvZnYJojJo7WQj71aS5gYCBntTUwewWC31kI+xQxvX8Lr07w/BAgu
        AYJLax0pv4yJYfAq2rc3g92CQJr3vM2eJq0lTAzEVc8VzTUI5BYAnFoLNbsvay1hYiAktbdT
        MHO91ipNrktaS5gYCBntzcz1goAGrYUutWguYWIgZLQ3AQ2CSfuet/FKjdYSJgZCRnszcb0g
        RdRpLdTYfF5rCRMDIaO9SRF1gsFntRaqdVZpLWFiIKS0N3GFIOCM1jo1zkoo7NNaxsQAKOxD
        jbNSeyFGhYBPqdBax6d4UOes1lrGxADUOavhkzBJ4SWcEdXiSgWDWWuxyosntZYwMQAy2pnB
        fF5xnhXbc764CpDm494zDSe0ljAxAFLamVGxPeeLq20b7ZVqrXem4bjWEiYGQEo7Ex0D2naJ
        VFjz8NZcPosm10WtZUx0pMl1ETWXNf8Sv57Xaz2v9uEFgLLzxTJkTHRCXvu2C6/i830tQ7Ls
        /BEZMiY6Iat92/IqAGDt/L3lzNB8Tu/bmsNmYXovxad48W3NYc11mFGzdv7ecuDG41s/11q4
        2dOEk7UlWsuY6MDJ2hJZddvXc3o9vATloAzlkqpPZciYSEZWu7bP6fXweoH9MsRLzx2Ey9si
        Q8pEEi5vC0rPSen7bsjp9fCuyy4sZobmFWYu71WUVBVpLWMikZKqIri8VzXXYUbduuzC6680
        2o95GeDdmjsA8MWZj2TImEhCXnvybgDXSxnahxcK42MZFiov/AtnG8tkSJlozNnGMlRe+JcU
        rZvzeUN4XR73bmZIqV3cd+odGTImGrPvVL4UHWb4XB73DSODG8K7YWFRPQH7ZJgprT6I+qZz
        MqRMNKK+6RxKqzV/wwoAIGDfhoVFNyxZEzd/iAGHDDMMBQVlW2RImWhEQdkWMBQpWh3l8pbw
        eq943wXkbC52pHKvuUQoSKl1VuFI5V5JauxtzeWN3BLe9Yv2NDCjUIolKNh1YrMMKROV2XVi
        s7xel1G4ftGeW9bT3xJeAFAUvKm9pVaOVh9Aef0xWXImKlBefwxHqw9I0+ssjx2G13Wh4X2A
        a7W19G/eK30DCsv5KzYJDIUV/OPo3yQqcm1rHm+lw/BueLrYwwxp3+dVF0/js/IPZMmZBMBn
        5R+g+lK5ND1mbN7wdHGHKzo7DC8AMHijjIWZbXx4fBMuNEvr7E16wIXmWnx4fJM0PQYzgzd2
        9vNOw7smu/AUMXZqY+tW3L4WOEryZMmZ9ABHSR7cPnlFVcTYuSa78FRnP+80vADAhFfVt9Q5
        ZeeLcaB8h0xJk25yoHyH9GVcXeXvtuHNm1uwH8xS1+7sOLYRP1yukClp0gU/XK7AjmOdfntr
        A/ORvLkFty3TvW14W+/Br6jnqGu8igdvHXoZLZ5mmbImndDiacZbh16WslV/e3wK/tLVZ7oM
        b968wnxm7fd1aE9tUxW2Fq+WKWnSCVuLV6O2Se4sKDNK1+YUdFm51WV4ATCBV6rgyS9Kzx00
        ax90pqBsi7QVEu25lrcu33R1J7x4LbvgPQZL33ThoxNvo/h7KUVuJjdR/P0+fHTibem6DC5+
        Lbvgve58tlvhBQD48GKPHQXA1iOrcbruqB7SfZbTdUex9YhOwzY/ctbt8OblFBSCWfo0mI+9
        2Pj5SnPlhSTONpZh4+cr9Tm1lPmDvJyCbheFdb/nBaCAV4Ch+bltN+P2teCNgy+h6uJp2dJ9
        iqqLp/G3g/8rdSLiOgy3Al7hzyUWfz78peO7xok5yQNANMk/Z4HjVdz4Z9V+jIhJxcCwaNny
        vZ6zjWX462cvokXCAYAdw/+Xl124zZ8r/Op5AcCtuFcxs4R922/lqqcJrx/4jTkGVpnTdUfx
        +oHf6BZcZq50K+5V/l7nV88LAIe3V7jvz/nRSSL6D3+vVQMfe/H190WIirgD8QOG62GhV1H8
        /b5rkxDSR4PXYfDCdfP2+r2xr9/hBYAvHd+duj8n+S4iGtOT6wOFoaD03EEIEkiO1sVCr6Cg
        bAvePfq6tBURHcHMW9ZkF3Y5m9YRfg8b2lCUq8/LLFjviI9OvI1Nh35vTiX7SYunGZsO/V6X
        97g3wrWtOeoZFIj08vyMWYLEh4HcQw1iIxLx5MSXcEf/YXpbMTw/XK7AW4delj7l2xEKK7PX
        ZBfu6un1PRo2tPGl47tTE3NGxIDw40DuEyhX3JfxZcVuhNkiMHTw3XpaMTQHynfgrS9fhtMI
        xysw1udlFwRUwB1QeAEgZeade0Pt1p+BEBvovQJBYQXfnj+Ms43fIjl6DMJs/fS0YyguNNfi
        7a/+iAPlO4yxVpBx/KLTlf3P9ysCmgkJaNjQxtL8zBQr0VcAItW4X6DYLaGYPXoxfpL8KAT1
        eFgf9Cis4LPyD/Dh8U36TDx0jNPL/ON12QUBT5mqEl4AyM3PmksEORtXdZPEgSMwJ/XpPvlG
        orz+GN4rfcNws5LMyM7L3q3KRnWqhRcAnt+e9RcIvKDmPdVgbMIUzBq1CLGRiXpb0ZxaZxV2
        ndgsdV+FbqPgldfm7f61WrdTNbzzHLDEi8wdRDRLzfuqAUFgfNI0ZKYsRHREvN52VKe+6RwK
        yrbgSOVeXd/bdgYz7zqnFDy2PUe9XUhVDS8APOtIj7CJkP1EGKf2vdWAIJCaMBkPjZyLoYNT
        9LYTMGcby7Dv1DsorT5oyNACADNKPIrrwddzilQ9cUX18ALA0q0Z8Ra7+JIAQ39PJw26Gw8M
        n4lxiekIsYbqbafbuLwtKKkqwhdnPpK2sXNPYaDK51buX7egUPX9bDUJLwAsdcwYYxWiCESD
        tdJQixBrGFLjJ2Nc4lTcFTsOFmHV29It+BQvTtaWoKTq02uH0mh/BkTAMDcqXkxdM7/gGy1u
        r1l4ASB32/QJZLPugUFeoXWHcFsE7ombgJQhE5Ay5D5EhAzUzUuT6yLKzn+NsvOH8W3NYVnn
        nKmFkz3e6Xnz92h2sqCm4QWA3HcyHwToIwLCtdbSgrj+Q/GjqHsxPGoU7hw4EjGRCRAU8NzO
        LSjsQ52zGpUXT6Ki4Vt81/CNnEOoNYCBZoBndrXvQqBoHl4AyHVkZsBC7wVrgNtjETbERSYh
        NjIRg8PjMLjfEAwIjUJEyACE2/sj3BYBq8UGi7DCQlb42Auf4oXX50GzpwnN7stocl3CpZYG
        NF45j8bmGtQ6q1DjrIRP8t4IWsBAM3w8x5/lPD1FSniB1h6YQDsRREMIE79xMvgRrXvcNqSF
        F7g2BrZaPg6GhzgTP2FuZK/vYS3HuDcjdeI/b/6ew15FSWdA/3o8E9VgoErxYqrM4AKSwwsA
        63I+OeZzK/czwzz+vRfAjBKfW7lfq9dht0PqsKE9rTNx9r8bcSrZpHsw8y6P4n5C7Zmz7qJb
        eIHWWogEyvqjEYt5TLpAwSvVvPu3atYq+Iuu4W3jWjnlJphvIoIBJzMWq1XWGAiGCC9wraAd
        lA/CaL29mHQC47gXnK1GIbkaGGaZwbrsgrKLTtd4MNbr7cWkAxjrLzpd440SXMBAPW97ljlm
        zLZYxJsA6bouzgQAuFZhXhzIKl+tMEzP2561OZ986PNdvZeZzd2ldYSZt/h8V+81YnABg/a8
        7VmenzGLQH8loiS9vfQVmLmSwb80amjbMGTP25412YW7PIp7NJhf1WN71T4Fww3mVz2Ke7TR
        gwsEQc/bnuX5GSMFaDWIHtXbS6+D+QMFvOJ2h/YZjaAKbxutJZb4E4HS9PYS7DC4GD68KKOE
        UW2CMrxtPJ+fOYdBq4iQqreXYIMZpQRe2d3DS4xIUIf3GpS7PSObiF4A0Xi9zRge5iPM/Ere
        vMJ8dOO4KCPTG8J7nWWOjKkWQSuY8AiBetXvFggMZmLs9Cm8em1O4ad6+1GLXtnAy/MzRhJo
        CREW9e2JDq5lxmYGbwymB7Hu0ivD28ZTb6TZQgZF/VRY8AsCZgBkvDXtqsNeZhQqCt50XWh4
        f8PTxcG/MK4TenV42/Pc5ulR1n7WxwE8ASCdKPDtXY0CM3wAigD83XvF++76RXsadLYkhT4T
        3vY8tSU9OsRmzxKEhwHKIkKM3p78hRl1AO9WGB+7PO7dGxYW1evtSTZ9Mrw3QUvzM9KswIMM
        MRnAJCLE6W3qZphRA+BzgnLQC+xfl11YjCB/WxAoZng7YNm2aclkFWnEYgwEpQJIBXiojDcY
        DGaAzgIohcKlTMox9irFa+fvLddaO9gww9tN5jkeCEtQ+g2DRQxjYDiBhrJQYogpmoEoIooG
        EMlgOxghBLIzsY2YPAx2g+AikBuAk5nrCWhg4npSRB2DzxJwBj6lolpcqdie80UQbESmP/8P
        NUHoCiYAJigAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/Hexagon Hollow Thicker.png'>
        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
      </shape>
      <shape name='Icons/Hexagon Hollow.png'>
        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
      </shape>
      <shape name='Icons/Hexagon.png'>
        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
      </shape>
      <shape name='Icons/Hexagon_M_Filled-Rot90.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEEAAAA5CAYAAABphkbpAAAACXBIWXMAAA3WAAAN1gGQb3mc
        AAAAGnRFWHRTb2Z0d2FyZQBQYWludC5ORVQgdjMuNS4xMUfzQjcAAANRSURBVGiB5Zu7a1RB
        FMZ/40Y08RELI5EFhaBREFIoEpE0aVKksbCwEMFCSKMIYhFSKIJikECE/AspUqVJZWEdgzYW
        QY0PUAiIFhaiBlGPxdzI7mb37szcxxmTD77mMnPvd849c+ZtRIRQGGOqwArQFfyS7HgPHBeR
        tdAXbMso4D66DgA4DNzM8gITGgnGmNPAEmCyCMgJ34BjIrIaUjlLJDwkDgcA7MJGZRhExJvA
        BUAi4x9gMMQe7+ZgjNkJvMS2xdjwBDgrnkaFNIcbxOkAgDPARd9KXpFgjDmI7RJ3+36oRKwC
        /SLy3bWCbyTcI24HAFSBcZ8KzpFgjDkJPCX72KIM/MAOoD64FPYxaNqzvCY6gQfOpR27xPPo
        d4EhHHKyz8EBO4C3ERgUwmckTT6NLuF9HehzKBcjTgGX2xVKTYzGmAPAa2BvbrLKx0dsl/m1
        VYF2kXCX/9sBAL3ARGqJlFwwAPxGv13nwTWgzzsxAo8jEJ8n572cAJyLQHQRHHZyArAdOz/Q
        FlwEnwMVly7yGnC0yfPNgAHgyoanDVGwH/iC/h8rkp+A7rRIuAPsc3Xrf4oe4Fbdk5ooOAH8
        Qv9PlcGf2AFUfWIEHkUgrkwu1DkBGI1AlAZH1qcNHcCLCARpcBnoqABXgUtsTfQAnw12lnhE
        WYwm3lSwYTGqrUQRt8HmhGX026daTljvHUYiEKTBkcZxwkIEosrkQrPBUj92JKUtrgzWjRj/
        zR1EZAWYYWtgJrHXomEW2Y2dZWn/qSK5YRbZbFFlLAKhRXLMZWWpgl2B0RZbBJuuLLVaYxyO
        QHARdFtjrHHEfASi86TfanPihD7ser22+DyYuu/QcgdKRN5ht+M3A6YTe5qi3V7kHuzye28B
        wspCtr3IpGL6Pl78mEhzANA6J9TkBoPd59du1yF0Op/Q1gmJI4YiMCiE+ZxUqXHEXARG+XDO
        1Taf02uHsCdZO50q6KKY02vJC6dCVZWMKVcHgP+J1i5sl1kNEFYWij3RmrzY67SoAsZ9HAC4
        J8aGLnMR/cTXjIs4dInBvUODIwax9wu0ja5l8H2HoGO6IrIEzIbULRCziS5vZLkDVQVeYa/e
        aEPnDlTywcnQ+jljMtQBkCESIJqrQJnvRf4FnP+XvNHjCRMAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/Hexagon_M_Hollow-Rot90.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEQAAAA7CAYAAADCZyymAAAACXBIWXMAAA3WAAAN1gGQb3mc
        AAAAGnRFWHRTb2Z0d2FyZQBQYWludC5ORVQgdjMuNS4xMUfzQjcAAAShSURBVGiB5ZtbqBVV
        GMd/ax8vnOqoD1aQmVGWRT5IFJggUoqY1MN5EYICM+n20IHKoHqQEB8sw3oToh4syC6kSIoP
        9iBF0M1CzKwosCi7PFhYx27u1cP8xzOzz5x99syamW8PDqyHPbPWt/7/357Lmm/WwntPSAHW
        AL4Pyn/AwlA/TqYKbc65QeAYcFnhIOVu73jvV4QEmBIoYAMRjC+AG4EzgfGKbhcCnwPLnXPD
        3vtdhSMFXCqXAn8Sna6rQk/VEi7dDdLyLTC9cJwAAa9IwF5rGNIzDfhKmp6oFQiwGGgD/wAL
        rGEkdN0mIH8Ac2oBAjjgA3W8zRpChr790vZyXUDuUoe/ArOsAWTou0Znbhu4qVIgwPnADwLy
        gLX5Ljq3SeNHEA0tqgKySR0dBgasjXfRORP4RVrvrgQIMA84rU6WW5vuQe+90voTMKMKIK+p
        g93WZnvU2wIOSfMzpQIBlirw38B8a7M5oCR1X1UKEJH+RIGftjZZAMpOaX+7LCD3KODPea7F
        finAXGBUHm4NAgIM6abkgfXW5gKgbJSHY8DUECBbFOhToGVtLADIIHBcXh4uBAS4UjcjDyyz
        NlUClDiR9RtwUREguxTgDWszJUI5KE8v5AIC3KKGp4HLrY2UCGQRURLrDHB95/F2uz0eCDCg
        obkHNlubqADKdnl7LwOIy2pwvxr8CFxgbaACILOBk/J4R1cgwCyi13oPrLUWXyGUEXn8Hjgv
        AYTOioVfm5tUiJLrR+V1UyYQYAFRYsUDS6xF1wBlZeeDoxPIXlV41VpsjVD2yPObZ/fpwCod
        GAXmWgutEcj8xODzZu1LXU9PWYs0gBK/nhzWkIOHsu6450oheoE9IQYPtgQEYIf3fpRzbPPe
        nwJe0s+RFvC8fqx3zs20kWW3OeeGgHX6uRWie8gRolPmWetT2PAecghoxTtXaGdffZqsAUby
        KbPUe58ah8Sv+/ushdYIJB6H7Dy7L3HwCuAvVVhtLbYGGPFINTX26qy0WZW+ZJLcY5ML6bHX
        xtSxjorJb7ePWAuvEEj8tnscGJwQiCrfqcq/0yX32NRCOh+yZtzxjAYOeJ9Jco9NLYxlzA5m
        Hp+g0Q1E8ysyc49NLaRzqot6BqLGL4rku9ZGSgQSZ923T1inS+OLdR8Zl3tsYmHsu8xJYHZu
        IAryqIJ8R4PfhEl/uRvpWneSQFM1Jml0roSxb7tHgSmFgSjY6sSIbp61uQIwkl//V05av8eg
        +xTwdWuDBYDE80P29FS/x6BXM5aRX2ZtMgeM3DOf8gTfquCf0YCpEaTnmG3puV2ODmYQzSLy
        wH3WhnvQG89CPAEMlQ5Enayjj2cxJ3Qm56muzdU2Z0ct4GN19Jy18S4640+yH1LlTGZ1tkSd
        /Qtca20+Q19yrvvi3O0LdhqvldlvDSBDW7waYkeh9gU7nUO0JsUDt1tDSOiK18ucAi6pDYg6
        f1Kdfw1M6wMYyRVVjxeOEyBgOtH6Ng881gdA4jV33xCw5i50meow8JZO0ev0OLbY4lWZQ8Cw
        93534Ugl/DMHwHwRc1wOhPoJOkMAnHMLiYbzA0GBwrc4LXgkJMj/H5oVBnCb6Y8AAAAASUVO
        RK5CYII=
      </shape>
      <shape name='Icons/Hexagon_M_Thicker.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEIAAAA5CAYAAACCsf3qAAAACXBIWXMAAA3XAAAN1wFCKJt4
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABJBJREFUaIHdm1uoFlUU
        x3/7O5i300XKS3YUrE43igOKGaVGLxEF1UNPIXHqQbSgB0EKUyIoL5mKXagE3w5IBKFIRCRh
        LxVYYEGRD2amJuYtPWqd9Lh6mPlivuOsNXvPd9mjC+bhfDNr7f//v/+zz8yevRERQg9gGSAV
        PR4qw8mlxLzDOTcV2AN0ByV2Ln4AZorIxZCkWomGVlNdEQD6gOdCk4Ic4ZybA3wDuNCGOhxH
        gF4RGfRN8HaEc84BG6m+CACTgVeCMgIGyGeIPxCGHP8AM7z5eYrQDRwyGt1QZqRuxQF8a+D6
        uNVCrDQaOwdMiSjEvAJnzG+JEMCM1GaVc0MG4zYD3/dArRVCfFJVN2Qw3gFcMHA+25QQwH0F
        tlsfW4QM1g8MnH8AY5sR4vMCN0yOLUAG6xRg0MC7pJQQwP0FblgXm3wO5lcNvEeAcWWE+MIo
        erZKbshgHg8cNnAvDRICeKDADW/FJm2IsdDAfRToDhFiR4EbJsUmbAjRBfxs4H/ZSwiKH1Aq
        64YMh8cN/MeBq32E+PJydcMIHl8ZPJabQgAPFrhhbWyCAULca/A4AVxrCfHpleCGDJ+PDD4r
        coUAbsR+TH0zNrESQtwMDCl8DgJd9WuzEzML0hE3L84Ca5VzlQ0R+RV4Xzl9E/Bo9uK6ej+h
        u2FN7N5twhXXA38pvLY33BrAbEOEM8DE2ISaFOMlhdsFoCd7a/QbDntPRI4W2bDisRE4kPN7
        F5kZ79Ek/040N9wQu0db5AptznU/UKuRPIVNUJR8V0SONd0f1YgBko8/I2M68Ajozw6DXCFu
        yLjiYYXr1hpwu6Fi0GezyyCGld9n1oB1yslu4MX24IkWbyi/DziSwXIfyZPlyDgJTBeRM+1C
        1qlwzj0BbM05JUBvTUSG0F0xAVjcLnCdCudcDXhdOb1TRPbWB5HxwDHyB5LDwJjYA12Tg+QC
        hZsAT4s0vnStMC5+ITaZJkQYBexVeJ2od3I24TrglJLwGzAqNqmSQiwyOvid/68bkbTKSOqP
        TaqECGOxP173aUJMIvlwk5e0B49viFU6gKWGCLuy1zYsFBGRP4FNyuh6G/CUcq5y4Zy7huSt
        U4sPG/7KUbEHfVZnd+xeDnDDawoHAX4Hrmq4XimyySjyWGySHiJMBE4bHBZdkqMUugV9/vLr
        2EQ9hFgf4gZViLTYgFGs1KLODonQA/xtYF+cm2cUvIvk7TOv2I7YhA3c1m19IM8NphBpUWu1
        zJzYpHPw9gLnDczPq7kFhWcZRbfFJp6Dd0uBG0aXEiIt/plS+CJwT2zyGZx9xq0sFLwv+TQw
        1yi+JbYAGZzbDZwHLTd4CZE2on1ZHiZZ8xxbhKJlTv2FNTwb0iY9BdhcASF2Gvi+I11837QQ
        aWO7lIb+BaZFFMHqJAHmedUJaPBJo7G3IwqhdZAQsBbbe79Guk3hR+Bur4T4MQTcKSL7fC72
        3q8hiWKryqKKEBt8RYDwHTxdwC/ArSWAdTLat4MHQESGSfZ0VT2Wh4gAgY4AcM7VZ4WnBSV2
        LnYDs6Tdu/xE5DzVXka0JFQEgP8AowyB1FWETqoAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/Light Green Circle.png'>
        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
      </shape>
      <shape name='Icons/MLB Blue Diamond.png'>
        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
      </shape>
      <shape name='Icons/Printer.png'>
        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
        AAAASUVORK5CYII=
      </shape>
      <shape name='Icons/RK Blue Filled Circle.png'>
        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
        gg==
      </shape>
      <shape name='Icons/RK Blue Open Circle.png'>
        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
        DUgAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/Red Circle X.png'>
        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
        AElFTkSuQmCC
      </shape>
      <shape name='Icons/Red Circle.png'>
        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
      </shape>
      <shape name='Icons/Red Filled Circle.png'>
        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
      </shape>
      <shape name='Icons/Red Open Circle.png'>
        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
        42ph7awAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/Rounded Rectangle Wide.png'>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAB2CAYAAAByH65QAAAACXBIWXMAABcSAAAXEgFnn9JS
        AAAGf0lEQVR4nO3cXWhU6RnA8ed5z5yZjDmbTD6I7SrF+AW2FyIuVWtdxNCmQQpiqR3Uu4Je
        eFOEep32Oqj1QpiWsFAoSi7MhbR0l6VWSlvoUlsoWLxYNDbEZPPB2mRmMpNzztuLOpLGJBoV
        47P9/+AhJMwc3kngz/ueGaLygvr7+7Ojo6ObOjs7v1Uul/tUtXdqair/+PFjqdVqkqbpis9V
        1Wd+5r1/5cfi5bwNf4/lrrtWy61jLdd9Ha+Z38/qj208PgxDaW5ulq6urjibzf4tl8v9Jo7j
        4fn5+U+vXr0696JrWnX1pVIpvH79+s65ubnvjI+Pf3thYWFfuVyOKpWKS9NUCQmAtVBVUVXJ
        5XI+iqJ6Lpf7R6FQ+H2hUPj1/v37PxkYGCiv+aJDQ0PZ48ePv79169ZfRVE0FQRB6pzzqupV
        1YsIwzDMS0+jJc4575zz+Xy+1tXV9VFPT88Pr1y50iIr+J8dVn9/v6tUKu/dvn37wr179/pm
        Z2c3JEkiqiree3HOSZqmT78HgLVq9GNpR1RVmpqa0u7u7r8ePHhwYNeuXTfPnz9fXfYiQ0ND
        0alTp360ZcuWsUwmk8qTCsqiIso6lJhhmC/eNHqyXFeCIPCdnZ3l3t7eDwYHB9+VpYaHhwvF
        YvGDzs7OhcVbtfV+UQzD/H/N4vZs2LAhOXLkyF8uXrz4njTcv3+/6dy5cwMdHR117lMxDLPe
        02hQEAQ+l8ulR48e/eTGjRtdIiLB9PT0N2/duvXT8fHxFu/907Pl63hbFQBe1OLmqKqkaSpp
        murY2FhHtVqdvXv37h+Ccrn83YcPH34vSRIKBeCtE8dxZmJiYrpYLH4YOOd+XKlUvirP+UwW
        AKyj2sTExMeBqv5iYWEhJwQLwNurNY7jDzOVSqV1vVcCACtRVYnjuGl+fr45s96LAYDVND5c
        GoZh3q3zWgDgheTz+WaCBcCEbDb7DsECYALBAmCFEiwAZgRBEBEsACZkMhmCBcCGIAh4lxCA
        DarK57AA2OCcI1gAbFDVJoIFwARVzREsACYQLABmqGpIsABYQbAAmJEhWACsIFgAbHDOESwA
        ZgQEC4AVjmABsEBVlR0WADOUYAGwgiMhADPYYQGwwXvPDguADaoqBAuACarKkRCAGQQLgB0E
        C4AZBAuAGQQLgBkEC4AZBAuAGQQLgBkEC4AZBAuAGQQLgBkEC4AZBAuAGQQLgBkEC4AZBAuA
        GQQLgBkEC4AZBAuAGQQLgBkEC4AZBAuAGQQLgBkEC4AZBAuAGQQLgBkEC4AZBAuAGQQLgBkE
        C4AZBAuAGQQLgBkEC4AZBAuAGQQLgBkEC4AZBAuAGQQLgBkEC4AZBAuAGQQLgBWeYAEwwXtP
        sADYQbAAmKCqKcECYAVHQgA2cA8LgBnee46EAEzwIkKwAJiRECwAVrDDAmAGOywANnjvFwgW
        ACtiggXABO89wQJgBkdCADZ47+sEC4AJaZrWCBYAE7z3BAuADd77KsECYEKapgQLgA1pmlYI
        FgATkiQpEywAJiRJMkuwAJgQx/EcwQJgga/VauywANhQr9cJFgAb2GEBMKNSqVRcEARe/vsP
        3gHgrRQEgYhIzTU3N/99vRcDAKsJw3C0UCh85trb2z9S1fVeDwA8o9GmbDb7zz179jxwra2t
        d6IoSpZGS1XFOW5xAXgzVmpOGIZ+48aNIwcOHJiUUqn0lcOHD/8uDMNUVX1jROTpV4ZhmDc1
        izukqumOHTsmL1++/L6IiDt79uzDkydP/mTv3r1jmUzGNwrnnBPvvQDAm6Kq4r0X55yoqmzb
        tq127Nixn+3evftPIiKBiMjNmzdHisXiH2u12temp6ffjePV/9c797wAvG6Nrjw5Gvru7u7R
        np6e89u3b/95sVhceOYJly5d+nJfX9+V9vb2zxcfDWXRVm3xV4ZhmJedpY1RVe+c8/l8fn7f
        vn2/vXDhwtdFZPXdUalUCk+fPv2NnTt3Xo+iqLw0UsSKYZhXneV6ks1m65s3b77T29t7YnBw
        8B1Zxor1OnPmTPjo0aNDDx48+MHs7OzRycnJL1WrVee9V+5tAXgVT45/PpvN+vb29n+3tLT8
        ubu7+5dtbW0fX7t2bWrF5z3vwv39/a5cLnfNzMwcnpyc/H69Xu8bGRnJz8zMSLlclmq1KkmS
        vM7XAuALJggCCcNQoiiSlpYW2bRpU9LR0XEniqKhtra24UOHDv3rxIkT9edd5z/M/MDXXi0n
        tAAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/Rounded Rectangle.png'>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAC0CAYAAAAuPxHvAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAA3XpUWHRYTUw6Y29tLmFkb2JlLnhtcAAAGJVlUMsOgjAQvPMVTT3TBdQDTeEi8WY0nrwC
        FiVKS9oa6t9LeZloT7uz05nZZZbapm24yZFtnkJTm+D8KgtO+9rBgNFAMY8EXw4ntJOKoy3Z
        kACnHkKIqWtFz9l++t53Cb4b01KArutItyZS3SCM4xiCCKLI7xm+fguTW1/o1Sgy62Rcl6pu
        TS0Fcn1eyJdJMJ444xuNTF19nYQmQ2hSygbcBEISwKLt5B1Kj6rmvbPTT0MGf9icBX7CjJvC
        tGrqMVjOlnofcmpi8lC+XU8AAAkxSURBVHic7dxfbJVnHcDx58/7ntL29ACmhcoGmA5YLbY2
        /IluLYndYkC4ELlYNFwsI8QmQqqQRU286YWRhcjijVHEwA3eOBkscRCWXTiEpIO54pDBiDEQ
        2o0CLbQ9Xc/pe87788Kek9IWVsqk/en3kzwJtOd9OW3IN7/nOae15iG899574fnz578SRdG3
        nXO7b926VXHnzh2TzWZNHMfGGGNEZMJ11tpJ7/eoj8XDu9/315iJ3+OHeezn+Tym6mH+/0z1
        Hnx/HnyPh/2aC49PJBKmvLzcVFdXj5SWlr6RzWYP1tXVnW5paUk/zPOZ6rO3e/furTlz5szL
        6XT6+e7u7qf6+vpcOp02mUymGCsAmIy11oRhaCoqKkwqlTJPPPHEnVQq9fbSpUsPLVy48GR7
        e/uUIvLAYO3fvz88cuTI08PDw7svX768eWBgYG4URU5EmHgATEth6gqCQBKJxKe1tbXn5s+f
        /6uNGze+tXv37uFp3fTVV18tbW5u/snChQv/5b2PvffivRdrrRhjWCwWa9rLWivWWnHOifde
        5s6dO1JbW7uvtbV1uXmACRNWe3u7y+VyT586deqXZ8+ebclkMqXOuXu2fdZaJiwA0zL2HExE
        ij0JwzCqra3tfvbZZ7+/cuXKU21tbdnx1/rxH2hubn7+zTff/H1nZ2dzLpcLx27/nHPFfwAA
        pqMQqLEdsdaaOI79zZs35/X19X0rmUwOb9269e8nT57Mjb22GCwRsfPmzXvm2LFjv75w4UJ9
        FEX3TFGFKYvpCsCjKnTEOTfhc+l0uuzWrVtff/LJJ/t27dr1/muvvVYMTjFYFRUVdUePHj3Q
        2dnZGEXRhJsQKQCft8neNhHHsRkcHJzT09PzTFVV1T937tz5USFabvQid+XKlX0ffPDB6mw2
        e9+bAcB/m7XW5PN5c+3atS90dHS88sknn3y58DknIvbAgQM/On78+HNDQ0PFfSWxAvC4jT0z
        FxHT0dHx1NWrV/eJiDfGGNfZ2Vl55MiRb964cSMRxzGH6gBmXGHKSqfT5sSJE1/r7Ox82hhj
        /MDAQNP58+df7u/vL2GqAjBTxr9qWDiUHxwcDG/fvv3pxYsX3/aZTKapu7v7u+MP2pmyADxu
        47szukV0PT091w4dOvRnn0wmv3P37t1vMF0BmK2CIPi4t7f3uEun0w3ECsBsFkXRFy9evFjl
        8vn8VwkWgNlqdFu4aGRkpMp67+N8Ps+BFYBZafTd8BKG4WYXxzGxAjCriYgVER+wHQQwmxV+
        U4z3vmTiTx4CwCwUhmFIsACoEARBKcECoEIYhnMIFgAVwjBkwgKgA1tCAGoEQcCWEIAO3nsm
        LAA6WGt5HxYAHTjDAqCGc44JC4AObAkBqGGtTRAsACoQLABqECwAahAsAGo45/j1MgDUCAgW
        ABWstUxYANRgwgKgg7WWYAHQwVrrCRYAFUSEYAFQg2AB0IEtIQBNHMECoIK1lmABUIMtIQAd
        mLAAaGIJFgAtmLAAqEGwAOhgrWVLCEAHETEEC4AWbAkBqMGWEIAeBAuAFkxYANQgWAD0IFgA
        VOB9WAA0IVgA9CBYANQgWADUIFgA1CBYANQgWADUIFgA1CBYANQgWADUIFgA1CBYANQgWADU
        IFgA1CBYANQgWADUIFgA1CBYANQgWADUIFgA1CBYANQgWADUIFgA1CBYANQgWADUIFgA1CBY
        ANQgWADUIFgA1CBYANQgWADUIFgA1CBYANQgWADUIFgA1CBYANQgWADUIFgA1CBYANQgWADU
        IFgA1CBYANQgWADUIFgA1CBYANQgWADUIFgA1CBYANQgWADUIFgA1CBYANQgWADUIFgA1CBY
        ANQgWADUIFgA1CBYANQgWADUIFgA1CBYANQgWADUIFgA1CBYALQQggVABREhWAD0IFgAVLDW
        MmEBUINgAdCDYAHQggkLgA68SghAE4IFQA2CBUANggVABxGJCRYALQgWADXYEgLQwVrLhAVA
        B86wAGiSJ1gAVBARggVADbaEANTIESwAKrAlBKAJwQKgAxMWADVEJCJYALQgWAB0EBFeJQSg
        BhMWAB1EZIRgAVCBYAFQI45jtoQAdIjjOEuwAKggIgQLgA4ikiFYAFTI5/MEC4AOBAuAGrlc
        jmAB0CGfzw8TLAAqRFFEsADoEMcxW0IAOoyMjDBhAdAhm83+542j1tqZfi4A8EBRFGWdtdaI
        yEw/FwCYoDBMOeeMMSZyYRhmmbAAzEaFYco5lwuCIHIlJSUfMWEBmM289zeTyeQdl0ql3p/p
        JwMADxIEQdfixYt7XHl5+T9G94cAMGMmO5qy1hprrQnD8EZ9fX2v8953JRIJKXxi/AMB4HGZ
        bHjy3ktpaendF198Me02bdp0taampktEjIgUQ1X4MwA8LmMO2Yt/LykpiV566aX3W1pacm77
        9u0f1tfXn0skEsY5V7zAWmviOJ6xJw7g/8vYoSmOY+OcM9Za09jYOPTCCy/8qfjA06dPt6xd
        u7bfOSfeezHGiHNOjDEsFov12FahO957sdbK0qVL83v27Pm5GeWMMaapqekvq1at2r9gwYJi
        4XirA4DHaWx3RreCpqGh4Z3y8vLfFh5T+NEcWbt27StNTU2/q6ioiAoX3O8Mi7MtANN1v36M
        Pb8KgsCsWbPmb1u2bPlBW1tb16QXHDx4cPH69evfKCsrE2OMWGvFWlsc1wp/HvsxFovFms4a
        3xZrrTjnJAgCaWxsvNLe3v6cGeee1xC3bdt2fd26dW2rV6/+QzKZzBQOwYwx9xzIs10E8KjG
        vyvBGGOCIJBly5a9u2nTpu11dXXvTOlGhw8fTjU3N/+ssrLybuEQrFBDDuNZLNajrvFdsdZK
        WVnZcENDwxvt7e1fMvfhJ/vg66+/nt22bdu7qVTqQ2PMsqGhoap8Pu/HTlwA8Kicc6akpCRf
        XV09sGHDhp/W1NT8Yt++fR/f7/GfeXouIiU7duz48blz57Zcv369vr+/32cyGcIFYNoSiYRJ
        JpNm0aJFN5YvX/7HDRs2/Ka1tfXyZ103pZf7RMTt2bNnRW9v7/eGh4d/eOnSpbldXV2mr6/P
        9Pf3m1wu9+hfAYD/WUEQmDlz5pjKykpTVVVlVqxYES1ZsuSo937/5s2b/7pmzZpoKvf5N/zq
        n6qAj5BsAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/Stress High x2.png'>
        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
        AElFTkSuQmCC
      </shape>
      <shape name='Icons/Stress High.png'>
        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
      </shape>
      <shape name='Icons/Stress Low x2.png'>
        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
      </shape>
      <shape name='Icons/Stress Low.png'>
        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
      </shape>
      <shape name='Icons/Stress Med x2.png'>
        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
        jcopiDCm4TD2I95rf4NpaweB/8JWQ62wdL4TW908jU03KzF7Eu0gJ5E2ys0QuplYhDmZqbB7
        BybEFTAhTpVyzajB7cWUabq66URkkReK/q6fF3G3lrJcg2kZC0g4hoext+wktpzeS3PtDV2N
        qeUPIvd6FvAv2Oihn51k6ObZqkxEDIn3YA23D/gPxKq8eFhWOaa/HhWNSD+2C6xq+YuQF2CI
        0g6yF7n31A7j7UQX0mga5EWVTXuwFZN+HwV+TGNZys1C6qT2JIeAv0em03IjyCpSxCdxRHV9
        FRLbo7iBP2Nsg59AVk31NNieh4wWOkUWkCB7H1Na1xHgZeTe3A87Y/qA+7C5fvQSsvghvAN8
        j9o4mZ2GjAibsVFuGPM0KK7bYUQX0leDerU9HYgeYi1m+1LcSUZ3ot1IkN0ryObt7UBWI3ch
        G3LFo8fo8nVq/DfEbqQpR4+mrHQZFiOpQ64EvkZ1zWUBkRsGkSX3m+HzB0T+2Y9MYd2IAnAO
        okFdDJyDjARnUl2eUAXhS4jX5MvJbqtxaJWOUkw34ox9MXAhssKYSb73OozIINuREeYJZNpp
        GVqxo5RjCjIqzAP+Cuk8sxGb3m6ibdNrEvFPEBnpf4H/RqaUPdlX2XEcx3Ecx3Ecx3Ecx3Ec
        x3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ec
        x3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ec
        x3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ec
        x3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx3EcJy/+H5wd0Jue
        DADcAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/Stress Med.png'>
        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
      </shape>
      <shape name='Icons/Torquise Filled Circle.png'>
        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
        rkJggg==
      </shape>
      <shape name='Icons/Torquise Open Circle.png'>
        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
      </shape>
      <shape name='Icons/Up Arrow.png'>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAC/CAYAAADgm8yTAAAACXBIWXMAABcSAAAXEgFnn9JS
        AAAA3ElEQVR4nO3cwW3CMBgF4FfaO2zAAB2i3gwxGV6FEZggvXCIWsuCYJ/4nhTJSmx//1sg
        iYiIDMvnhjMlyTHJdewo/1OTXGYjJclyf35mQnUFTWtVVsjUVrUBDW9VGsiUVrUDDWtVOsjQ
        VvUB6OVW5QFkSKv6BNRt9dX5drhDdfXu9GfPebVekuyT3FqXffSmaGTZen73JLQ5IBAIBAKB
        QCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUCgd4N6
        P+to5Xsr9AuBZE+Gwf1jTwAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/White Circle.png'>
        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
      </shape>
      <shape name='Icons/air_plane.png'>
        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
      </shape>
      <shape name='Icons/apple-and-grapes-on-a-bowl.png'>
        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
      </shape>
      <shape name='Icons/arrow down.png'>
        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
        RU5ErkJggg==
      </shape>
      <shape name='Icons/arrow left.png'>
        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
      </shape>
      <shape name='Icons/arrow right.png'>
        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
      </shape>
      <shape name='Icons/arrow up.png'>
        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
        EiMN7rvdov8H8dqo6PHAyRwAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/ask3.png'>
        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
      </shape>
      <shape name='Icons/bed.png'>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAAAN2AAADdgF91YLM
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABWhJREFUeJzt3d+LVGUc
        x/H35zlrmNZiv7RS10hDikyXICu8KLqIqKgQiSjoQugP6KqLLgqC8MYupMuovekHQVAGBf0w
        kG6yUDFCCCq6aNQ1EsuM3D3fLmbHlZyZPeM+5+yP7/cFc+GcM888y7yd8zjnOCszI/iV5noC
        YW5FAM5FAM5FAM5FAM5FAM5FAM5FAM5FAM5FAM5FAM5FAM5FAM5FAM5FAM5FAM5FAM5FAM5F
        AM5FAM5FAM5FAM5FAM5FAM6dDyCp2JhUvJtU/JRUjCcVnyQVD8/l5EL9ZGYkFduBMWB5l312
        lTb5QsPzCg2RSOuA74Er+uy3vbTJDxqaU2hQAl6m/4sPsLuBuYQ5kIB7K+y3Lqm4se7JhOYl
        YEPFfavuFxaQBGiAfcMiM1Tn4JIErIdiFGwE9ANMHjSzY3U+b6iulgAkDSfSbpF2AMPQ+RIK
        AxJJxXGDPVDuMrOJOuYQqsn+ti4teUCkIwY7geEeu60SvCLSN5I2555DqC5rANLQc6L8DBip
        +JBRkQ5IQ4/knEeoLlsAkjYIe43qi8qOJcLelHR9rrmE6rKsASQlUYyBLbvEIa4VekvSQ9bn
        W6skLYWhbVDeAVwGOgZqwUQLaAEn+z0+XCzTIrDYDlblA6U+9CCkR4GPum6Vtoo0BuXG6XuN
        zsJyykRSMRVF2RJqldBq/5kWTHZCOR6Lz7YsASTsrhx/7RJ2N10CkLRapE+BFTMMMQSsAVsD
        wugcjzqzOx+KJRXjQAuspalApmM5H8oxMzs76x9sHssSgGGjgx/6u45zZ7f7E+lVm/nFH4SA
        le2bNtsFd/7vHYWk4hQ9Q5k+/JjZ6Yzza0ymQ4C2ZBqnawBW7XxFXVa0b7r14lCmY0kq/mYq
        DGE9QwF+n0/rlFwfBJ0Brskwzl897r85w9h1WwasB1vfLxTgXMV1yokm1imZArCDoKr/9u83
        zrc9Nsz++DJ/LAHWgq2dYZ1SDrBO+edSJ5NpDaCDgscyjPNdjvksEglY1b5pywzrlD/oHcqv
        wAEzO9ftSTK9A5RfQnpploMYlJ/nmI1DV7Vvuq1HKKeT0hdGet9s4p0LH5jlk0Az2y94YzZj
        CHab2YEc8wkXGQY9IeztpLRP0i2dDRKp6or0/tImv+q1UdKVIh0B1l3CBA8Z5VYz+7fbxqRi
        3qyaF4mzRnmPmR3Odi7AzP40yqeBkwM+9GejfKrXix9qcblI70lanvVsoJl9bZS3g31YZXfB
        HqPcZGZHc84jVLIR0vPZLwgxs+PA49LQM6J8EjQKrJ7aXAI/Cg6VlK+XZvtzP3+oTtjWbGuA
        vk8kXUf7GoGjZnZm0MfHGqA2rVqvCewws3FgvInnCgO5Ia70dS4CcC4CcC77GkDS1cAIDGU7
        f7+YzgTNN9kCaF8ObrtEmjqnX+YaOtQo10Whm0T6GFiaY7zQnCxrgETaSbz4C1Kes4FY/M/h
        BSpLAEK/5RgnNC9LACXam2Oc0LxMF4RM7DV4EVjU19AvRllPBklaCcU2sJGU9zr+UJOsHwSZ
        2Qkgvk1sAYmPgp2LAJyLAJyLAJyLAJyLAJwb5HOAw8CpOicTmjdIAGERikOAcxGAcxGAcxGA
        cxGAcxGAcxGAcxGAc4NcEDIG/FLTPEJeNwHPVtmxke8HCM1KKu4D9lXat96phPkuAnAuAnAu
        AnAuAnAuAnAuAnAuAnAuAnAuAnAuAnAuAnAuAnAuAnAuAnAuAnAuAnAuAnAuAnBO8+gXWYc5
        EO8AzkUAzkUAzkUAzkUAzkUAzkUAzkUAzkUAzkUAzkUAzkUAzkUAzkUAzkUAzkUAzkUAzkUA
        zkUAzkUAzkUAzkUAzkUAzkUAzv0HIfSDSIPepJ4AAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/beer copy.png'>
        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
      </shape>
      <shape name='Icons/beer.png'>
        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
      </shape>
      <shape name='Icons/bike15.png'>
        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
      </shape>
      <shape name='Icons/blogger16.png'>
        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
      </shape>
      <shape name='Icons/bowl16.png'>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAq7AAAKuwE0vlj5
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAYdJREFUWIXN1z1rFUEU
        xvHfuYnBIFHURkgTC1tjLCzSWdtY2AkWtkIgVZr0wU7BRgX9AFqohd9AUCzEzkoJgkkjEZI6
        xyKrmHgnu7kvuzkwzZzZ+T+zw5xnJjJTl9HrlH4cBEx2BY6I05jvREBEXMZLfJaZrTbcxTZW
        EW2Cp/EMm7j+p7+VLYiIS9Uv38JCZm78Tbaw8lv4hTVM/JcfI/gEHuAnbpTGDbwFETGD2UL6
        FB7ZqzNXM3O9ONEQK5zCY2ShPcRU3TxRTTZwRMQilnANO3iLV5n5vtH3wwoYNgJfca4F1pvM
        vHOwcxIbuNiCgO/9Onv40gJcidO5AFhQPkqjaps42fc4V6fg9ZgFLBfrSSXgCnbHBP9RWv0+
        L8CLMQm4d2hF/UfAGXwcMfyJqtjVCqhEnMWnEcGf18H72jHO48OQ8KfoNTK1gtMFbuPbEcHv
        sHgkV21guSsNwNu4OYit17phRFyw5xeHxXpmztWM6RtNbkQ7uF8zZmsQOMfgPtD527BzAb8B
        hOahlX9DPxYAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/bread18.png'>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAC9AAAAvQEdWsb6
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAgxJREFUWIXt1rFLlVEY
        BvDfVS8IihA0XRx0ySEHwZyDBmtRGgyChiBoSPoPipZqyIZqCKKtoX8gatDJTXCwpanFBA1s
        kItmS9bXcN8bl3vPp5+3C7fhHnjhu5znfZ7nnvOe855SlmW6Ofq6qt4z0DOAgXYTS6XSOdyM
        n2+yLPvcFlGWZYUDg7iBVWRNsRpzg6fiLCg8iRfYSwg3x15gJ//JAIZwC2s5Qt+whCfYzcGs
        BcdQYQOYxivsJwh/YwXXUMaZyHl8wqrsB+d00gBGcAcbOQRfQ2S8wegl/MRrPG3Cf8dODtdG
        aI3U28AiDhPAX/iAqxhIrNTFwDzH2TCZoYrr6Mc83geumf8wtJOF9QkTBYpzCBfwTO1IT6GS
        wE0EZ6pgc/etipeYOsHEedzLmZsKjuoxOn8/fsiv5nXcxnCBVRkO7HoO125otRj4olbZC1jO
        2bcDtaKbSQjPxNxBTj0tB3c5tFoMVHEFfUE4hofYzvknH6OIFuM7hdkOjrHg7AuNxi1pEdjC
        A4xGUj/m8A5Hx+xlPY4CO4f+4BgNzq3EirosfQyP1I7QfANRBfexmcBvxlylwXj9GKaMH+Ju
        0YtoB4/ERYQSZvE2YhalmBsPbLGLqM2reAHlhpx68a4Epjnv+Ku4zWa0q9aMlnSyGf037TjH
        SMcfJPXCOfXo1JOsbQOdGl1/FfcM9Az8AaQLSX/LwXIYAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/breakfast29.png'>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAFpAAABaQHWFPlb
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAl1JREFUWIXVls9LVFEY
        hp9vxqFaWBQoiTUUioVBZJC6aGUbq0VBUO2S/oP+gIiI1i0Sl0UtC3JXtohwWZJuyoowaCJN
        okURlqP5trifejjcdDRvoy8M95znnnPed86Pe69JoprKVdV9PQSomS+YWTdwAWgDNmfk9wsY
        Ae5IGgAwSZjZVeAyMA4MAdNraLoFOAI0AFMks74JuCbpCkAXIOAWUJDEWv/c8B4wB5wDHrhn
        F8AAMAs0ZGEehGhx0/tAHTDj3kwAj4OGReA90BwN0Oy8GPH9wBiwM+IHnNcH7BnwxsuPgIkc
        UADKwZpNAr0k+yHUuPPJiH90/jXipRReBvJennFvBr1Sl/ES7PU90A/sINnogwCnfG1uArmM
        zGuA2+5zFrjr5dPzDfocjJIcR1sj4zxwHXjr4/8Avnm5TxJh4x5g2G+edJYDjscz4//oRAov
        ODevn/Hxpn395R49C32iATrnp8brTb4/9qXs8FmgKeKHne/y+nkf7xDQ7eXOsM/CozhNksbM
        bKuknxF/5Xwq4sNpfCkt+zKKzQOearIS84oCZK2NE8DMGs3soZnVR3yP8+2ZBiA5Rp9JTkWo
        aeezqwmw5CkIJekLcDGFT6TxSrVx9kDVApjZ7r/w4kr4qgKYWQtQMrPWiB8EPvj9kLc7rzjE
        cjPwDmgHXkf8JdDh90O9ADoklSoNEJ+C736tBVDyRhmKO0maA56n8N8Rr/VrGdgWeQCLr81F
        YDYCNAJPSb5gVqs8cIzk66cfOAp8ktS2XIBW4JJ3tn8IEErAE+CGpNElA/xvrf/nQNb6A1y8
        fYK3OL7vAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/building78.png'>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAAAOoAAADqAFKWhcC
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAA8tJREFUeJzt3LFrFEEY
        xuH3k9MmnaIBiZBGCFrGwkZOuyBio5DSgEW0tbJQVCLY2RoLJXYpFMQiaBksomA6FY2IAUMg
        CBb+AX4WSUAhuvsNO7c7vu8D6WZmh/Nn5m7vcubuEF672t6AtEsBkFMA5BQAOQVATgGQUwDk
        FAA5BUBOAZBTAOR6bW9gm5mdBXCl7X0MyF13f9b2JoAOBQDgIIB+25sYkPm2N7BNRwA5BUBO
        AZBTAOQUADkFQE4BkOuZ2dUWrvvE3T+1cN3OMrPDAM4N+ro9AHcGfVEAHwAogD8dRQv/FjoC
        yHXpVnDUfWz+JonYC+B6xZgZAN+D644BmA7O6YSSA3jq7s8jE8xsFNUBPHT31eC6Eyg0AB0B
        5BQAOQVATgGQUwDkFAC5yMvAVQCLwfUvBMfLzh4Fx/cBjNYZGAngtbtPRXZhZgqgAQmP+zxq
        BqAjgJwCIKcAyCkAciW/GfTMzH4G51iNMR/NLPrVacX+Ryo5gN2Z1t2Tad1OKrZcaYYCIKcA
        yCkAcgqAXORVwKSZTWbbifxVwsvS2kp+GXgNwHJwzjCAuYoxUwA2guuOA7gdnNMJJQewnPip
        4CqLCZ8KjgzvFD0HIKcAyCkAcgqAXORJ4DsAj4Pr3wiOl53dCo4/j82/Nq4UCeCtu9+M7MLM
        FEADEh73MdQMQEcAOQVATgGQUwDkFAC5kt8LGK55b/93I3XGJNzbH45O6IqSA5jLtO7LTOt2
        ko4AcgqAnAIgF3kOMJTwpEsakPC4D9UdGAngzNaPDN6XXAvrCCCnAMiVfB9gCvHvLBpB9ev8
        EwDWguv2ke++RFYlB7CR6dO7awnrjkXGd4mOAHIKgFzkCHgD4EFw/XvB8bKzy8HxFwEcqzMw
        EsBnd5+N7MLMFEADEh73k6gZgI4AcgqAnAIgpwDIKQByCoCcAiBX8nsB45k+vdtPuLc/Ht1I
        V5QcQK7v5JnLtG4n6QggF/kNcGDrFqMMmJkdD07ZV3dgJIBTWz8yeEu5FtYRQE4BkFMA5BQA
        OQVATgGQK/lOYMQCgG/BOfsBnM6wl05hCWDG3V9FJmzdfFEACb4CeF8xJvp9/Aw2ALyoGHME
        wKEmL5ojgAV3v5Rh3f+auy8BmPjXGDObBTDd5HX1JJCcAiCnAMgpAHIKgJwCIKcAyCkAcgqA
        nAIgpwDIKQByCoCcAiCnAMgpAHIKgJwCIKcAyPUQ/8r1KiuJ89bR/F62/Uick2s/64nzVtDw
        nszdm1xPCqMjgJwCIKcAyCkAcgqAnAIgpwDIKQByCoCcAiCnAMj9AjIDjDQSiTMQAAAAAElF
        TkSuQmCC
      </shape>
      <shape name='Icons/bullet hole.png'>
        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
      </shape>
      <shape name='Icons/burger.png'>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAF2AAABdgHpzkeL
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAgRJREFUWIXF10FLVFEY
        BuDnjGMg6UhBBCG1KhdCVEKrVm2CaCXhrpbRzr8ghPQ/2gnRQswf0EqRggRdFARBIbUoxExs
        1NPinpGczujNaWZeeOHAe77v/e6593zn3BBj1EtU2gkOIQyGEAbbylFmBUII/biLq7iceAVn
        05RveIf3iStYiDHWj00eY2xJjOAJ1hH/kespduRIjxbGN/ECuycwbuZuynXz2AJQxfR/Ms4V
        Mo1qtgD0Y74Dxs2cR/+hAhAwm5m8jMdYbZHsYWJOW02xyxltVmMDpAImM5M+YCjpUxl97Y/V
        W8voU0kbSrma9ckYo0oIoQ8z/sZcjHEzjccz+pcW4wbGIeWYy+gzydtoprqIBfThAeoZfRtn
        Erczej3F9qVcOY9RmGghluHnxJPGT1SxkVmesrjQRiz8glN4ib1MhZ3iHl6hdnAWhBAGMNzm
        E5XFRoxxm5KHUScRcEnRTE532XsLzyiOzm69+2auhDToGSpY6qH/UlB0svt68w087/kuqEII
        YRjXFKvRDXzH6xjjD4p2+lX3d8BH1Cq4hXOdfeAsLuJ2BTs9MG9gr1FJ7rzvNLdwvnGletpl
        8x08ar4V38OnLpgvYqzhe6gPhBBquIPruIEx1DCguLaXxX5a4k3Fb9ubZLyItzHG/QPPso0o
        XSAHpN5xBOr4GUsm7nkn/A2jC00YcbHhiQAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/cancel19.png'>
        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
      </shape>
      <shape name='Icons/champagne.png'>
        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
      </shape>
      <shape name='Icons/checklist.png'>
        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
      </shape>
      <shape name='Icons/child1.png'>
        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
        Ghz+H8p/YrSZNIrGAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/circle.png'>
        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
      </shape>
      <shape name='Icons/circlex2.png'>
        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
        Vh2zMs8idBd4inDf8szL0Qgax7Ml/YyY76BrqI5bUJ1HyN8MTaLYbKdDJ7oNoee2a+T/K55C
        PS4H0YEPENek68WoTttRHfP0wE0v11BMom1P8+pGr5vOMbsANMpptNPxMOqKa9sbjoCe9LuH
        07qEZr2FyjkUi3k1Jnsbevt/ibkFZTz9/d1o8u96dMPRjn7UxtZw69Pv2p1+d2hgX6hcSn9/
        Wxvq+ofKbsO6gReBF4DNLX7WCTTi4Eu0B009LVe4sa3MBNmbVXSnpbHgZC8actKH1lF6BM1g
        a3Wg3lH0KPNmoC6Fq+rm5G7gFXQ2FDXi4gLa2esMSvRl1P5NL6Ahm9NLP0rknWkp6rHjB7Tt
        9svo0r1g9AA70R3lWeZ2iYuxnE2PaSfV3A9EZRhNLgrN8ou9HEuPYSF0lc5KgiYY7QLeI3/v
        VZVlLK3rrrTu0cz2j7EDoIZmZ69FQ0KeBx6stEY3+wZ12H+I2vSfUKKjEWNip1uKbmYeAh5D
        jwtbKb+3ZhytUfgpeqf6NbpZi3bDqdgT21BD6xstQY8lm4EnUZI3kL0V+VydR5OijgAfo0eW
        K6jXqNGLFrVOSexMNfQM2pX+uxJtSb4RJXoteozpRc+ofdwYZnIZPe+OoGRdRpfTk2i19eOo
        I38C9f023qWamZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
        mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
        mZmZmZmZmZkZ/wNC+TaKLLrzWwAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/circular-line-with-word-age-in-the-center.png'>
        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
      </shape>
      <shape name='Icons/clown.png'>
        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
        5RpaiP8H5LR3dvVh46IAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/coal.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAIXAAACFwFlLmVW
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABEFJREFUeJztm0+IFEcU
        xn8vOysxk8VscBFiCIQFIZKIRFcDhhwkhyjuQZTFsyDEQ3LLTT14MicvuUku8RYXQSIoIQQC
        UaKumH8bAiKuKAoaslkIIUx0Xw5dy7Y9VdXV0zU9Pe588Bim+tWr73vdVV1d3SWqSrchIquB
        k8Au4CvgLPCdqj4JrP8+0FDVi9HJqWpUA4aApiEMsBH4BdCM3QM+Ap53xGkCh4HZVJ2TwHBM
        vhLzChCR7cAXwAZTtGh+n/NUewB8aoRuBN4w9jYwYvH/AZhS1bsxOMc66w3gOPCY9jPdDfsD
        eDcK9wji1wIzFQlP2/kYCfBdmqF4E9gSIU5R7BSRd0TkmIg0O45S8uyvAS5S/dlfsn/N7x1g
        stIuAIwDv/VQvM0+ryQBJKP1wxoIttl7XU0AyS3uQQ2Euuz7riUAeB24WwORebY7egKA14Db
        NRAXYjcgmeRFSQDwCnCzBsKK2FSItgZhGAM+sZSLw99WXsQ3Roz7Dt+nK5ozvGIRYybY11jx
        CbANeCeAFr0fxGJbCziR1fvUGCAiw8A/EDw49hseAy+o6n9LBdkuMMSzKx4SbUPpghU/BgwS
        0GsCvcYgAZn/iyS3jGcVyvJKNZBJgKq2gOkqGVWMaaNxGY6nv/XAPno/eYll+4D1Nq3OhyER
        WQPM434C6xcoMKqqC7aDzkHQVJjrEqkqMecSD/l3gR8jk+kFvBoGCShTuU8wSIDvYO6SmIj8
        CYzGZFQh5lX1ZZ9DyFS4n6+CXO6DBMQIUmMMEpDnEDIIDgN/A6sikaoKLeDF9PqfDblXgAkw
        G4tVhZjNEw/hCyL92A2COIcm4KcSRHqFIM4r/goIejlq1gb+KsuoYrzkewxeQtAV0IdrA941
        gDSKrAr3UzcI5jpIQDeC1gBxEyAiq4DJjulUj0nDOR8BH0g1gUv0fmm7qF0CmqW/EgNO10BM
        p3a6VAKAPTUQUdb2+DTmjQEfO8pngEPAXuAzIGjvT2Q8MW3vNVxmHH4uDQk8Z3+U5Zelafsa
        sx8o5Ttl8eu2TWU4NAy3rN8iyZshq07fq7EJ4Krl0ISqtmVbRGZo3zgxD/xsbSAcm2hflL2u
        qlstHLYC1ywxtqmqrdz7PdA6R/nvnvJsAq6o6i5PG7kQkQvABwU42ODS4h0DXIsgbxUo/9UT
        PxS2GEU4gG9BJ+cu8Ij2PnWZzP2VZH+frZ8eCPlgOYfDAUfsw5b5ymWL36Myt8HzjsZvAUeA
        D4EzDh8FxiMkYNwT/4zhcMRwsvl4d5flNb6Zzr8aPVVWfIrHqQ45tIDNHSfANH60g4bngJGI
        CRgxMYvyOJobO6DxBnCuQKMPgR2xxKd47KDYRq1zZOYrHSUgReAgsJDT6JfAWGzxKQ5jpg0f
        hwXgYGjMQhsmRORVYD8wYWwtcJ1k8vGtqn4THKwEzHb6nYbDFpK9xNeMTavqvdBY/wMl9GWN
        cl5qhAAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/coffee.png'>
        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
      </shape>
      <shape name='Icons/cutlery6.png'>
        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
      </shape>
      <shape name='Icons/dashed-line.png'>
        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
        BzEAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/dinner.png'>
        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
        QLMNaDb+C/pwmfw7v5zEAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/drop clear.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAWEAAAFhAFkWPBp
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABhBJREFUeJzdm12oVFUU
        x39rnfE7UwOV8mNMUYJQ6EZg+ZLmB1IKaoUGYkZmEeZDmBHhQwa9FIFFSApCaCKhpgVhQflS
        4YsPhpnfdM1v04tXr169c1YPc6ZZ93rVc2bOnDvXBQf2mnPWXv/132v2PrP3GjEzshYRaRCC
        LwU7EBIuN7OLmYMoYcmaABHJCfonMBZAYEPBCq9kCsKJdoHLJUTBAxi8LCKTssdRlEwzQET6
        CXoUGNrh1j4jbDCzQmZgIsk4A/RtysGfApqj9gTQZdliKUpmGSAig6PR7w9gyKtgAwQ+iR5p
        NsJHzOxUJoBKYmaZXIquEdSi6wAQADlB95c+V3RzVnhKVzZOYLSgN0qBQjC3fC83xRFjkHvm
        niNA0c3lIIM9ndzf4kj4C+h5zxAAPC5o6EZ4SifPDBf0SvkZfe+eIUCQn8qjK7tuT5S+67Lg
        KpDv9gRAbroLKgQa7pApPQU96Mja0a0JAETQvW6G3xKDsBntJ8RgVjcmIHjJBXMTGBvHTpDt
        zu440KfbERCl8zE3+msT2I4StMXZftgNCdDlbhRbgIcS2q9y9q3AuG5DAHC/oOfdCH5UQR+9
        BT3qJsQfuw0Bin7gRu8iMLAyIoNZHSbEeXVPADBA0Cb3QrOymv4E+d6RcAjI1TkB+r4DfLLa
        GRwYI+h1R+gbdUsAcJ+gF1zKvpZGv4qudqSeAfrVKQG6wgE9mFa6An0F/dtlwaq6IwDoI+gZ
        N/ovpgqS4HlH7mVgcJ0RoG912OzQNAkwM4Rgj1ta19QNAdFb3z9u9BenHXzRT26qI/kGMLpO
        CNClDlgj0KMWBBSzQH5Oe/us2tHP+Xd+0OW1Cj7yNzHuz+uMCAgWOUAXgL61JCDKgh3uFfmn
        LiMAUL+BkfbydAe/4wUtuC22aV1EQDDfjX4z8EAWBJgZim5yvvcSnW9kRkC02/OHm5A+zir4
        yP8YQW+6lWdBxgS0W5Jak/7eTykL1joM+zIlwG9bKbou6+CjLBgm6DWXBTMzIQAYIWibW4pi
        7fXVKAs+dSvCL5X1kVAUXUrxXA+QX83scNI+0pKQ8IuyJk+LyBNJ+0hEgIj0NFhS0g3bmNRh
        mlIk33aXdEHeSdpHwgwI5gFDIuUmhN8kdZi2GLqurMlcERmTxD5ZBhDOd65/sC4sbipLYStQ
        wqGKLkxiHZsAEekHMr2kG7opiaNaiZm1Cnz1vw4LktgnyIBgBtA7Upqh8F0SR7WUkHC9U8eJ
        SENc29gEKDan1BbYZmbX4trWWsxsP8hvJV3R2FkQiwAREYNnS3qIduns35kYrHPtF+LaxSqS
        EpEhgp6N1BYj7G9mYXKYtZOoBK8ZEIAI45W72cX9Cgx37XP1FjyAmV0FzrqPRsWxi0lAMKzc
        lvOxUWUucqLcDkbFsYibAb3KzfDf+ICylvC0U3rd9jEnMQkoHCu3ZUQCRBmLuK9qoTGWRcxJ
        cKCglyK1LZpgrlcCsVYiIoGgV4jeVYxwqJmdu5tdrAwwsyag1FkOmFAp0BrKo5Rf1JriBA9J
        XoVhe9lIFyXDVntRdHGpLbAttmGCjZAn3RbUVWBQV22EdIKtX/u6hFuLMaveEDGz34FDkdpX
        0ZWxWa6xKLoCGBCpJ6Ftd2zjZEy3K31rAybWweg/Ju0LsRcmsk/qsEPZyhHgwS4MfrigR6op
        pqrU6WVHwmFgRBcEP7J9JZm2UMGJcYXOgzk+7aRY0flwhsHn/aFs8WwimF1RX5WDCGYL2upA
        nAAm1T743GRfMlNN8FUREJEw0x9OCBoquoEUS1jcqA9VdKPzVXXwVRMQjchUQZs7ALsI+jop
        FEoBvUDf9Ot8+UC2+mrytEZnpCDfdgBogp5X9HPgqYT9KeQmK7pe0Eu39ivb05p4U/3bnEhu
        lmCfAflObh8X2BnCseLv9kIj0EjxlCkPQR4srzDG4DlgWCd9NBqyzKxtZ2qg0/yeRmT2jYob
        T3eSEZVeJxVdTcpFkqlngBcRidI4nG8wDxiUsIsmga0h+jW07bYabcNl8s9REekBwTSw8Qp5
        w0aC5IGRgAGNYI2CNIZwAmQ/FHaZWWutsf0H5fy4pMAiu5AAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/drop filled.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAMGAAADBgFZyPb7
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAA+1JREFUeJztm81rnUUU
        xn8n9VZREZtglUBi29jWtmoKWhCK2IAfxP4DcRNqV1qyizTY7pJlFBfS0k13JfuALnQhdNdF
        hdj4kVYRTSgU41Wp6SLV9nTxTkKaJmY+z3sLfWC4kDvnvM9zeGbeycxcVBXrBnQCZ4F5184C
        nXVwEUfIDCKyGTgPvLrqqwvA66p605JPm+XDHIa4Vzzub0PGXGwdICIPAb8AXet0mQN2qOp/
        VpysHTDA+uJx3w0YcQHsHTAF9G7Q7VtV3W/BBwwdICJvsrF4gF7X1wSWQ+DDQn2TYDIERORl
        4GJg2Cuq+k0JPith5YBxo5hgFC+AiBwG+iJC+1xsURQdAiKyCbgE7I1M8QPwkqreysfqbpR2
        wFHixeNij2bisiaKOUBEHgN+Bp5JTHUNeE5Vb6SzuhclHTBCunhcjpEMedZEEQeIyC6qsf9w
        ppSLQK+qXs6UbxmlHHCGfOJxuc5kzLeM7AUQkUHiXnsb4ZCIHMmdNOsQEJF2YAZ4KlvSu9EE
        nlfVP3IlzO2AccqJB+gAPs6aMeM+32vAbUANWl9L7QmKSAOYIm3RE4IrVCvExdREuYbAcezE
        A+wCPsqRKNkBItIDfAc8koNQAG5SuSBpbZDDAaexFw+wmRxrg8SJ711sJr3/a0dqmQRFZAvw
        I/B0VIJ8aAJ7VHU+JjhlCHxC/eKhWht8Gh0daf03qN/6q9vbJkNARB6lmvW3h5W6OH4FXgjd
        N4gZAidpPfEA24AToUFBDnC7PHPAltAHGeEvoCvEBaEOGKR1xUPFbTAkwNsBIiJUr73d4bxM
        cZnqteglLMQB/bS+eKg49vt2DinAO+FcaoM315ACmB1ZZ4A3V685wI3/68DjCaQssQA84TMP
        +Dqgh/tHPFRce3w6+hbgfrL/Erw4+xZgawKRuuDF2bcACwlE6oIXZ98C/JNApC54cX7ggJzJ
        WgxZCzCbQKQueHH2KoCqXgWmk+jYYtpx3hAhS+HPI8nUAW+uIQX4IoJIXfDmGrIfsAn4HWiP
        JGWFP4GtvjfLvB3gEp6LZWWIcyHX6kL3BDuobn49GUHMAn9T3Shr+gYE7Qm6xKOhrAwxGiIe
        Ik6H3V2A74GdQYHl8ROwT1X/DQkKPhdwDxgOjTPAcKh4IP50GBij/uOwpTYWrSPxePxUC4g/
        laQhsQBtwESN4ieAttoK4IrQACZrED8JNJL5pyZwRRDgGNW/oKWFXwfex73BWqIAKwqxHfi6
        oPgvge6snHMmW+GGD6h+IZpL+AzwXm6uRQqwqhgHqW6RNSNEzwOfAQdKcrT62VwDeAt4EegG
        nnWf3a7LrGu/uc9p4CuNWdgE4g6rxC37tokHUwAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/drop.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAL+AAAC/gHb2We5
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABLBJREFUeJzVm0+IllUU
        xn9HDC1UGoashqiZyDSwMor+LKRlGSRTCYPiVhcyYG1n5aJd0lgEbiSQoEVtgqRs46ICK4Si
        otSkMoYsImyc/DPp+LS4l3Cmme+75773vt/4wOUbvvecc5/zzLnv+94/n0miVzCzUQBJb/SK
        w9JedWxmTwP74t+nJB3uCY9eVICZ3Qd8BqyKX50DHpf0fetc2hbAzFYBXwBr51w6ATwq6Vyb
        fJa02ZmZGXCQ/ydP/O5gtGkNrQoAjAHDHa4PR5vW0NoQMLOngA/oLvpV4BlJH9Vn1ZIAZtYP
        fAvclujyG7Be0p/1WAW0NQT2k5480XZ/JS6zIalqA7YCymxba/OrOgTMbIBQ+n2ZIc4ShsKv
        5VjNRu0hcID85Im+BwpxmR8VS38n+aU/t+28roaAmQ0BXwMrCoX8G3hA0k+F4v2H4kPAzJYQ
        3vZKJU+MdTDGLooa94CXgI0V4m6MsYui6BAws7XAV8DyYkFn4xKwQdKJUgFLV8A49ZInxh4v
        GrHgXX8T5e763dqmRfUUMLOlwDfAusbB0nAcuF/SlaaBSg2BXbSXPLGvXSUCNa6AONP7gWZv
        fDk4C6xRwxljiQrYQ/vJE/vc0zRIowows1uB08CypkQyMQ3cJen33ABNK2A3vUue2PfuJgGy
        K8DMVgK/ADc3IVAAfwF3SprKcW5SATvoffIQOOzIdc6qADO7AfgRuCO348KYAO6WdNnrmFsB
        21g8yUPgsi3HMVeA0Uy/msji5B4CZjYIFF+YKIQhST97HHIq4PkMn7bg5pYjwAsZPjl4lbC2
        4IGfm3PKO0DYuqo93f2ccHZhHXDe4XcVGPDk5K2A54Dau7dThA2RK5KOAy86fI3AMR3OCjhC
        /f/+9nn6fdfhf8SVk1OAqcrJv7VAv32E1+6UGFNVBAD6Kyc/BdzSof8RR6z+GveAIYdtDvZJ
        +qPD9XdIfyokc/UIMOiw9eIssLeTgUIZpJ4eGUzteLFUwCuSJrsZSfoQ+CQh3nVVAVPA6w77
        lxNsBlODeQTod9h6cFTSeYf9x8A/XWySuXoEyF5364JPPcaSLgHHupglc/UIcMZh60HKmPb6
        JHP1CFDjmMplwnu/F90ESObqEWDCYZuKacKOrxfdFkCTuXoEOApccNinYAWwJsPvkQ7XLhC4
        JiFZAEkXgRpH2jslsxAe63DtcOSaBudkaDvl5wDfAcsdHB4m3DuSZ5MlZ4N9hHFbWoS9if0v
        I5w7XCjONNBXTYBIYryCAFeB14AbO/R7D+GdoVOccXc+GQL0A5MVRBBwkrDL8yBhSWwl8CRh
        F7jb0tgkjmlwtgBRhLFKAlzbLgIzDvuxnFxyt8ZuAr4E7nU718FJ4CFJ7sd01s5Q7Ggzoex6
        jUlgc07y0GB3WOGs3gihTHuFGWBETc4N5oybOfeDUdrZK5jvyTHamH/TAFGELfg2MJq288CW
        ItxLBIkibCCcF6qd/GnCcdkyvEsFiiKsBt7E9/hKbTMx9uqinEsGu0aI9cChgskfIvx0pjjX
        2r8ZeoJwcmMY/4mSCeA94G1JydNbL9r63aARpr3PEt7pB4Db4yeEFZwz8fMU8D5wTC2Q+xcm
        n3Q04TEatgAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/ears2.png'>
        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
        SUVORK5CYII=
      </shape>
      <shape name='Icons/egg2.png'>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAE8AAABPAFNm8kO
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAiNJREFUWIXF18+LTWEc
        BvDPe6fRhJCNCYtpNIPSpJRiodnJAjsroaSsLIywsDL/g4UiGlaUbIz8WCixMH5EGT9KEslM
        jQyZjOG1OPfqdt0755x7z+Rbz+p8n57n/b7ve85zQozR/6xSWkMIoTOE0BtCCHPiIMb4DzAf
        x/EJsYwJXEFPPU6zqCe+CI+qhGvxHYfnxAA6cGcW8WoMFGoAbbiaUTziF3YUaeBoDvHqc7G4
        ZQOYhw9NGIgYbMVAiDEKIezFuZwXqFLf0B1jHIcQQge2YwO6ypjG8zIuxBgn/rLLE3jW5Opj
        2fgCrMMpfE7pH8Oeqq23pUnhSexGwAB+5OQfqRg41IT4Q/RgGa43uYBp9JawWr4awWaswlNs
        zcmvVDv2w60crr+gW3LIfufgNcJI3gkcwIzk4BXxcYokhymL2zOSsd3L2J8F9+FBxua1OFmg
        eMTdEl5kGNVjvJRsQZE1VcJohsaL6EdnwQauwU7po+rC6Qx9eTBTWVA7Xqc0L8Hbgg0MxxiV
        Yow/cSLDuNoy9OSpIah8EILkDTfbBN7M8jwvRtFRG0g24WsDQjdeFSQ+hb5GmXA93tchDeJ8
        QQYOpqXilXhSQ/qIPkkObEX8UmosrwqoG3EMw5Ib0I/LLYgPYWEmAw0DJGukJ55aTGBXpv+C
        jCa6cCOj+E2syBTLmzCyD7cxXiM6hrPYRhJ6U1NxqxVCWI6leBdjnMzFLcJAK/UHeOJWsRPJ
        gckAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/elections-badge-with-a-star.png'>
        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
      </shape>
      <shape name='Icons/facebook30.png'>
        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
      </shape>
      <shape name='Icons/falling object yellow circle.png'>
        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
        FtvZ+bIAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/falling object.png'>
        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
      </shape>
      <shape name='Icons/falling yellow circle.png'>
        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
        EFuuyfiA/w+nr3NlHDd2cQAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/falling.png'>
        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
        H8pq1hP+H5mn+F8IVoo9AAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/family of 3.png'>
        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
        YII=
      </shape>
      <shape name='Icons/favorite21.png'>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAAAN5AAADeQELGyzW
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAACJRJREFUeJztnW+MXUUZ
        xn/vtTZLI41aY7q1pQoGiFGLJg0UEAmJ4Mbs1hQNkJB+0IYPxj9EoIT0AwlCSpoACVgTxPpB
        MDaWItQ0Wv2iUpU2tIIuBo0EoQttTNWlViyl3ccPM7vdvXvv7r33/Jm558wveXOze++deWbe
        J2fOPefMjEkiUV8aoQUkwpIMUHOSAWpOMkDNWVBmZWa2GPg4sBQYbPG6EBgDXgUONb9KOlGm
        3l4xswFgBXBOi9flwEngMHCkxesfJR0rTWvRvwLMbCUwDIwAVwLvzFDcS8AOYLuk57Oryw8z
        WwVcD3wROC9DUW8DvwJ2AT+V9Ep2de0pxABmdhGwDpf0VblX4HgR2I4zw18KqmNOzOwCXNKv
        By4sqJrncWZ4QtJzuZcuKbfAJXs3oJLjILARWJJne9q0cYmv62CAdu4GVuXanpw65Vzgh8BE
        gE6ZHkeBm4BGAYlv+LKPBm7jhO/rc4MbAHfythV3UhOyU5pjP7A6x+Sv9mWGbtf0OOn7fmkQ
        AwBDwHgEHdEuTgMPk2FYwB3uH/ZlhW5PuxgHhko1AHBb5J0yPSaHBeuifUYch/tuzH5b4QYA
        BoBHI2hwL/EosKCDNi7o8zYOFGIAYBmwL4JGZomfAAvnaONC/5nQOrPEPmBZrgbAXcUai6Bx
        ecQeYFGLNi7y74XWl0eMAStyMQBwFnAggkblGU8Di6e1cbH/X2hdecYB4Kw8DLA9gsYUEc8C
        7/PxbAR6iojtmQwAbIqgEUXGCz5C6ygyNvVkANx1/NBX9lJkjwlgpF2eW94MMrMP4W5CnD3r
        zUQ/8h/cPYSXm99o90DIt0jJrxJn43I6i1lHAH9f+w+4q2GJ6iDgE2p6jqLVEWAzKflVxHC5
        nfnP6UcAM/s07mmURHW5UtKvJ/9oNsDvgUtCqEqUxjOS1kz+MTUEmNk1pOTXgUt8roGZ5wDX
        BhCTCMNUrk0SZmbAa7hHsxPV5zDwAUmaPAKsJiW/Tgzicj41BAyH05IIxDCcMcBIQCGJMIyA
        uziwEvh7UCmJUHywAayZ92OJqrKmQTr5qzODyQD1ZrCBm92TqCdL0xGg3qQjQM1JR4CaM2i4
        FSlKXSomEQ2nGsDx0CoSwTjeAEpbkCgRHccawBuhVSSC8UY6AtSbYw1g1mSBRG14uQGMhlaR
        CMZoAzc5MlFPXkhHgHozariHQl4nXRKuG0eAZQ25mSE7Q6tJlM7O6U8F7wgqJRGCHXBmXkAD
        Ny8gDQP14AhuXsBEA0DSBGkYqBM7fc5nTA37cSAxifKZyvXU7GA/DIyRng+oOoeB5bOOAGkY
        qA1Th3+YvUJIGgaqz4wct1oj6Bng4jIVJUpjn6QZa0C0WiPo1pLEJMpnVm5nGUDSXuDJUuQk
        yuRJn9sZtFso8gLcTaL0sGg1OAV8VC12V2u5UKT/4CNFq0qUxiOtkg9z7BtoZu/HbdT4rgKF
        JYrnOHCepH+0erPt3sH+C1uKUpUojS3tkg/z7BxqZouAv5GuDvYrh4EPS3qz3Qfm3D3cf/GO
        vFUlSuOOuZIPtN8voCa7hlQ55t0tpO1+Ac34bd8Pkm1X7ER5vAR8Uh1sQz/nEDCJL+g63Hal
        ibg5CVzXSfKhQwMASDoA3N6rqkRp3O5z1REdDQEzvmD2FGldwVjZJWltN1/oxQDvBZ7DbSaZ
        iIdDwEWS/tXNlzoeAibxFdyAu76ciINTwA3dJh96MACApN8Cd/by3UQh3Olz0jVdDwFTX3RL
        zD8OrOupgERePAF8QT0msmcDAJjZAPBL4PKeC0lkYS/wGUknei0gkwEAzOw9XshHMhWU6JY/
        A5dL+neWQjIbAMDMVgC/A5ZnLizRCWPApZIOZS2op5PAZryQIWA8j/ISczIODOWRfMjJAACS
        RoG1wFt5lZmYxVvAWt/XuZCbAQAk/Qa4EbdjdSJfJoAbfR/nRq4GAJD0OHBz3uUmuNn3bb50
        cs+4lwDuJfw98arEvYXlqUADGLA1gs7r99iK/7XWVwaYZoSHIujEfo2His5P7ucAzUj6GvBg
        0fVUkAd93xVK4QYAkPQN4IEy6qoID/g+K5xSDAAg6ZvAfWXV18fc5/uqFEozAICkW0mTTeZi
        i++j8ij6JKPNieFmwp9gxRabg+QiRKXeBHdH0OmxxN3B8hCqYm+CuyLo/NBxV9AchKzcm2BT
        BEkIFZtC938uzwNkxcxuAr4DvCO0lpI4DXxF0ndDC4nCAABm9nngR8BAaC0FcwL3BG8Uy/BE
        YwAAM/sUsAt4d2gtBTEOjEh6OrSQSaIyAICZfQz4ObAstJaceR34rKQ/hRYynegMAGBmK4Ff
        AOeH1pITfwWulvRKaCHNlHolsFN8R10G7A+tJQf2A5fFmHyI1AAAko4CVwF7QmvJwB7gKt+W
        KInWAACS/gsMA4+F1tIDjwHDvg3RErUBACS9DawH7g+tpQvuB9Z77VETvQEA5LgF2Ii7ghYr
        AjZKukUxnl23IMpfAXNhZuuBbcS3jO0p4MuSfhBaSDf0nQEAzGwINzN5UWgtnjdxM3R/FlpI
        t/SlAQDM7GJgN7AksJR/Ap+TtC+wjp7oWwMAmNmFuJ9a5wSS8CpwjaQXA9Wfmb44CWyH7/hL
        CbP/8Shuhm7fJh/63AAAkl4DrsCtUVAWe4ErfN19Td8bAEBukYSrcXcSi2YX7rp+poUZYqES
        BgCQ9D/cekXbCqxmG7DO11UJKmMAAEmnJW0A7img+HskbZB0uoCyg9HXvwLmwsy+ipuSZhmL
        EvB1Sd/Orio+KmsAADP7EvA9ejeBgA2Svp+fqrio1BDQjE/cBnq7f1D55EPFDQA9m6AWyYca
        GAC6NkFtkg81MQB0bIJaJR9qZACY1wS1Sz7UzADQ1gS1TD7U0AAwywS1TT5U/DrAfPjrBNQ1
        +VBzAyRqOgQkzpAMUHOSAWpOMkDN+T+SqpP7q9fYHAAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/filled-circle.png'>
        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
      </shape>
      <shape name='Icons/filled-circlex2.png'>
        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
        Zama9zT6U9/3AW8RvyFlqbe8p7mwn/VZF7EbU9Sqz4bYv8Ped90o8DawTPwmFa2WvXejO+56
        RkaAN7HPj8RuVlFqyXs20ka/M7UHeA1dxEhT896rPW11OoJd2NWSWXTebVY1780EBb2pUsUu
        Xi8Sv5l5qUXvSfS3M51KgLPYpche3ntr3oOzbD3XrHCOY3f/54jf5Kxrzrc91U3yIuoDXqW3
        JsjN+Da3c12+cMaAd4EbxG98t+qGb+NYoJ4VRj9wGngPuEb8IELVNd+m0+jOF0ew93PTxA+m
        3Zr2bTgSuDelcAg4A3xIMd4iLfpYz5CzVT0rsQfQwhPYuekUMAkcizucTS5iz3z4AjuXfhd3
        OJvlNdi63cDjwNPASa8TZH/uWsYOtVNeXwG32fDMh7zJe7B1FWwqziA2q+AoNsf5OWAcCz+k
        29iHiS9gH6W4BPyEXbCv3+DItaIE26iCXWPt868j2JLk414HsMUYh7Gb1ntZX5xxAVu5ZB6b
        LLaAPZjjitdl4EdsgvyKf819kCIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiItn4PypxZA8PJAEkAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/fish10.png'>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAHiAAAB4gF6FFzA
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAW9JREFUWIXt1r9L1VEY
        x/HX8V6zgoJIF4dmQQhCKtcMcnVwkgIhUKG1oK01cAuCWkSQppagoVmJQhz88Qe4hEPg4qKE
        0mnoXPh2Ol4l7u0u3wceeDjn+X6e98Nzvuf7DTFGvbS+nlavAWqAGqAGQPO0jRBCE/cxjju4
        iHcxxqUs7wZ+xBi//xNBjPEPxwXMYRcx8yNcyvJf4XKKh3O9szwvPoVvhcItP0Gjkj+BmRQP
        4XW1kWLB32N/gq/41FoMeIGf2MFD7BcA9ipCDbxJzwa8xbW0N43HheKDWK3orbaE3lcWVzCA
        zQLARkVsDrdT/AzjKX6EhRQ3U94krmM703se8BSL2dE4Rr+/7QBbOMQIPqex3MVHXMFYaqIf
        s/iAL3iJW5nezT7MFwqVinfNZpXnXfKOj6B6OJbPAdD5Q5gl3MN6G4DuvIaFpAdYKwB0/CIK
        7X5KQwijqcsJXNWFq7gtwP+wnn8Na4AaoAaoAX4BmRqiYJqAp2AAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/fish52.png'>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAlYAAAJWAHikzU+
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAi1JREFUWIXF1ztoFUEU
        xvHf+EQ00SABxUILQe1EQSSiiZ0IViLio1KRNGKVTgVFGwvBNm0qbRW1UBshhvRCEFREIUVQ
        lFxFE8xY3I3c3Lt3Z3MfOHCK3XNm/t8589idEGPU7RZCWIsQY/zV4Ou0gBBCwBDOYw+2Yysi
        PuANnmI0xrggxtgRw3pcw7sMVmtzOe8msbdV2Iqa6q1BQH8OJGaCejGc45ta0UKJBzGFSghh
        DBPYHWOcwbeCrqty3s0vN/Oj+JGTyeXMP9mkCnlTEDGyHPhQE3jEWBZzv4k/z76ivyx8EJWC
        wT5hNfowXVLA2RijMvAjCfii3criT5aIffhv/AT8cEl4xDwOZP0eFMRNY3NSAHZidhlzGlV3
        xzqsxPVMVH3M8SWcAgE3lglftFfYlo1xEC9rhIw2cAoEXGpRQMQMjtWMtRGnsKG0gKzjvSZl
        LGsTWSI9TRkldkGrU7Fo37G/HQETbcArOFQ4fgK+o83sb6YSTH2MTif8qTaTCui2gC/JiILy
        92BB+XL/xh2MZM+z2JRcY4ljuCz8BXZl/fpVF+6FFDwl4GoJ8DTOlAGVFqD6ezWA1wXgOdVv
        f2878CUCsA938bEJ9A+eq55sfe2Ca7iG8bYg2/e4gi2dgtYLeJaY54vdANcKCDiB8SZbq2Pl
        Ti5C3K4T8Kib8AYBmYjHNQLO/Q8BAxn8p5wfiE5bw20lxjgeQniCzzHGSr2/0y33dpzdcMU8
        Z4fbX3XWSVRukMGxAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/food.png'>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAYAAAB5fY51AAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAgAElEQVR4nO2d248sWXbWv7V3RGRGZlZVnqpT1d3TPX2bS3vcHs8YGIRHo/FgGdkgLMwY
        xIvB2EYg+QH+AB5swRsvGAkkywKEQWMLyZaxLCyMfBnw2MbGMmDjYWY0PR53z7i7zzl1LnXJ
        W0TsxcOOlbkzTtY9LxHl9ZNSlZUVGRl5Mvd3vrX22msDiqIoiqIoiqIoiqIoiqIoiqIoiqIo
        iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
        iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
        iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoinJroE1fgKKsEcL8d57Lm9IQVLCU
        2w4BiAAkANrlTwsvVAWALLjl5WNuI1eqXIgKVnMw8AONMBts4cCi8hhT/u7KG1eOofI8CM6z
        yGXY8lwUnKtJA1neZwpgJ0mSXSJ6loj2AcQAcufckIiOnHPHRHQ6mUyOAZwAGACYwAuYUiNU
        sJpBBKADoJumaTwcDsfwA2sELzgE7xw6aZp2iIgHg8EIwCn8wBNBSgB0Op1Oh5nNcDiUY8aY
        F6O4PK7LzNGC16s7FkALwFYcx8/GcfwyM38bEX3SGPN8+fcxMw+dc0+Y+R4zf4mI/nee52/m
        ef42gAfw73kMDRtrgwpW/SEA3SRJXsjz/C8bY/aZ+Y04jn9lNBq9C2AIL2j9KIo+DODPwA+w
        30vT9P8eHx8/ghcZA6Afx/EHmfnjACJm/nKSJL89HA7vwwubvN5WHMevMPN3Augz8xeSJPns
        cDi8By9adYXgxXYrSZIDInopiqLvMsZ8dxzHr6RpSq1WC9ZaMDOyLEOe58iyDJPJBFmWjfM8
        /zwz/6Jz7pfyPP8qvHCNoKJVC6JNX4ByIQZAF8A3Wmv/ITM/T0SfK4ri9wE8ghcs2263t51z
        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
        x1S/OK0RvMM6xEy4fh0+ZDyCF5tBeU2My3WSYHjH+HUAvwHgJ+DF+IvwojiE5q5qiy49aBbS
        k+q9AD4J4Pvh3daytlgXd3MPPp/zX+HF4W14sZpg/c5DliO14J1VBz48lNtueduGbzDYg1+8
        LMfJv8sYwGN4UboP4M3ydlg+flIeo86qxqhgNQ8LPzAP4NsJ/6Xy9iHcrA/5Q3gX87sAfhPe
        Ub0LH5YNUY8iShGvCH4hdlL5GQd/q7biKeAnLibwzk1KRMbw701rrhqAClYzkT38evAJ6Wfg
        c1qvA/gG+A1BZcOIDuY/5xzeTRzBO6mvwye334B3G4/K2wn8wJZwq65IaxoK7pvKYxJOy9Km
        Aptf5qRcAxWs5iJuI4EXpW5w24LfMKKF+d7kEvIN4AXpuLwvtyG8SEk1e52FSvlTiArW7SDs
        RhoHN+mfFQqWOIwcXrzy4KbdCZRao4J1e5FwCMFPDn6qMCmKoiiKoiiKoiiKoiiKoiiKoiiK
        oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
        oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
        oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKomyO/w/KfWljVQOlfwAAAABJ
        RU5ErkJggg==
      </shape>
      <shape name='Icons/game controller.png'>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAACXBIWXMAAAbuAAAG7gFhi/u8
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAIABJREFUeJztnXm4HUWx
        wH8VAgmEfScJCsgmSABZEpBA2BTZEZBNQBZRFFcUFfSpiOtDefgAF5RVwSdL2EE22XcQQQi7
        IIvshLAkhCT1/qi+5Obmnumec2bOnHOmft/Xn5I7010901Wnp7u6SlQVx3HqyZCqBXAcpzrc
        ADhOjXED4Dg1xg2A49QYNwCOU2PcADhOjXED4Dg1xg2A49QYNwCOU2PcADhOjXED4Dg1xg2A
        49QYNwCOU2PcADhOjXED4Dg1xg2A49QYNwCOU2PcADhOjXED4Dg1xg2A49QYNwCOU2PcADhO
        jXED4Dg1xg2A49QYNwCOU2PcADhOjXED4Dg1xg2A49QYNwCOU2PcADhOjXED4Dg1xg2A49QY
        NwCOU2PcADhOjXED4Dg1xg2A49QYNwCOU2PcADhOjXED4Dg1xg2A49QYNwAFISILishSVcvR
        64jIUiKyYNVy9AqiqlXL0DWIyELAusB6oawELAssAywQLpsCPDygXK+qL7Zd4C5GRJYGNgNW
        G1AWDpe8DbwAPA88Adwdyt9V9Y22C9yluAHIQESWB7YFxgPrA6vQ3KxpOvAX4ARVvb04CXsP
        ERkLHAZ8EpiviSpmAY8CdwE3Apep6tPFSdhbuAHoh4gMBTbGlH5bYK0SmrkTOAH4s6pOL6H+
        rkNE5gP2xBR/gxKauB+4LJRbVHVGCW10JbU3ACKyDLANpvAfBRZtU9OPAYeq6tVtaq8jEZGt
        gF8DK7epycnAlZgxuEJVX2hTux1J7QyAiAzBpvPbAtth3/JSoUh/Ar5WtzWC8I3/S2CfCsVQ
        bN3gUswg3KWqsyqUp+3UwgCIyLzA9sAu2K99p63WvwZ8VVVPr1qQdiAi+wPHAYtVLcsAXgKu
        ACYCl6jquxXLUzo9bQBEZC3gQOBTwJIVi5PC74Av9uraQPjW/1/gkKplSeBl4I/AKap6f9XC
        lEXPGQARWRTYGzgAm+q3ixnYFuDiLdZzB/CZUFcvsTBwMrBhi/W8Guoa2rJE6dwFnAqcpaqT
        29hu6fSMAQiLSQcBOwPDS2zqHeAR4EFgUvjfB4FHVXW6iIwCPhzKJsBWJcrS6yhwDXATcA9w
        j6o+G2YSqwBrhPLB8L+rAsNKlGcacAHwh55ZvFXVri3Y4t3O2EKOllSeB04D9sAG2Dw5ZRwD
        nI3NEMqSsdfKDGxxdK2cz3qe8I72CO/s+RJlvBsbe1K1HrSkQ1UL0KTiDwF2B/5RwoudCdwG
        /Bf2CVHIC8a2uf7UAcrV6eU0YKWCnrmEd/hf4Z3OLEHef2BjcUjVetHzBgBT/L2BBwp+ia9i
        v9L7AkuV3IdPAW90gKJ1WpkC7FHys18qvOOzwzsvUv4HwtjsKkPQNWsAIrImcAb2bV0E9zLb
        O+w2VZ1ZUL1RRGRVzDV47Xa12eH8Hfikqj7WrgZFZB5gHLO9PtcpqOp7gP1U9YGC6iuXqi1Q
        gtUeAnwDW4Bp1Uo/AnwLGN0B/RoOnFRAn7q9nAgM64D3MTqMjUcK6NO0MGY7fjZQuQCRl7Iy
        tgLcyst4E9vCGV91fxr0cXfMEahqRWx3eQ3Yrern3+CdjA9j5s0W+3gTsHLV/ckqHfsJICLj
        Ma+sBWLXNuA24BTs0E1HHw8VkZHYQtWGtO5H0Om8ivk6HK2qz1UtTBbh+PeemDPZuCareRvY
        RlVvLEywAulIAyAiq2AKnFcZZgBnAT/XbvkGc7qCsAZ1BLbQl9cJ6VVgnKo+WrhgLdJxBkBE
        lgRuJd/psOnY9tFPVfVfZcjlOAAisiK2VvBp8sUreAzYSFVfLkOuZulEA3A1sGXi5dMw99Kf
        q+oz5UnlOHMiIqOxGcFnSPc8vUZVO8oztKMMgIhsjZ3VTuEG4OBOnFZ1C+Eb9x3t0cNH7SB8
        rv4e2DTxlo+q6lUlipSLTjMAtxJfbHkD+CbwG+0k4bsAEdkQGItF3dkAi7E3HfNmuxNbnLvR
        P6PyISICfA74GbBQ5PLbVHWj8qVKo2MMgIhsA1weuewVYAtVva8NIvUMIrIs8Ftgx4TLZwA/
        AY7xmUE+RGQMcC2wROTSj6vqFW0QKUonGYDbyT4qqsBHVPXWNonUE4jIXlgMwrw7KvcBB6jq
        PcVL1buIyEbAzWRHmbpDVce2SaRMOiIvgIhsR/yc+IWu/PkQkVOwbdFmfAvGALeLyEHFStXb
        hDF6YeSyDcOYr5yOmAGIyF1YbL5GKPBhVb23TSJ1PSLyKeDMAqqaCqzti63piMg62JmArFnA
        3arazoA1g1L5DEBEdiJb+cF+/V35ExGR5YBfFVTd/MBpIZiqk0AYq7FZwHph7FdKpTOAsHp6
        D9knsfzXPycicgkW8bhIvqGqxxZcZ8+SOAu4FxvblSlh1VZ9F+LHMC8oS/lFZJEQXqpnEJFN
        SFf+aViQjBR+EKIr9wwiMl9IBlM4YcxeELlsHUwHKqMyAxB+/b8fuUyBHxTQ1hoicqSInCci
        N4vIEyIyFUsS8Y6IvCQi/xCRy0XkZBHZMzjJdCMpq8vXYX4ACwGLADsB/47cswDwoZYk6wBE
        ZLyI/FZE7sZO+00RkdtE5AQRWbfg5n6AjeEsvh90oRoqPHK5O/HjlOe3UP/6wM9p/nz3NOAS
        7CTY4lUf28zR7z9H+nUNg4Q5w5KcvhS59+Cq+9fCc1kAOB7LHdiof9OxU5lDC2z3/ISxtntl
        z6WilzEE+GfkoczCVp/z1r0GtgBT5Nn1V4Bdqx7Eif1/PNKXMRn3fjly76+r7l+Tz2R+LD9g
        6vu+ioKCeWBRn7KMjgZdqCR4SFUvZM+El3BezjpHYT7ZZUXfnQ58qOrBHHkGi0f68EbWQMM+
        C7Luv6PqPjb5XI5v4n1/tcD2z0tob89Knk0FL2MIFk8/62Hk+vXHYrq9XpLi9y+/q3owR57D
        iIgBnAbMm3H/ppH+X191H5t4JuOJ/wIPVqYCqxQkQ8osYFKWcS6rVLEIuBeweuSaiar6j5TK
        ROTrwMVYtpiyicldKar6FjaQGjEMU4hGbB1p4q7cQlXPHjSX/HU4Ba3Qh7E8MXLZ6phutJUq
        DMA3I39XElb+RWSYiJwG/Dft60fbota2wB2Rv58kInMl5QwnBY+I3Ht301JVRyvedq2mMetP
        yo5ATDcKp60GQEQ+BqwVuWyipp32OxXYv0WRXse+7VOYBXRD9t47I39fDbhfRA4WkQ+JyDgR
        +R4WXyHmE9FVM4AQ+ntMC1VsUJQsYUzHZgFrBR1pH23+HruK+Ld/w1XqfvV8O1LPYOUx4BfA
        FsAKwPBQl2AJI9bBEopezNwhyN+hwEWhkp/xGpSTAec5uiwNVni3k1vo80MFyzOG+FrAVW19
        Rm18GeskPPBzE+rZMeEh9i/XABvmlHVBYAfge8BhwKpVD+ac8v+yBAOwY9X9avJZXNtCn88o
        QZ5zE9pdp23Pp40v4o+RTs8ikgwS+ADpabUeB7aregBWUbB974cLVP7CFaGNz+K/W+j3YSXI
        sxbxH7A/tu35tOklLA+8G+l0yq//OYkv7mra6L2HfTsv1K72EmXaiGI+BZ4FFqu6Py08h9Ww
        2Px5+/0CsGRJMsVmAe8Cy7fj+bRrEfDLxGOpH531RxEZB+yW0NbJWCKGVxNlaxoRWT6cvJsC
        vC4i94lIakTjUlELTPFFbP2iWZ7DEna+VoxU7UdVHwaObOLWz2p5IbwzxzqmK18uqe05aYMF
        Xpi4k85fE+q5MVKHYjEF2+JMgcV9Gyz//Cxgq3bIkCjnmtj2Xd5fwDPp4l/+Ac9ASPPG6yvH
        tUGmv0ZkeB1YuHQ52tDRryc88G0idXw8oY6HgUXbOKiOy5Dl8XbJkSjrUOzk5fSE5/g8sHPV
        Mpf0HA4ge1fgedq02Alsk/Auvl62HKUGBAnnx5/AMq82YhKwpmYIIiJnYHnds9hUc+ZfE5H5
        gWlZbWfcezOwccYl66tqRznOiMgIbDdmvVA+jB2JvRvb478beFDbmCq9FURkGDBTVWfkuGck
        dvx5/VCmM7v/E1X1lRx1zQfMytN+v3sFeAD4YMZlzwArqeq7eetPpmQrty9xK3dIpI6h2Gm8
        rDom5pBpF+AM7OHPxL7frwOOBd6fo56YT8Mx7fglqVsBNsfWee7BlPdtLJXc/xLZRSqo/U2w
        EOt3YesrU7E8licC6+as65AE/di31P6U/LDujXTuZWD+hBeeVccsYLUEWZYivvo6JWaQ+tV3
        TKSuB8oejHUqmG/GSWRvob0DHEWB5/n7tT8c86/I2ll5F3P5bXjgakCd8wcdyBpH95b6XEt8
        YVsnWLforyTwP5E6bk2oYxS2rROTp6/8PqHODRPqiRomL0ljaQTxE6T9y5UU6LWIbfPmWUi9
        Hpgnse7YD4kCW5f2bEt8abFVzneA5RLquT1SzzcT6rgsx8vrK5mLQdjK8tOROkqdvtWlYBGO
        876/LxXY/o+baP+IxLqXC7qQVVd0l6zpvpX0wsYkPKAk77IEJftg5P5PN/HyFPgPkV0FbEra
        knHyEn3/H6G58/xvYQtorba/Hs0FmZlG4gwQW5OK1Rc9I9NMKcsR6OsJ1xwXuyCslC6TcYkS
        P6K7T4Isg7Es8TTlj0T+PrLJtp3Z7E1z5/kXoJjz/HsC8zRx3zDSHNcgQRdI06ncFG4ARGQp
        LAhDFter6t8TqlsCyApF/bLGt0hiSUeyiJ0lfzbydzcArdPKmfwiMu+0UkfSvUEXro9ctkfQ
        rUIpYwZwAPFz5SkWD+z7KIvns/4oIisBcwW/yEHMeDwX+bsbgBYI+/xrt1BFK8a/bwb64Ta1
        H9OJ+TDdKpRCDUB4YJ+JXPYYduY+hZiDRex8wdTEdpq9PzY1zO0g4szBDNIDtgxGS+9f7QN9
        Wpvav5j45+xnis4hUPQMYHNg5cg1v1LVWYn1/Sfy98wZgqr+J6GOLGKefLEZSitt1x41j8RW
        0pMX4YnZSh3J9wadiOVzXBnTscIo2gAcEvn7ZCyUVxKqOplsC7yoiAyPVFPmC1w28nc3AK0T
        i3GYRdcYgMCpmI5kEdOxXBRmAMICRWzV9WRVfTNn1TEliqWrOjFne308hEUTyiIW39ANQOv8
        nuaONL8E/KWA9k/FthTz8hpwVp4bgm6cHLlslyIXA4ucAexP9uLfLOCEJuqNLbRlplhW1Suw
        QZSHmcCnVbXh7COky94hUk9MdieCqj5EPIfkYByqqi8V0P4TNBet94vhEzQvJ2C60oj5aD0Y
        7mwKdNiI5eC7vMl6Y66S9yfUsTDw90g9fWUW8K1EB5VYXaPLcN6oW8EWW69MfH8KnFRw+3nj
        CZzSYnuXR+p/pLC+FfSAYgd2lCZz62F7qbG6N0qoZ14syGfWmfhHgPGJcp0ekemuKpSlV0tQ
        wi9h0/FGz/zFZsdZogyHkB2T8mVgrwLa2TVhzG9eRJ8KiQcgImdjHlONeAkYpU2eaxaRp8mO
        KXCLqn4ksa7Vge0xB5P1sZd2B3bm4FxVjW7diMja2Op01ifUd1X1mBSZnHSCb8cuzI5p8A6z
        z/P/RXNM+0PegFmaQwlE5P3AJ/q1P5PZsRT+oqovpNaV0ca8mJNZ1rf+n1W15UxCLRsAEVkS
        Ezbr+/8Xqtq0K6OInAB8IXLZbqp6XrNt5JTnKmCryGVrqeo/2yGPk07IgLQPZvzXwXwN/o4p
        8amq+kCF4r2HiBwLHJ5xyXTsR7W1uIUFTFcOJz5dyTywk9BGymfAi+QI6NGCLF9LkOXOsuXw
        kvu9DQN+Rjx56hFUlKp7gLwfTBhnh7fcTgGCPhQR8qaCHshfEh7IvcCIEl/KRyMDqK9sUfUA
        8jLHextOvvP8l9ABWZCAmyJytpy5qKVtQBHZDIu7nsUfWmmjH0diEVeyWBuYKCKLFNTme4jI
        5sD/EXf/vUJVry26faclfkg+n/7tgM+XJEseYrqzWtDB5mnRQp1FtoWaQoG/yJhTT4oFf4gC
        o/Fg6cFiiU0UWxBau+pfDi9zvLtmE6QUEk+gRdlHBB3KkvOsVtpoegYgIktgq6FZnK2Ws74o
        vk+ac81qwB0icng4UdYUIrKyiJyPBZyMHTwCOFEtF7zTOexNcw5vCxAf36USdOfsyGWfCLrY
        FK18AuyPLaxkkdcDLxO1LZ6dSDuhtTAW6XeSiOwnIgultiMiq4rIr4AHSQ8qcR22QOh0Fq0c
        CW4lFkFRxHRoGC14Bja9DSgik4DVMy65T1VbOcud1fZe5PSzxrZNrse8rB7Hti6fwyKzjsYC
        h66HufeumrPuJ7AMxMkx5eG98+7vavrpyJ4ixNWfqSXlIQj7/G9g77gZnlLVFYqTqDlE5B9Y
        mL1GPKSqWfkFGpIyrR1MoE3JVn4obvFvLlT1bBH5EPlyvs2HRSreumBxpmABRBsqv4gsh81c
        NsCChIwK/7sEMFNEnseM0XNYMohrscXEtwuWtRLC4ZUdgXHM2f8lARWRF5jd/+eAG4BLVHVK
        i03PwtZumjUAreRVLJI/AMdn/H11EdlUVW/IXXOTixOxVN/TaEN2XuDbFJMBt9nyJA0W/bBU
        5t/CkkY0E9TybeACYD+6MEcf8D7MR+TGJt/RO1g054NpIUsv9mnW7PttW5ruSB8WDzpVuKzN
        CDM/lk6qtJXJnPLsSHyltIxyI7DUIPKMwix2M5FkG5VXaFPOugLex1LYomlKHsLUMoUmQ6xj
        60DNtltYaPECnmtsx+1NIkl2Bq23CUF2SXhwbXWEwWICPNZG5f8dMN8AGRYBfkJzuehTynRK
        Cg1d0DtYAMvKU5YxnoXlf8wr15rEfz0HKy8Dy1T9XPv1Y4sEmXfJXW8TgsSm/49TgRcVthr6
        deDVEhX/VmCTQdoehwX/KNvw/Knqgdjg2a9Bewxws0fKj2iirU9W/VwH9EGCbmXJnPszIK8Q
        85GdXlmBoyp+UItiPt9TCxx4j2CHjQZrb1+a+4VppnTcGQPsZGW7PsH+3aSMQzD33tR2fl31
        c23Qj6Mick9mwMw0WmdOAbaNCDATO6HUCQ9rSeBA4KImjcG/sW/ZrRgk2WQYVD9v08DvK+dW
        /VwHPIMjaO8i7HUtyCrAocTP83fUL/+APoxKeN7b5qkzlx+AiPwBU6pGXKeqhUYtLQIRGQF8
        DNvnXxaL5rtc+P9Tsen7f7A8A08DV6lqZjTa4Cj0xRZFm45txaY6ZH1CVSe22GYhiMiRwI9a
        rGY6drYiNfPOwara0vZyv/P864cyndnxBM7RAs7zl4mI/A2YkHHJKap6UHKFOazPUOKpjA+t
        2kq2yRJ/NvIcGv26nA7sjp1DX7Lfcx0NjA31XsHcK+izgJ9U3e9+/d+F/Fubk7GV7L2AdYGl
        sV/leTCfgA2wH5eLGfyT6uSq+90JBZvFxMZZcnr05BmAiGwJXJ1xyUxgpKq+mFRhlxJOBV5J
        uhPVPcB3gCs10eNNRBbFHJbGYlPWy1T1zibELZwQDelm7KBKCg9j/b9IVZOSfAS37a2wgzzT
        sGd3UxPi9hwisjTmLJU1a9pKVWMRrY0clieWCffqqq1jG6zvKGxPPuUX71ns167yc+UF9n8R
        4KnE/r+KxdBL/jXykvwero48++SgqEnfniEEduxQTBEx2DudH2JeWTHuBDZQ1bM1vLHBEJGm
        XLHLriuDb2IefjEeAsaq6u9UtS3p0drU/04hpmu7BJ2Nkrr4tDHZWXBmAOcn1tWVhLMH+ydc
        ej6wmao2PLYsImPDYs4bIvKiiJzSzJFOEVlcRE4TkZeBt0TkNhGZkLeexLZGAl9JuPRvwDhV
        fbQMOfojIguJyIki8h9gqojcLSIfL7vdDuB8svNOLovpbJzEKcdxZE85rqx6WtSGadfFkWeg
        mN//sEg9ExjcTfhRYMEc8iwQ7hlYzyzsG7Do/p+c0P8HgYXb9D7mxULADSbH7lWPlzb0P5Yn
        4bikehIbi333HVT1Ayn5YW+cMPifBZZLqOv+jDqOziHTkRn1PEGBaw/AKg2MVv/yCvCBNr6T
        z2fI8iowvOpxU3L/D4q8j6dS6ol+AojIBmR/970LdMTedInsnXDN5zWSCiqs7mflMhyfQ6ZN
        M/62IratVhR7Ed+r/5qqPp6n0hZTXWf1fzEsgGsvM5HsGJnvC7qbScoawK6Rv1+jqq8m1NPN
        7Bj5+82qemFCPbFswrF04/2JBREpMpzVzpG/3w+cmVJRWP84NqyBTBaRF0TkMhH5YUj6kUos
        QGyl4bzKJuhcbKsvprvxTwAG/87sXw6oejpU8lRrnUj/lUEOCDWoa/VIPclhnrH4iFl1FZI/
        Dpv9xfq/fUI9fXH5s1xZ3wQ+lyhXzCHmFXp8CxI4IPIMHo3VkTkDEJExwMoZl9Rh+p+ZfRh4
        TKtxUrkg8vdVws5Fq8R+/V/EAnc0RESGA7cQkm5kXDoC+LWIpIR761uUbcTiZLvM9gKxz4CV
        gw43JPYJEJtC3KiqkyPXdDux7ZSGiigiQ0RkeF8hO31auGX29VkRjVX1Xux4aBbjIn9PIZZz
        8SKNxzT8Mfni8u8lIvtlXaCqz2D+FlkU0f+OJejejZHLMnW4VQNweeTvvcCoyN8vGvgPIrKR
        iFyHHZOd2q/EQoavOuD6aSLyXPATWHKQ62O+F1kJVVPJ3f/+iMgmwJebaPf44HuQRWzdJXZ/
        LxDTweYMgIishkVTyeKKyN97gdggerD/f4jIFlhKp81I95fPYjnsW+/OQUKbPxK5twgDEOv/
        Q5G/70tz4ecXJf75FWu7DgYgpoNrBl0elKwXE/v1f0Z7PPutiMyPbSk1YprOHQ34N7SWb6ER
        K2Df0P3J3HYk/uudQkyJYjK0Epc/du+zkb/n2VXpSoIOPhO5rKEuZw3U2DaK//oPGIAisgzm
        NFMWmwz47+cj17c0AwjuyVnJX95U1Tcz7p8PWKsFEVo1AHWYAUBcFxvq8qAGQEQWJ75oUwcD
        EFvcGvj8yk7wMfA4cWym0ao8efs/2P2tyBA7Pl12/7uFmC5+OOj0XDR6gJtiwRoaMYPs2AC9
        Qmx6O7K/N5ta6rIHSpTnugH/HZvipuRRbIiqvkZ2GrYFRGThjPtnAPe1IMLdkb/HPnFa6n8X
        cTXZh4OEBp6TjQzAhEiDt6rq63G5uhtVnYb5lTdiGBZ7sD+fwSL6FM1DwC8G/FvMs7AIBYjV
        EZMhpsSt3Bv7xKmFAQi6eGvksgmD/WOzBqAO0/8+Yt+ZczjbqOqtWKy5C7Fv9Hf6lZhh0AHX
        TwMmYacxN1TVqQOuj+3SxGRPIVZHTIZTyP51asRLxJ3MYo5ORfS/W4jp5ITB/nEuAxC+FTK9
        h6jH/n8fsUE011aVqt6vqjur6nKqOryvALFkqY/0v15V51fVNVT1a6r6RkrbOWVPIXf/+6Oq
        dwE/baLdQ8MnVRYxL8U6GYCYTo4ZbB1gsBnAZmR//7+AncOuCzFPq9ggLAURWRd4f+Sy/Mki
        89exQ8jCm8XROWX5jaqel3WBiKxI/IeqiP53C/diutkIwXR7DgYzABMiDV2l4SRCTcj0dAPe
        LyJbtUWSOYmFfn5YVScV0M6FxH3uM8PFqeq7WGqrI8n+DHoV2EtVD02QK9b/57EALbUg6ORV
        kcsmDPyHZgzAzWki9QbB0eKJyGU/TTzbHjOcSYZVRD6ABdzMIuV4chS10GYxn/sfxWLyqepM
        Vf0JFhL8u9gZiqcxb8azsbRuH1LVP8dkEpFliYcnu6hmP1QQ180Jc/3LgOOFSxCP9z5oOuxe
        LsRDoimwZ0I9C0eeb1JkZeDPCfJsVGD/v53QXtIx3oLk+U2CPB+vetxUME7XjjyTWcASc9wz
        oIJY5t8pwJCqO1rBg10vYcC9BKyQUNddGXV8J+H+/RJkeZhiQ4KtQDzd9xRgzTa8i50iRlQx
        19hcOfJ6oWAz+liexjkyCA/8BJhANndo/Ohnz6GqdwPnRi5bErgwpCHL4gsM/h18P5bLviEi
        shGWmjzGkRpGRBGo6pPAbyOXLQRc3ODUYiGEs+1/JHuRGuB7mpiEpJcIunlH5LIJ/f9joAFY
        P3LzLTll6iWOJL6fPQY4P+IddzvmZj0Rc1SZBPwS2FjN8WhQQny3C8j2zQe4TSMr6E1yNJal
        KIsVgUtC9ppCCcFNLgEWjFz6IHBa0e13ETEdnVPH+00fhPj0YZuqpzkVT7FOjDyfvvIAsFKB
        7e5Feobj8SX2/7uJMjxFgWtFwA4JY7Ov7FD1OKl4jG4TeT5T6Pd52P/GD0RunAUsWnUHK364
        S2PnA1IG4itY3Lqm49Jhvv6/S2xPgT+V3P8R2Kp9iixvYseXmw7PjX1WHU96CvJLqx4jVRcs
        jkJsjeS98O39b9w1ctMDVXeuEwqWsDP111iDwuwFLJCjjdHAMcBbOdq5K08bLfR/NeC1HHI9
        DRwMLJSjjWWxhKKv52hnErBI1eOjEwo2A816Vrv2Xdt/7zbmplrn7//3UNXbReQg4E+Jt6yC
        pcWeKiJXYd+xj2Ir1c9h3/SjsZNt62GehesRX+jqz3+AnVT17Rz3NIWqPiwin8RcT2MegGB9
        Oxk4UUSuwYJ5PoS56T6LZfgZFco6WP/Hki+oyqvY1L/nD6glcguwRsbf1wZsnaif1biIbKtx
        YNWWrZMK9gud+utUZnkbS0Ta7v4f1gF9V2xHZfOqx0MnFeDAyDO7qO/a/lY2NgNo5Vhnz6Gq
        3wGOwh5oVbwAbKmqMU+9wlHVE4DPEk/QUSavAduq6t8qlKETienqe7ouqoqILEb2uXcFRujc
        x1Frj4jshO1Nx7aniuYebNofiwdXKiKyGeYjUdr+fwMewab9scCotSPEsnyL7M/IxVX1tb4Z
        QOzX/9+u/IOjlhJsY+LnBYrk/7DtvkqVH0BVrwc2pLXIP3m5Ehjryj84QVf/HblsbZi90BIz
        ALHwy7VGVe/HglN8CygzUcr9mI/7ntqGBb9UVPVfmIPJYZhLdFk8CnxSVT+mvZ+QplViOusG
        oEhUdaqq/gzzp/glFtGnKJ7BcgOso6odGY1JVd9qH3dcAAAL8UlEQVRV1ROx/h+DLU4WxQuY
        C/UaqnpOgfX2MrkMwAotVuYEVPVVVT0ce6aHAn+luRiBLwGnYodfVlbV07QLzmGo6huq+l0s
        WMnB2LZnVmDRRkzGtlp3x7wqT1ILMuqkEdPZFWD2IuAjZMez31xVrytIsNoRzgZ8HPtWHont
        eY8MZRq2H/5c+N+nscAOt3SDwqcQDkhtg+Xq69//UdguQl//n8P6fx1wnSt884jIBCBrd+RR
        VV21zwC8BSyQcfFIVY2FyHYcp0MQkeXIjor8tqqOECz1VdYW4Ouqumih0jmOUzoiMhlYJOOS
        xYcQj63+cHEiOY7TRmK6OzrFADxdkDCO47SXmO6OHkrcAAzMfusMIAQE3QzYDVgdW1BdnnwH
        epzG9J0qfBRb3T4XuF6D47vTkJjuJhmAlwsSpucILtRfwPboV6pYnF5GgPeFsiX2zJ8QkVOB
        E9VyGDpzE9Pd0UOIJ1j0GcAgiMhu2Bn0H+LKXwUrYc9+UngXztzEdHdUyhqAzwD6ISIjRWQi
        cA6wTNXyOCwDnCMiE0VkZNXCdBhJM4BYAEc3AAERORgLOllJOjAnk52BB8M7coyY7i49BMjM
        6IJ/AiAiHxCRa7HINln7qk61LAKcLCLXhuxJdSemu0OHEA/rVOsZgIh8DTuFt3nVsjjJbA7c
        H95dnYnp7jxDiMdeq+UMQESGi8hZwC+A+auWx8nN/MAvROQsERletTAVEdPdIUOJG4AqQz5V
        gogsgyXhGJfz1ilYwo8/Y3n+/DBLAYTEo1sBe2Lp6xomXhmEvYAVRWRnVc1Kn92LxHR3iACP
        YWe4G7F4nfZZRWQtLHLt+3PcNg34CfBzzcju47RO+DU/AktYmueX/SkshNj9pQjWgSSE+ns8
        5RNgvuJE6mxEZDssxXIe5b8MS4p5tCt/+ajqNFU9GlgTe/apvB+4ObzjuhDT3SFuAAIi8hUs
        NPpCibe8BeyrqtupajvjATqAqj6hqtsB+2LvIoWFgIvCu64DSQYgtgvQ0wZARIaKyG+A40hP
        RvFPYH1V/WN5kjkphHewPvZOUhgCHCcivwlrC71MTHeTdgF61gCIyKLAFVh8+1ROxSLSepi0
        DiG8i7HYu0nls8AVYQz0KkkzgFjYqZ40ACKyInAbdrgkhanAp1X1wE6KyOsYqvq2qh4IfBp7
        VylsCdwWxkIvEtPdWUOwiLOtVNJ1iMiawE1YossUXgK2UNXTy5PKKYLwjrYgPTz5asBNYUz0
        GjHdfWYI8GTkomWLkaUzEJGxwA1YUMoUHgbGqept5UnlFEl4V+NIj2Y1ErghjI1eIqa7Tw7B
        9kezWLUgYSpHRLYErgYWT7zlRmBjX+XvPsI72xh7hyksDlwdxkivENPdp1JmAD1hAERkF+BS
        0nP4nQ1srapZjhROBxPe3dbYu0xhQeDSMFZ6gZjuJs0AUr+TOxYROQA7vz8s8ZYfA/uoapHZ
        fZwKCO9wH+ydpjAMiy9wQHlStQ2fAYjIV4E/EPd3AJgBHKyqR3m8ud5BjaOwTEUp5zPmAf4Q
        xk43E/vxflKwhCAxT6qFVPXNYmRqHyLyQ+A7iZdPAXZX1StLFMmpGBH5KDYbTD1QdExIddZV
        iMiCwBuRy0YMCXvasS2TrpoFiHEC6cr/PJZu25W/xwnveDz2zlP4joicECI/dxMxnX1JVd/u
        8wJ8MnLxRq3L0x6Ce+eZWOTYFJ7ClL+d+e2dCgnvejzx9a8+vgCc2WWuwzGdfRJmuwHfELm4
        K1ZFw1HRidiiTwoPA5uo6mPlSeV0IuGdb0K6r8A+wMQuCi4S09kbYLYBuChy8WbhbHHHIiKL
        AFcC2yfeci+wqarGPCGdHiW8+02xsZDC9sCVYax1LEFXN4tcdhHMNgA3kx0+aCiwQ+uilYOI
        LItZtPGJt9yCpTx/sTypnG4gjIHNsTGRwnjMa7CTPWR3IDvY7yuYzpsBUNWZmJNMFh35GSAi
        K2Mvb0ziLVcBH1XVyeVJ5XQTYSx8FBsbKYwBbgljrxOJ6eqlQefnOAp8YeSmj4nIAi2JVTAi
        si52qCf1NNcFWFio1AASTk0IY2IHbIyksCJ2iGjd8qTKT9DRj0Uue0/X+xuAK4Esz7f5SV9c
        Kx0R2Ry4jvTsPGcCu7l3n9OIMDZ2w8ZKCssA14Wx2CnsQ3YU63cwXQf6GYDg6HNtpPIfdMIs
        QEQ+AVxOujPHicD+fdMex2lEGCP7Y2MmhYWBy8OYrJSgmz+IXHZtf6e+gdGAYp8BywGHNyFb
        YYjIIeTz6/+Rqh7mrr1OKsF1+DDgR4m39J0fOKREsVI4HNPRLObQcemvFyKyNPAEMCKjgjeB
        lauIsS4iRwHH5Ljl66r6i7LkcXofETkcODbHLd9R1VTDURghl8VjZJ92fQtYqf/u1xwzgPCH
        WGcXBL7fnJjNEVx7jydd+Wdih3pc+Z2WCGPoYGxMpXCMiBxfgevw94kfdT924Na3DJwZh0ME
        j5G9uDYDC5RxZ3458yEi8wKnYxleUpgO7K2q55UnlVM3RGRX4CzSQ+Sdja07lZ5ZS0Q2wLbC
        s/b+X8Bm7nMc6psrInC44HuRNocCl5SdgVVERmBZelKV/y1sm8+V3ymUMKZ2ID0HwV7AxWEM
        l0bQwUuIZ/n+3mAneueaAYRK58Ey4n4wUunj2EygcI86EVkCc05KjdP2GrCdqt5atCyO04eI
        bISNy1TX+NuxcVl4kt2wZncL2an9ACYBaw22CzZoToBw4bcSZPgAFkIpNcxWEiKyPObgk6r8
        zwMTXPmdsgljbALpx4nHYg5DyxcpR9C5S4krP8C3Gm2BN0wKoqoXET8lCJaV5dyipjoiMgaz
        aqsn3vIkdqLPj/M6bSGMtU2IH6PvY3XMdTjVXT2ToGvnYroX44agy4MSywp0KJDiM/8x4D4R
        mZBwbUNE5HPYlGl04i0PYsr/eCvtOk5ewpjbBBuDKYwGbg9jvGmCjt1H3N0XTHcPzbxCVTML
        1sm3AU0oszAPqgVj9Q5oYxHMuSeljb7yN2CxPO148VJ0wdYC/pZz7J4DLJKznQWDbs1KbONt
        7Mcxu97ExrcH3s3RwX8BWyXWPTZcn+cBngrMW/XL9+JFVQHmDWMyzxj+F5ZjMqX+rXLqyLvA
        9kl15+jkfjmsT1+5BzhssF9qQIBvYPv2qfXNAo6q+oV78TJYAY7KqSPTgw7IIHUtFnTnnpw6
        NwvYL1nmnB08PKcwfWUaIdEGtl+5K3BnzjqmAntU/ZK9eMkqwB5hrOYZ23cGnRjK7EQm05rU
        tcPzyDuoH0AWIvJj4Nu5bpqTqWQfVxyMl4Cd1Lf5nC4g+ApcCCyV89ZmdKM/P1HVI/PckNsA
        wHvHcU8i/Sx+K0zCHCn+1Ya2HKcQQsrxS4k70xXBC8DnVfX8vDfGtgEHJTS0Juk515rlcszT
        0JXf6SrCmN0YG8NlcjawZjPKD00aAABVfUVV9wY+gVmgInkdO823rXrsPqdLUdXJqrotdprw
        9YKrfwH4hKrurS24GTf1CTBXJea3/ytg75Yrs2nTZ1X12QLqcpyOQERGAb8FtiugurOAL7Wi
        +H0UYgDeq0xkPeBA7CRU3jwCrwFfUdUzChPIcToMEdkP+B+a04+zgVNU9e7C5CnSALxXqcgw
        YGfgAGxbI+tTYxZwHmbRUg9YOE7XEnIK/Arb+ovpxlWYk9EFWkJA21IMwBwN2NRnPyzQ4qqY
        A9BU4BEsjdcpqvp0qUI4TgcSTggeiMXxXxXbAlRMN04Hzij7U7h0AzBHYzYzWBR4UdvZsON0
        OCGE2NLA5DJ+6Ru263roOPWl6W1Ax3G6HzcAjlNj3AA4To1xA+A4NcYNgOPUGDcAjlNj3AA4
        To1xA+A4NcYNgOPUGDcAjlNj3AA4To1xA+A4NcYNgOPUGDcAjlNj3AA4To1xA+A4NcYNgOPU
        GDcAjlNj3AA4To1xA+A4NcYNgOPUGDcAjlNj3AA4To1xA+A4NcYNgOPUGDcAjlNj3AA4To1x
        A+A4NcYNgOPUGDcAjlNj3AA4To1xA+A4NcYNgOPUGDcAjlNj3AA4To1xA+A4NcYNgOPUGDcA
        jlNj3AA4To1xA+A4Neb/ATDwfqQBHLONAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/gas.png'>
        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
      </shape>
      <shape name='Icons/gender.png'>
        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
        AABJRU5ErkJggg==
      </shape>
      <shape name='Icons/geometric18.png'>
        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
        GP8PeuKJ2/ex19wAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/geometry100.png'>
        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
      </shape>
      <shape name='Icons/geometry97.png'>
        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
      </shape>
      <shape name='Icons/geometry99.png'>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAAAnDAAAJwwEHh4Bv
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAY1JREFUeJzt1cFNA0EQ
        RcEeRDTOwfkQEvlsDk5nSGEX2VjiVZ3/oQ9P6jUze8j6ePcBvJcA4gQQJ4A4AcQJIE4AcQKI
        E0Dc54XtY2aOVx3CU91n5nZmeCWAY+/99bt7+Etrre85GYAXECeAOAHECSBOAHECiBNAnADi
        BBAngDgBxAkgTgBxAogTQJwA4gQQJ4A4AcQJIE4AcQKIE0CcAOIEECeAOAHECSBOAHECiBNA
        nADiBBAngDgBxAkgTgBxAogTQJwA4gQQJ4A4AcQJIE4AcQKIE0CcAOIEECeAOAHECSBOAHEC
        iBNAnADiBBAngDgBxAkgTgBxAogTQJwA4gQQJ4A4AcQJIE4AcQKIE0CcAOIEECeAOAHECSBO
        AHECiBNAnADiBBAngDgBxAkgTgBxAogTQJwA4gQQJ4A4AcQJIE4AcQKIE0CcAOIEECeAOAHE
        CSBOAHECiBNAnADiBBC3Zmaf3D5m5njhLTzPfWZuZ4ZXAuAf8gLiBBAngDgBxAkgTgBxAogT
        QJwA4n4AR9MM7Of4GtsAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/groceries.png'>
        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
        /wcni1gLBiY+RQAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/gym16.png'>
        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
      </shape>
      <shape name='Icons/haircut.png'>
        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
      </shape>
      <shape name='Icons/handgesture10.png'>
        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
      </shape>
      <shape name='Icons/heavy box yellow circle.png'>
        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
      </shape>
      <shape name='Icons/heavy box.png'>
        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
        QmCC
      </shape>
      <shape name='Icons/help15.png'>
        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
      </shape>
      <shape name='Icons/hit head yellow circle.png'>
        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
      </shape>
      <shape name='Icons/hit head.png'>
        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
        YII=
      </shape>
      <shape name='Icons/home2.png'>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAsTAAALEwEAmpwY
        AAABG0lEQVRYhe2U3bGCMBBGv8QUYjq4JTBAIVoZWMJ9JwxWgiVYwA7rk06MgPlBHGf43kIS
        zplNNsAvJ8/zQ1EUVco/dilwKWUlhPjTWu/7vv9fTeAOv49TJIIFXHiqRJDAFDxFwlvgHTxW
        wkvAFx4j8VYgFB4qMSsQCw+RkAnwMxFpItIAzjMSs4+ViISDiHTXdRcAyLJsr5Tq59Yzc22M
        ObrfXyoQUParx5pHpirxVIHAM++I6AgASqkKQOazya3EQyD1woXEltitDQeeu0OsDbfDzPVo
        GzLzaWnYMAwvHQBAyLZta3uSmU/GmMPSAlMcaU9+Cu5K2JzRhwgAyrLkJeFN04yyJp/itbIJ
        qNiN7pnG3pmvV2AT2AS23ACcXbHmVW7/7QAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/hot51.png'>
        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
      </shape>
      <shape name='Icons/house283.png'>
        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
      </shape>
      <shape name='Icons/house34.png'>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAAAN2AAADdgF91YLM
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAr1JREFUeJzt3dtqWzEU
        RVGp5L+tfrnycgS5OIltXfZlzQkb8lRM1uhpIcapvfdCuv2zfgFkGwDEA4B4ABAPAOIBQDwA
        iAcA8QAgnjSAWmurtTbr12HZm/ULsOoa/nZ9XXrvzfQFGSX5BPg4/tVN9UkgB+DO+CNJBFXp
        p4G/jP+x/yv/Oai1Tn2De+911Wu5l8wT4MHxSxF7EkgAeGL8kQyC9ABeGH8kgSA1gInxR+kR
        pAWwYPxRagQpASwcf5QWQToAG8YfpUSQCsDG8UfpEKQBcGD8USoEKQAcHH+UBkF4AAbjj1Ig
        CA3AcPxReARhATgYfxQaQUgAjsYfhUUQDoDD8UchEYQC4Hj8UTgEYQAEGH8UC0Hv3f2VUlop
        pQe7dr32qT9n9/fW/buCA/3N/9qt1q3v5lqS6/cEBh5/WbLvCWT8M7kEwPjncgeA8c/mCgDj
        n88NAMa3yQUAxrfLHADj22YKgPHtMwPA+D4yAcD4fjoOgPF9dRQA4/vrGADG99kRAIzvt+0A
        GN93WwEw/nzb317G27hCXNu2E+OHuS0IGD/WLUfA+PFuKQLGj3nLEDB+3FuCgPFj3zQCxo9/
        UwgYP8e9jIDx89xLCBg/1z2NgPHz3VMIGD/nPYyA8fPeQwgYP/f9iYDx89+vCBhf435EwPg6
        dxcB42vdNwSMr3ftLgDGl7r2CQDjS167tmd84Wv1+oJEM/+EELINAOIBQLzpzwqutfJ/CMP6
        5GcJ8wQQDwDiAUA8AIgHAPEAIB4AxAOAeAAQDwDiAUA8AIgHAPEAIB4AxHP/y6Nnm/15efb3
        O/AEEA8A4gFAPACIBwDxACAeAMQDgHgAEA8A4gFAPACIBwDxACAeAMQDgHgAEA8A4gFAPACI
        BwDxACAeAMSb/pxAih1PAPEAIB4AxAOAeAAQDwDiAUA8AIgHAPHeAZzKtGRFkQLDAAAAAElF
        TkSuQmCC
      </shape>
      <shape name='Icons/hugging.png'>
        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
        uL9o6D9CD/wPfrLCzNxPY5gAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/ice cream.png'>
        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
        FnLUiD3/H+b+PugyY1duAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/icecreams9.png'>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAOsAAADrAG1p5AQ
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAfdJREFUWIW91z1rFUEU
        BuBnouJHIypRbhUjSSdqkcJC/4OVP0BsLS0s/AfBztIqJIhiYSXYpQlKGkVSJIgGLERIgsYP
        MEaOxd3IEnZzZ/ZGD5xiZ95955z3nJmdFRG6OK5hDcu4i7FOPEMEcAwbiMrXuwQxorvdwIna
        80ncKmbpmP1MLfO6L/wvBVax1TA+lVLqlRClKqM8cErT+s23gtfo4SrO1WCvcCUivmeRFsh+
        WbPsK/q7oT52P5f3YHb6HGkZn2wYm8pmLVBgBHfwTbMSdf+MkRzegT2QUhrHrP42+4qXOIpL
        uIgDLa/ejIgHQyuAuZYsP2Aei9hsmN/GhaFPQrzLkLzN5/fjHPidgWmziUGAnAA2hwjg/SBA
        ThOewW2c174Vd9sXLGE6IjaGCqAWyCSuM/Ds2MLDiBiYPYrOgSfym2/2X3yM3hRgl7KRBQpM
        NGTa5mf3XYGIeIsXGdCFiFjN5S29D8xkYGZLCEvvA6fwEYdaINvoRcRaLmeRAhGxjmd7QJ6X
        LF4cQGV7lWGulKyoBJBSOoxPOL5r6gdOZ1/FKitWICJ+4nHD1NPSxTsFUFlTGYq6f8eKSwAp
        paT/pRurhtb1u/9XKVcnBaIfdT3jR10W7xxAZfUyFHf/jnUqwd+XU1rEKMajI1HJf0GT3cNo
        18XhD8CFDCad7mMUAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/info-1.png'>
        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
      </shape>
      <shape name='Icons/info-2.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAfwAAAH8AEro8YL
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAA9lJREFUeJztm9+LlUUc
        xj+PuyCZ2S5rKy7FisVCteS2sRWEUCirN17oVUQ/vJBupAIv7H/QSxGvBKkuBFGiAg1aDCK6
        EBV/54Y/KmpzaUWztoJdv168Rz2+257dM+c7M6dlHxjOxXmfmWee9zvvzDvvd2RmNAMkdQHv
        An3AKqANOA2cAg6Z2ddRGjazrAVYAGwFbgJWo3wEPObdvnJHgKSDwKZZXj4K9JvZL17tL/Cq
        KASS3mP2nQfoBD6W5Kc7Y+j3AP9QO+ynKx946cgZAeuBhYHcDV4ichrwYgPcfi8ROQ3oaYDb
        LqnDQ0ROAy40wB0zszEPETkNONYA94SXiJwGHAb+DuR+6iUimwFmdgl4P4B6BNjjpaMZVoL7
        gHdmeflPwICZjXq1n3UlCGBmm4E3KZa50+E2sAvo9ew8NEEE3IWkduBt4DmgF3gUOAecAT4z
        M7cH3wPtNosBuZB9COTGvAG5BeTGvAG5BeRGa+oGJQlYATwN3AIuASOWaTqKPg1KehZYRzG3
        9wLPAA+XLhsHLgOHgJ1m9mdUUdWItN21HNgGnKT+7a4Riu3xliRbc46dfgh4C/gSmAjoeLns
        /r8ZsMWh0+WyMbYBnrPAase67mKvpGUR6r0Hz1lgNcU293cU213DQAvwOLCG4iWnXrQDrwH7
        nTROhVP4LwTeAB6pcc2HhA2DHTGHQLK3QUmtwBWKiKgHQ2a2NoIkIOFK0MwmgLMB1KXeWqqR
        ein8WwDnuruKKqQ2IOSJPqcMeCKAM+yuogrJDKg8BFcGUE95a6lGyghYBSwK4M0ZA14J4PwB
        /OAtpBopDQhZKg+Z2aS7kiokMUBSC8VyuF4c8dZSRqoIeIliXV8vDnsLKSOVAesDOOfN7Gd3
        JSU0swHR7z4kMEDSUuCFAGr08Q9pImAwoJ2/gG8iaJmCFAaEhP9RM/vXXcl/IKoBlW8A6wKo
        ScY/xI+Afor01nqRZPxDfANCwn/YzC67K5kGzWjAV+4qaiCaAZIWAS8HUL/11lILMSOgj7Bt
        9zljQEhC86iZ/eiupAZiGvB8AOeqt4iZENOArgBO9JefMmIaEJLOPu6uYgbENGBJAKfbXcUM
        iGnA9wGcfkn1fjprCDENCDkPsBg4IGmg/IekdkkbJH0i6anG5VXqjfVxVNIgRbZIKEaAXyme
        Cz3c/6p0A+gws9uNKawgWupJkRtwFP+skS+aNUOkbOwkRc7ANcdqJ4HPHeuLf3ASeBX4ncbu
        +jlgO9Dlri+2ARUT2oAd1HdS9Dqwm+KESDRtSc8LSOoGXgeerCqdFJkjFytluPJ73BJsi90B
        tQYXQqz2G0QAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/info.png'>
        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
      </shape>
      <shape name='Icons/injured thumb.png'>
        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
      </shape>
      <shape name='Icons/internet.png'>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAACXBIWXMAAD0XAAA9FwEUMhJA
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAIABJREFUeJztnXfYXVWV
        uN8V0kgH0iB0CDVEygAiA6GLdBhFcZQmJQIyMqjMzxmdcUR8pCi9gxEQMAIqEUuE0FR0QidI
        780QIkkIpGf9/lg7yZcv33fPOveefs/7POf5jOyz99p7r7XuPrusLapKTbkRkd7AMGB4h79d
        /e9hwABgdaAP0DNksRhYAMwD5gLvAe+GZ0Z3/1tVF6Zfu5o0kdoBlINg5FsB24ZnLLAuZtyD
        cxJrNuYM3gaeBB4Pz9OquiAnmWpiUDuAAiIiawIfY4WxbwtsCfTKU64YLAKeZYVDeBx4XFX/
        katUNatQO4CcEZFewD8De7DC2NfPU6YUeQNzBo8B9wF/VNVFuUrU5tQOIAdEZARwQHj2Awbl
        K1FuzAEmA78BfqOq03OWp+2oHUAGiIgAO2IGfyCwAyC5ClU8FHgEuAtzCFO1Vs7UqR1ASojI
        YOzX/UDgU9hkXY2fd4HfYg5hsqrOzlmeSlI7gAQRkR6Y0Y/HDL9n4zdqnCzGHMGVmDNYmrM8
        laF2AAkgIsOB44GTgI1yFqfqvAJcDVyvqu/mLUzZqR1AC4jIHtiv/eFA7xxEUGwDT98cygaY
        j20oymM+YyHwC+BKVb0vh/IrQe0AYiIiawDHACcDW2RY9HRgGvBU+DsNM75fAUMylKMjs4BD
        MSc0JjzbhL8jMpTjWeAq4Ceq+n6G5Zae2gE4EZF/Ak4DjsS20qbJW8AUYCrB2FV1Rid5xmBr
        6WvFyHc20bsGPWk6MhPYQ1WndZJvGCucwo7AXsCoGPk2wzxgInCpqj6cclmVoHYAEYjIWOBs
        4OAUi3kPM+YpwBRVfS5Cps2AB4j3K3tnyP/CiHRfxYz1kBh5Twd2V9XnGyUSkc1D3nthG5+G
        xigjLpOA/1LVJ1Mso/yoav108QCbAbcAS7Fv7SSfOcCvgTOwLb8SQ66NsB11ccqbiG0jHu9I
        Oz6knRizjDeAjWLUQ0LdzwhtMSeFdl4a+nCzvPWpqE/uAhTtwbbhXostPSWpjB8CtwKHAX2a
        lG1d4OWY5d4IrBbedzmAkHa18G6csl4G1m2ybn1C29wa2irJtl8c+nT9vPWraE/uAhTlwYbT
        F2Ez20kp3gJsku4ooH+L8o0EnotZ/jVAjw55uB1ASN8j5BGnzOeAkS3WtX9os1+FNkyqP+aH
        Ph6Rt74V5cldgLwfYA3gHOwcfFK/NpOxfQFDEpJxKDYZGEeOS+j0aRHXAYR3JOQVp+xpwNCE
        6j4ktOVkkhuVzQ19vkbe+pf3k7sAuVXcdumdBbyfkFLNDEo1KmE5hwCPxpTlvG7yiu0AOrx7
        XkwZHiUhB9hBhlGhjWcm1GfvBx3ombc+5mYHeQuQS6VhO+xIahJK9EwwrH4pyDkQeCimPN9t
        kF/TDiC8/92YsjwEDEyhXfqFujyTUB8+BmyXt17mYgt5C5BpZW2i6RwsYEWrSjMZO+TjnsGP
        KWs/4P6YMn0zIs+WHEDI45sxZbo/DecYZJHQB5MT6M9FQTeamqAt65O7AJlVFD6RwC/GfGw2
        eUzKsvZqQqn/3ZFvyw4g5PPvTTjLXim32ZjQN61O4j4DfCJvfc3MLvIWIPUK2ozyxcCSFpRi
        CXADsEFGMl8eQ7alwCnOfBNxACGvU4i3R+LyjNpug9BXrfb3xbS4clOGJ3cBUlaGfbHTY638
        ItwFjM1Q5uNjyndijLwTcwAhvxNjynp8hu04NvRdK33/CrBv3nqcajvlLUBKnT8EuK7Fzv8L
        MC5juXci3hD27Jj5J+oAQp5nx5B3PrBTxm06LvRlK7pwHQmvaBTlyV2AFDp8V+wwTbOd/Sxw
        RA5yjwDejCHnz4g5AZmSA5Agi1fuN8lhIw5wROjbZvXiLWDXvPU76acHFUJExgP3Aus08foH
        wOnYBN8diQoWQYgM/HP8p+X+ChyjQbPzJMhwDCaTh1HAz0OdMyP06Risjz9oIot1gHuDjlWG
        SjgAEekjItcCV9Bc7Py7gK1V9RJVXZysdC5+COzmTPsacIiqzk9RnlgEWQ7BZPOwG1bnTFHV
        xap6CbA11udx6QVcISLXikifZKXLh9I7ABEZhR2N/VITr88APq+qB6nqG8lK5kNEjsXiDHiY
        AxyoBQyFFWQ6EJPRw2mh7pmjqm+o6kHA5zEdiMuXgAeC7pWaUjsAEflnLJT0Tk28fiOwpare
        kqxUfkKQkSucyRcDR6rq0ymK1BJBtiMxWT1cEdogF0Lfb4npQlx2Ah4JOlhaSusARORULMBF
        3NBTrwH7q+rRqjozecl8hECid+CP53e6qv4+RZESIch4ujN5X+CO0Ba5oKozVfVoYH/8nzDL
        GAFMCbpYSkrnAML3/vXApcT/3r8G+9bP1ZBEpCcWcGM95ysXqqp3pJA7QdaoyEPLWA+YGNok
        N4JObI3pSBx6AZeKyPVlnBcolQMQkXWBB4HjYr76IfBFVT1JVT9MXrLYXICtT3uYBJyZoixp
        cSYmu4dxWJvkiqp+qKonAV/EdCYOxwEPBh0tDaVxACKyCfAnLMBkHJ4GdlTVm5KXKj4iciT+
        IfLjwFFawoswgsxHYXXwcHpom9wJurIjpjtx2BH4U9DVUlAKByAiW2Az/XFvzb0B23n2TPJS
        xSdEyr3Mmfxt4KCCjFiaIsh+EFYXD5eFNsqdoDM7YToUh/WxFYIsQ8Y3TeEdgIhsgx0pjbO5
        Zx7wJVU9RlU/SkeyprgUXyTcxcBhqvpWyvKkTqjDYfhWBoZibVQIVPUjVT0GW/abF+PVdYD7
        g+4WmkI7ABHZHtvZF2eW+DlgZ1W9Ph2pmkNEDseWyDx8V1WnpilPloS6fNeZ/MjQVoUh6NLO
        mG55GY7tHNw+HamSobAOQER2Bu4h3sUX92HG/1QqQjWJiKyJf71/KhaYomqcg9XNwxWhzQpD
        0KmdMR3zshZwT9DlQlJIByAiuwF/IN6VVxOx9f0iXiN9Eb79CvOw1Yo8tiOnSqjTF/ENpZdF
        aC4UQbf2x3TNyxDgD0GnC0fhHICI7IXdCz8wxmsXAp9T1QXpSNU8InIQ8AVn8rM04lagMhPq
        dpYz+RdC2xWKoGOfw7/PAUyXfxt0u1AUygGIyKewQxr9na8o8HVVPaMIJ+M6IyKDsTvtPdxN
        gSbAUuRSrK4ergxtWCjUOAP4OqaDHvoDdwUdLwyFcQChYX6Jf2vsQuALqnp+elK1zA/xHfGd
        BRxXRCeWNKGOx2F1jmIUOZwa9BJ07wuYLnroC/yySE6gEA5ARD6GfVf1dr4yBzhAVW9OT6rW
        EJH9sPBeHr6iqm+mKU+RCHX9ijP58aEtC0nQwQPwn4LsjW19/lh6UvnJ3QGEI5V3AQNivPYa
        8I90JGodERmIf0/57UXZpZgloc63O5NfE9q0qPyDeAeJBmCfA7kfJ87VAYjIAOxm2LgNsQ3w
        sIgUbrkocC6+XYt/B05OWZYiczLWBlGsj7VpoRCRNUXkCuBhTCfjMAr4dbCB3MjNAYjIathN
        sNs2mUUPLMbd8yJysojkPpoBEJE98Bv1CXkeSc6bUPcTnMlPDm2bOyLSQ0ROBp7HdLBZ3dsW
        uDXYQi7kaTQXYhFkWmUtbKZ9qojskkB+TSMigk1aiSP5taraTFiqShHa4FpHUgF+GNo4N4KO
        TcV0Ls4mte44kHhLiomSiwMQka/iD4PlZXvsJNYEERmZcN5ePovdOxjFK8AZKctSJs7A2iSK
        7bA2zhwRWVtEJmAnUpPe3ntasInMydwBiMghpHf2W7AItS+JyLkikoSH9hVsUW7PdiY/XVXn
        pilPmQht4T0ifXaWEYVFZC0RORd4EdOttEYgFwTbyJRMHYCI7ADc7CxXgZeaLKoftknjFRH5
        jogMajKfOJwEeM6B36eqv05bmLIR2uQ+R9JNsLZOFREZJCLfwUYmX8d0qhlewrdZqAdwc7CR
        7MjqAgJsf/fb+C9i+DbQE/gaFse9lZtdZmJbUNO6pbY/NpsdJcdSYIes2rwLORO/GCRh+XbA
        d9/g30np3j7M0M8KOtOKzn0QdLdn0GXve2+T4cUpWXZunHvafk6HW2+AdcP/10qHLFOc00n4
        CmjgW87yb8rLuIKchXYAQcabnG35rYTL7RN0w+PIPfq7boe8Jab+3pVZe2fUqafGqPzjdOPd
        gU8CLyTQQdOB/waGJVC3odgusKgy55PR7cINZC2DA9gA3/2Ic4ChCZQ3LOjC9AT06gXgk92U
        0z/otjevUzNp7ww6dEvgI2el3wXWj8ivDzakmpdAh83Dduxt1UL9LnSW9YM8DSvIWngHEOT8
        gbNNL2yhjK1C3yelR98mYmSJbWh615nnR9i9Fem2dcod2Rt4zFnhhcBuMfLeBNtF2GrnKfbd
        +Ttgv5j12xBY4Mj/PWBwAQyrLA5gcGizKFkXABvGzHs/7Li5Z67B8/wa2CRG+bsFXffk/RjQ
        O9W2Trkjz43RkO577juVsTu2NptEZyrwFDbLPMhR9g3OPE/P26iCvKVwAEHW051te4Mjr0Gh
        T59KUE/+BOzeZN1OjFHOuam2c4oduBd+L3tJAuUdBDyRYAd/hE1I7U0X13ADY4EljnxeAHrl
        bVBB5jI5gF745nuWAGO7eF9C392E/xPU8zyBRWtutX6XOMtbCuyVWjun1HlrAG84K3g/0DOh
        cgW78PHFBDtcgVeB7wAbdyjLu6rx6byNqYPMpXEAQd5PO9v4rg7vbBz66tWEdeDFoFur/Bg0
        WbeeQfc9Zb8BrJFKG6fUcROdFZtNCjPj2K/HeOCthJVgKRal+DvO9H/K24g6tUupHECQ2ft5
        953QN0l92y973grtlvgoDlvxmO2UY2Iq7ZtCpY6J0bjHpqw8qwP/RvK/Bt5nl7wNqFN7lNEB
        7JJT370adGf1lOt3bAyZjkm8/IQrMwwL9eSpzC8yVKKe2DVVj2SoQD/P23i6aIfSOYAgdxKb
        wLzPI0FXEvksddbvF07ZZpHA3pWOT9JnAb6HLeFEMZ0M9nMvQ1UXq+otqroDNjH0uwyKXSQi
        BxUxqGVZEJHBITLwogyK+x2wt6ruEHQly9DsJ2E2EcVgzMaSI0Evth2+WXEFDi7Ar8o2wAT8
        a7LNPkuwiDHnAwcDQ3Ksc6FHAFgM/YNDWz0cQ5+afRYGHdimAPp4cAx92i6xchOswAPOClyT
        d2N3knsU8D9kN0+wBBtmXgAcjs1aJzKz7KhrYRwAtmKzcWiDC0KbpG3wy55XQ5+Pylv/OrXJ
        NU75H0iqTAkFt4SIfA64xZH0FWzNtnBn4UNIsb2wSL6H4w9PngQfYJtUnsTWmZ8EnlLVD5Is
        RETGE31F2ZdV1XuXgbfcgdiIayzwsfB3G+Jd/tIq87Fv7euBKVrAK9dDfMAngY0cyY9S1Vtb
        LrNVByAi/YBngfUikiq2c+qPLRWYASKyBjYRdDx2RDUPFHOYTwEvY1FnXwNeB17TJmIJpukA
        QvCVDbD97huEZ2PM0DcivUAaUTyCGf0tqvp+TjK4EZF/xkbTUe31BrCFtnj7dc9WXg6cRbTx
        A0wog/EDBEW5HLhcRMZijuB0slXiZUPkjbv8jyIfEpxB+Pt3bE152TOr07/ddyaKSF9swqnj
        M6TTv0eywtjXx3+bUxYocDFwvao+mbcwcVDVP4bQY8dFJF0Ps73/bqW8lkYAIrIB8Ay23t6I
        ucBmqvpO04XlSLji+ZG85UiApURHY/KkKQM7qOqjeQvRDCKyNhZxOCpk+DzsxGCcOwlWotWO
        Po9o4wf4flmNP/CveQuQEJ7+roLxQ4n7LNjK9x1JV8dssGmaHgGIyDh8Mdxew75V5jdVUM6E
        mO1vAGtHJH0AmzjcAcgtznvFWbaCMh87BdqId4D1VHVJ6lKlQPgMexb7xIpiD1W9v6mCWliy
        eBjfksWReS+vtLg0s6+znpuF9IOwWO/nk+3SVhWfZQZ/fmjTQaGNN3O+v2/e+tOi7h3prOfD
        TZfRpGB7OwV7MO9GTKATfuKo518bvL8GcBhwEbbEk/RhlSo9S0MbXRTarNsTcMBfHfn9JG/9
        SUD/HnS23d7N5N/UJ4CI/B6LrNIIBXZU1dJOnoUlzulET8Z8RVUvdea5FrZrctsOzxa032fD
        EmyI+3iH5zF1Lm+KyGnYmfpGzMUi7La0VJYnIUz4VKJXoCar6idj5x/XAYRrjR93JJ2gqlFL
        GYVGRI7C7jFoxCJgHVV9r4Vy+gJjWNkpjCXbjTJp8gH2y97R2KdpC/NCIjIUC6EddUnI51XV
        s0mtsIjIj7FTg1Fsq6pPxMq7CQdwE9EzrPOwOGllnvlHRO7C7n5vxCRVTeVGFxEZwcobazo/
        Q9IotwlmsWKjUufndVX1HHSJjYjcie2hb8RvVDWJOyhzIywLvkT0ittPVfULsfKO4wBEZP0g
        SNQGostUNem7/zJFRIZhvzBRdf2sqk7MQKRVCFtsN8BWKDpv1Onq36OwI9uNmIEFwei8majz
        xqJZ2Ez7a5rwlmUvInIk8LOIZIuxEdqMDERKDRG5FAuv34jF2A/v6+6MY05I/IjoyYjFdAid
        VdYHu7w0qq6zgL55yxqjToU5DJRQffriiz9xWt6yJlDXjYNtRdX1R3HydW/6CPvjPXe536aq
        L3vzLTCeodRtWtL9DVUgtP1tjqSxhsVFJNiUp64nBFt1EWfX1ylEz4ZDizuTioCIjAZ2diS9
        MW1ZaiLx9MHOoU/Ljse2BmC26sLlAMIs9VccSe/REi/7dcCzjfR1bPdfTb48gPVFFKXdGryM
        YFv3OJJ+JdhsJN4RwNHY7b5RnOvMr+h83pHmJg0fZzX5EfrgJkdST5+WAY+NjcBsNhKvA4ia
        fQR4XFUnO/MrLCKyMeAZLnqUriYbPH0xOvRtqQk25tmH47HZaAcgImOwTSlRlP7bP7CXI82j
        qvpM6pLUuAh94Tn66+nbMuCxtbHBdhviGQF4hk6vYZeBVIG9HWl+k7oUNXHx9Imnb8vARMzm
        ooi03YYOQEQEC40VxfWabRjlNNnTkebu1KWoiYunTzx9W3iCrV3vSHpUsOFuiRoB7IJdgR3F
        Tx1pCk8YMkVNdn4EPJSBODXxeAjrm0aM8AyLS4LH5jbEbLhbohyAZ+nkIVV9yZGuDHi+ER9U
        1YWpS1ITi9AnDzqSVmIeINic54eooQ136wBEpCfwGUcBVZoN93wjetZha/LB0zdVmQcAn+19
        JthylzQaAexL9MGRRVRk8i+E/hrnSFp//xcXT9+MC31dBSYSfW3aMMyWu6SRA/AM/3+nLZyD
        Lxg7EH2v4Ux8a7A1+fA41keNGEx+dz0kSrA9zz2X3dpylw4gRMI51JFxlYb/nm/DKfXuv+IS
        +maKI2kl5gECHhs8NNj0KnQ3AjiE6IM/c4BJjsLLQv39Xw3abR5gEmaLjRiA2fQqdOcAjnQU
        fLuqznOkKzwi0gfY1ZG0/v4vPp4+2jX0eekJNni7I2mXNr2KAwiXZO7hyLDUcdY6sQvR4ZZe
        rdByZ2UJffRqRLLViVgfLxkeW9wj2PZKdDUC2AYLZd2IeVTrKKznm7Ae/pcHT19VaR7gAcwm
        G7EGZtsr0ZUD8CyF/VFVFzjSlYUdHWnq4X958PSVp89LQbBFz8W7q9h2sw6gar+GWzrSVGnE
        U3U8feXp8zLhscnGDiAcHIi6cw0q9GsoIv2x0NuNeF9V385CnprWCX31fkSy9UPfVwWPTe7e
        +XBQ5xHAVsDQiEz+ATwWQ7CiswXRt678LQtBahLl6Yj/LljfV4XHMNtsxFDMxpfT2QF4hv/3
        qurSGIIVHc9QsHYA5SPKAUCFPgOCTd7rSLqSjTfjAKr2/b9VdBKXMtUUC0+fefq+TMSeB2jG
        AVTm+z9QjwCqSVuNAAKuw1Ad/7HcAYjI5kQHw3hdVV9oQrAi4/kVqB1A+Wi7EUCwzagQ6SOC
        rQMrjwBc3//NCFZURKQ3duVSI2ar6ltZyFOTHGoXkkadDNw46ECViDUP0NEBeLZGVu0o7Gii
        L/+sf/3LS9QooCe+EPBlwmOjy229owPYzPHiU7HFKTb1BGC1abvPAHw2utzW4zqAabHFKTb1
        BGC1aceJQI+NruwARGQI0RuA3gvfVVWingCsNm03Agg2GhWla2iw+eUjAM93UNV+/cHn/etP
        gPLSjiMA8NnqaFjhANpu+B/2REfVe46qvpmFPDXJo6ozgBkRyTaLujyjhLg/A9p5BDAYiLpC
        +cUsBKlJlah9K32JDgZbNuoRgIO1HGmqEvG4nYnaCwA+XSgT9QjAwZqONB7lqSk2nj706EKZ
        iD0CiHIAb6rq7JZEKh4er187gPITdUQWKjYCCLYaNXdlDkBEhhP9DeS5irhs1A6gPWjHTwCI
        ttnBIjK8B77hf9RMahmpPwHaA88IoGqfAOCz2dE9iD4M482sbNQjgPagXUcAHpvduAcwJKHM
        ykbtANqDtpsDCHhsdkgPoq8A82ZWNmoH0B7UI4DuGdADGJhQZmWjngNoD+o5gO4Z2M4OoN4I
        1B7UI4DuqR1AAxap6geZSFKTGqr6IbAwIlntABLIrGxEDfvq4X91iOrLtv4EaLtJQBHpSfTm
        p9oBVIeoeYDBQSeqhGsSsCfRI4BFwHEVOzHZz5FmdREZn7ok2bKbJ03F+hqir34HOF1EPkpd
        kmxZBPRq8N8HChZDbEw28tTU1BSIad45gJqamurhngOoqampHgMEWABU7XKEmpqaaBb2IPpq
        7JqammoiPYC5eUtRU1OTC3NrB1BT077UDqCmpo2Z25NoB7AIOD0DYbKkP3B+RJqXgfMykCVL
        dgM+H5HmZuDBDGTJkq8THfjma8CHGciSJRfTeCPQXAGmAHtGZNRHVaMOVJQGEelF9AGRaaq6
        TRbyZEXY2XhFRLIvq+qVWciTFSLi2ezWW1UXZSFPFoRrzxdEJLvX+wkQdW9gqQgdHXXSr4on
        xNqVqL78oErGH/DYrHsOYFiLwhSRqAMiVTwh1q5E9aUnaEjZ8Nis2wFUagQQeD/iv/cREc+h
        oZoCE/qwT0SyKF0oI/UIIIJ2DRXVbnj6sB4BRFDFEUDtANqDdnUA9QgggtoBtAft6gDcI4B3
        HQnrEUBNWWlXB+Cx2Xd7AC86ElZxBOCZ+KmXAsuPpw+rOAnosdkXvQ5geIvCFJF6BNAetOsI
        wGOzL/ZQ1b8TPQ+weQICFY3aAbQH7eoAomx2rqr+vUf4R9QoYKSIrJGAUEWidgDtQds5gGCr
        IyOSvQjgdQAAW7YiVAHxfPdVcfKz3fD0YdXmADy2GtsBbNW0OMVkuiPNJqlLUZM2mzrSeHSh
        THhstb0dQJj7mBORbLSI9IhIU1NQQt+Njkg2J+hClagdgJPnIv57X2CDLASpSYWNiD4HEKUD
        ZaR2AE6edaTZInUpatLC03ceHSgbsR3A28C8iBfWE5GqXSLi6fwqLoG2C23nAIKNrheRbB5m
        8+YAVFVpz5WAegRQbTz6WikHgHMFINg8HSe4pjperNodgrUDqDZtNwLAZ6PLbb2jA/AEghwX
        W5xi8yKwJCJN/QlQXqIcwBJ8I98y4bHR5bYe1wFEBQ8tFSHQ6SsRyUaKyOAs5KlJDhEZSvRB
        oFeqFOw24LHRVR2Aqr4EvBPx4noiUrXNMfVEYDVpu+F/sM2oCcB3gq0DK48AoA1HAdTzAFWl
        HScAY/36w6oO4IGECikT9QigmrTdCACfba5k482MAPbwSlMSPEpQxU1QVcfTZ1VzAHs40jQc
        AUwDZkVksI6IVOkX0aMEu6YuRU1ihDMAuziSVsYBBJtcJyLZLMzGl7OSA1DVpcCfHOVV5jNA
        VWcCr0UkGyYi9SigPHwMiFq5eT30fVXw2OSfgo0vp6uTbu04EeiZ+6jaHogqs7sjjafPy0Ts
        CUBo3gHsGy7YrAq1A6gWnr6qjAMItrivI6nLAUwleh5gDeCTjgLLwv2ONLUDKAEiItg16FFU
        xgFgthgVsm8WXWz3X8UBhFtSf+ko9HMu0UqAqr4ARAWFGFmxyc+qshXRYcDeVdUqxQHw2OIv
        u7oBubtoNz9zZHioiKzuSFcW6s+AahBrL3zZCTZ4qCNplzbdnQO4h+hIqQOAgxwFl4X6M6Aa
        tNsE4EGYLTbiH5hNr0KXDiAMFX7hKPwoR5qyUI8AqkG7OQCPDf6iq+E/dD8CAJjoyPgAERnk
        SFcGngai1oVHiYgnymxNDojIaGDtiGSzgSczECd1gu0d4EjarS03cgBTiDaIPsDhDgEKT4iQ
        0o4xEaqEp29W2QxTYg4nOujpTMyWu6RbB6Cqi4E7HEJUZjWA+jOg7LTV+j8+27sj2HKXRMW8
        93wG7CMiUcOusuCZCNynviugeIQ+2duRtBIOINjcPo6kDW04SpHvBWZEpOkJnOIQpAw8QfRl
        IWtTHw4qIrsS/f0/D3g4A1my4BTM9hoxA7PhbmnoAFR1Cb7PgPFV2BMQ6nufI+mRKYtSEx9P
        nzzY3Wx4mQi2Nt6R9I6g093iGcpOcKQZCnzRka4M3OZI8+n6M6A4hL74tCOpp2/LwBfxXXo6
        ISpBpBKr6l+AvzoK+2rYh1127gSiAkWOxLffvCYbdiP6OmzvpHahCTb2VUfSvwbbbYj3V+yH
        jjRbUoEDQqo6G5jsSPqZtGVpFRHpKyIjRWRzEdkZX5isLURk5/DOSBHpm7acCeDpi3srcv7/
        k/jiHXpsFgkXhDROJNITeAlYPyLpZFUtvRMQkWOIHj5NB9bJck05eP+1gQ07PBtg4a8HA0M6
        /e2dUNELsQ00szr9XRZM5dUOzzvqUaqECMP/t4EREUlPVNVrMxApVUTk98B+EcleBzZptPy3
        PD9vX4nI14DzHEnHqOrTrkwLiogMwQw8yoD2VNX7Ei67N3a7yxasbOgbYg44auNH3izAFPDV
        Ts+zwLSk4/CLyB5EzHRjw/+RZR8BiMjWdArp1Q1fV9XzPXlGLSN05Frgv4k+eHAGcEKMfAuH
        qs4SkbuJ3mZ5JL5Vgy4RkX7AWGD7Ds/WJPfLnQd7EmKiAAATAklEQVR9gNHh6cxCEXkaeLTD
        86SqftRCeZ7Z/yllN/7AGY40czFbdeEeAQCIyMXAVyKSzQc2VdW33BkXEBE5FvhxRLLpwKio
        pZaQXx9gZ2AHVhj75sBqrUlaepYAz7HCITyCTWAtiHpRRFYD3iJ6+H+Cql7XqqB5IiKjsGvM
        ouZkLlHV090Zq6r7ATbBOkwjnmvj5FvEB4uwstBR1z27eb8HZuxnAX8APnLkVT/2fBTa7KzQ
        hj26aeM9HXktAtbKW58S0MdrHXVdgn37+/NtQpBfOgRZDGyVd6Ml0Oi/cdT1ig7pRwNfxtab
        ZxbAkKryzAxt+mVgdIf2vsLx7u/y1qME9HCrYFNRdf1l7LybEGacs9PuzLvhEmj44xz1nAFc
        j82G520o7fK8Ftp8hiPtl/LWowT08E5nu4yLm3esOYBliMhU4J8cSXdX1dKGXxKRNbDv/CpF
        QG4nFgMjVDUqulVhEZHd8B1gelhVd4ydf5MOYB/sGy2Kv6iq54aWwiIivwX2z1uOGCzG1ug7
        PsvW7Tck+sjs/diyXcf9BB2fOCtHefN7VS1T362CiDwEfNyRdF9VvTtu/k11pqreHQzjUxFJ
        Py4iR6hqKbdgisiuRC97ZoVio5FlG286/n0di/s2W1U/7C4DERlPtAO4VVWvbJBHf8wRrInt
        S9iAFRuSlv0dARRhW3h/EdlVVT23XRUOETkCn/H/thnjhyZHAAAiMgZ4nOhlrOeBrdWxK6kI
        iMiawNHAieRzKegCbLPHo1j7vogZ+uuqOr+VjIMDuCIi2ZcbOQBnOX0x57AhsCmwLbbsOYZ8
        NjL9DbgGuKEsnwNh9+3TwGYRSZcA26qqZ4PQqrQ4OXENvsmJ8XlPpDjqMg74KbaPIavJrDnY
        991FwLHYpqCeKdZxfJ59hY04x4a6XhTqPifD9p4f+nhc3vqWUF8pcE1L5bQo5NrYzqMoIWdi
        kzG5N2wn+YcCZ2LbVLNQwNexMwZHY0uGUkClytRZY58Ko0ObTAhtlEVfPBv6fmjeethFm4zA
        t4w8F1i7pbISEPZ/nA1+W94N20HmTYGrSP/XfjpwK3AStjsy73oXzgE06J+TQttNT7mP5gdd
        yL1/OtT/Nqfs/9NyWQkI2x87jeUR+F9ybthtg1J5NlU0+0zFtkuPyVuRuqh/KRxAF3KPCW06
        NcV+Wxx0Y9uc6/ovTnnfBvq3Wl7LUW3UZp2/7Ux+WZhkyxQRGRdWLR4DPku6++8Xq+ol2uyk
        TM0qqOo0Vb0EM9K0WA3TjcdE5LciMi7Fsrok2MZlzuTf1gYrPl6SCmv1Y2zGMooRwI8SKrMh
        YhwiIn/GTuxltR78cRGp0pVphUBEDsa3JJYE+wP3icifgw5ltaT5I6IPNoHZ2o+TKDARB6B2
        Gu5MZ/KjRSRq/0BLiMih2O0vvwKS2oi0CAspNc+R9uyKhEcrBKEtv+tIOg/ro6QCf+6C6dCT
        QadSI9jE0c7kZ6rjBKqLhL9fJuD7fnkdGJjC99PO2O0+SX4bPgt8HRgeyvih870j8/527qJ9
        yjoH8Flnm/8wpB8e+izp1Z0HgZ1TqN9A/KsfExItO+GKDAHedFbk8gTL3RS7ACGpjv4IuAE7
        y9C5rOHAh07HsVrextNJ9tI5AOzb/DmH3B8SnHSn93cPfZnkceyJJLhqAFzuLPdNYEii7ZtC
        h+0foyEPa7GsocDF+M7te54ngFOjGhk415nfsXkbUCe5y+gAjne29bkR+QwJfftEQrqyMOhe
        S/sIgMNilLl/4u2bUqdd7azQLJrwpMDqwDexAy5JdOY92GEKb/lDgQ8c+b4C9M7biDrIXSoH
        gIVGe9Uh8wdxDBHYN/R5ErozO+ji6k3Ub9NgA55yrk6ljVPquIHOjlNssq5fjLwPJZndYkuw
        DRc7NlnHc5zlnJK3IXWQuWwO4DRnG5/TZP47Bh3wRLmKel4HDo1Rdr+g+568XyWFOTPVlBxA
        qOBewFJnBW9w5LcOcHsCHbUAC6+0eYv1WxPfCORtmvh1SKlPSuMAgoG845B3NrBmi2VtHnRi
        QQL6dTsWLj6qzBuc+S0F9kqtnVPuxMtiNFyXioctVZ7iNLZGz1zgfCyIZ1L1+19n2V/L26CC
        vGVyAGc52/Z/EyxzVNARz/mWKKd0Ct3HMvQe9FHgslTbOeVO7I8dZ/VUdAGdhuPYFtCHWuyM
        hZgjSvwwEjax9L5DhhmkNISLKW8pHAAwCN9hmPdJeFY8lD8i6Eyrk8sP0WlLOPbZ4R1pvEgC
        230bPalecKm2VfE4bBgTRW/gNhFZK1xp9T3sTHyzu78U29u9paqeqqrTm8yn+wJUZ+Hb2TgU
        X0z3GuNM7BMrih+FPkgUVZ2uqqdiV3DdiulSM3wceFREvhd0ei1szsFz78NS4DhNYLtvQzLy
        6N/G7zX/CLwQI31Xz2Rg+4L9Ws2ixW/VBGQt/AgAc5aeGAEzgUEZybR90KlWdPKFoNve9N/O
        om5ZXXH9Xfw3s+6KLY80w8PAPqq6n6o+2mQesVDVOcAFjqSDgW+kLE4V+A9sFSmKC0Lbp46q
        Pqqq+wH7YDrWDJtiuu3hDnxbn1snQ88+AP+yR9xnOvCvZBxgo1PdPCGqPwQ2ykPGIGehRwCY
        kcxzyDgDGJCTjBJ0La04BU9mWbesRgCo6lxsDT/JO9oUW77ZQlV/qqGHsibUzXNxaj/guvqg
        0KqENrme6KuvAM4LbZ45avwUu7x12W09STET20uQWd0ycwAAqvoKdrAjiXPdf8Niu52oqu8n
        kF+rXIqtW0exJ/ZLXLMypwG7OdK9g7V1rqjq+6p6IhZL8m8JZLkY+GywkczI1AEAqOo9wNda
        yGI+8C1gOy3QpSNqN9z+mzP5uSKyYXrSlAsR2Rj4vjP5v2lrtwknStDB7TCdbCVq89eCbWRK
        5g4AQFUvwo4Ox+UeYBtVPVsTvmc+CVT158AkR9IBwLX1p8Dyof912J6RKCaFNi4UqrpQVc8G
        tsF0NC4Tgk1kTi4OIDAe+EuM9POAb6jqiynJkxSnYjvJotgbC3zZ7nwZ2MORbi7WtoUl6OY3
        8AWNWcZfyPGTMDcHoHb/+xH4vpvBTgBOCbf1FBZVfQP4T2fy80RkgzTlKTLhM+gHzuT/Gdq2
        sATdnILpqod3gCOCLeRCniMAVPUd4CBsS6eHwcBkEdkvPakS4VLg/xzpBmKXq7QdHYb+nqvX
        /o8CTPw1IujkZExHPczEzvd7fwBTIVcHALbJAtgPO0DhoR8wKdybVkhUdSk2vPesduwrIiem
        LFIROQk7MRrFYuCk0KaFJOjiJEw3PfwD27D2ZHpS+cjdAQCo6sOYE/Du7OoNTBQRbxDFzFHV
        J/DtEAQ4X0TWS1OeIiEi6+PbNwG24++JNOVphaCDE/Ht7wfbEr6fqj6enlR+CuEAAFT1/7Bw
        Yh84X1kNmCAiRZ4Y+g7wkiPdIGxTSbtwLb7tvi9hbVhIgu5NwH/PxGzM+B9JTaiYFMYBAKjq
        Q9iV496dUAJcKiLfTE+q5lHVefhnePcTkRPSlKcIhM+dfZ3Jx4c2LBxB5y7Ffw36B9g3/9T0
        pIpPoRwAgNpd7gdi++a9fE9ErhORPK6ebojave03OpNfICLrpilPnoTPnPOdyW/UJu+8TxMR
        6SMi1wHfi/HaXOBTqhpn2TsTCucAAFT1AWx1IM6Or+OB+0VkVDpStcS/A+850g2i2qsCV2N1
        jOI9rM0KRdCt+zFd8/IRcGD4YSschXQAAKp6H3AI8TZV7Aw8XLS9Aqr6Hv6bk/YXkf9IU548
        CHXyXs92ZmizwhB06mFMx7zMAw4OP2iFpLAOAJafGziUeHusR2Ibhk5OR6rmUNUbAO+Q9py0
        r6LKklCXc5zJ7w5tVRiCLk3BdMvLfOxk35R0pEqGQjsAAFX9AzYnEOfEX2/gShG5SkS8yzNZ
        cCzwriOdADeJyNh0xUmfUIeb8E2WvYu1USEQkd4ichVwJf5lPrB1/gOC7haawjsAgOBFd8au
        iIrDScC9IhLHc6eGqr6FHYf2XOw4ALhTRIanK1V6BNnvxLfbbwl2HPatdKXyEXTmXuKf13gW
        uz/w3uSlSp5SOAAAVX0BC7I4OearnwCeEJHDk5cqPmFuw/uNvwFwR8FGMS6CzHdgdfDwH6Ft
        cifoyhOY7sThd8DHS3BgbTmlcQAAahFgDwAuifnqcMyQbhYRT7TZVFHV87HosB52Ba5KUZy0
        uAp/DLzbQpvkioisKSI3Y44r7sjrQuAgVfVuaS8GWcUeS/rBhmbNxG1/BzikAPIPwCLJeOVu
        +XIRMooJiAV88dbrb+QU36+TzIfgu4mo87MQ+FLe8jf7lGoE0BFVvRo7PxA3xuBI4FcicqOI
        rJG8ZD7U4r4dgX/r8w9E5MAURUqEIKP3iO8H2HHYXOL7AYjIGiJyI/Ar4s3yg+1X2EdVr0te
        smworQOA5d/TO9FcTLYvAE+LyEGJChUDVX0WuzjFQw/gFhHZOkWRWiLIdgt+vToutEEuhL5/
        GtOFuEwDdtICr/F7KLUDAFDVl4FdgN808fra2NHin+S1UqCqt+M/GTcQk3doiiI1RZBpEr5D
        PmCRfW9PUaRuEZGRIvITTN61m8ji18AnNOMAnmlQegcAoHZBxMHYZQrNRBw+GnhBRP5LRLzR
        XJLk/2FLTh42Am4XkV4pyhOLIMvtmGwe7sXqnCkisrqI/Bd2S08zR8kXYbdcHaqq3k+3YpP3
        JEQKkzn/hA3rmr2Y4Q3gi2R8yQgwLJTtlfOaJspIZRIQO78Qp32HZdy2Evo0Tvt2fp7CIlHn
        ruNJPpUYAXRELbjI9tiwupkoMutid7dPFZFxScrWCFWdAXwam1X2cIKI5H5gJsjgPca8EPh0
        qGsmiMjuwFSsT5s5abkEm9TcQVUfS1K2QpC3B0rZ838CeJ7mvb4CvwBGZyhznLvjFYuTn2Te
        7hEAdg9CHFkzu3YMGB36rpW+fx7YJW89TrWd8hYgA0XoB1yMjQaaVYSFwBXAJhnJfHVM+b7h
        zDcxB4CFv44j49UZtd0moa+a2SOy7FkadKZf3vqbenvlLUBmFbUruV5p8RdhCfBzbPknTVl7
        sOJeeu/zLUe+iTgA7BacOLLdCvRIuc12Cn2zpMU+fhXYM299zcwu8hYg08raElXcX9funvuw
        U4qpTBYCvbCDNHFkOjsiz5YdAHB2TJnuBHql1EYS+uC+hPr0GmBg3nqaqU3kLUAulYZPAs8k
        pDRPY5t5eqcgZx/gDzHlOa9Bfi05AGxiNY4sfwD6pNAuvUObt7La0/F5BgvZlbtuZm4LeQuQ
        W8UtkuuJwFsJKdFb2NB4o4Tl7Ac8GFOWi+liZNKsA8B+aS+OKcODJPwNje0z+FbCfXYisFre
        +pibHeQtQN5PMLBvYiGbk1AqBf6M3WM3NCEZB2FLWXFkuKqzE2jGAQTjvypm2VOBQQnVfWho
        yz8n2D+zsI1IlZ/ki2zfvAUoygOsBfwIWJCgoi0C7gI+36qyAWtim1HilD+BDpNvcR0ANhk5
        IWaZTwFrtljXfqHN7gptmFR/zMcua1krb30rypO7AEV7gA2xMN6tLBt29czFQmMdAPRtUrYR
        xN/XcDPQM7zvdgBAz/BunLKeB0Y0Wbe+oW1uCm2VZNsvAX4CbJC3fhXtyV2Aoj7AtliElyQV
        cdkzDwsQehawAzGWyID1sKWqOOXdhq0quBxASHtbzDJeBdaLUY8eoe5nhbaYl1Jb3wVsk7c+
        FfWR0Bk13SAie2HXfXsusmyWmVjU2buxqLgvR8i0CfAAsE6MMiYB92CRaxrxVWBv7HCVl7eB
        3VW14TVoIrIxsE949sI+u9JAsdBx31fV+1MqoxLUDsCJiGwJnAIcg//Ia7O8jK1tP4l9U09T
        1ZWiCQd5HsAmybzMJvr6ak+ajryHGf8zneQbDowBtgHGAnsAG8fItxlmYXMWl6vFkKyJoHYA
        MRGRAdhR0lOALINzvIsFoXiqw9/e2EabIRnK0ZFZWCithZihj+nwN8toxk8AlwE/VdU4t0m1
        PbUDaAER2QNbojoMmzTLGsVWLfrmUDbYrHof/BdkJskibJ7iMi3otVtloHYACSAi6wAnY4FK
        C3EHQYV5E9uXcI2qTs9bmLJTO4AECZFxjgCOwq7A7pevRJVhDvB77FDRnaraTNSnmi6oHUBK
        iEhfbKb74PAU8dbiIvMqtnIxCbhPVRflK041qR1ARojI9qxwBtuTz3dzkVkK/JVg9Ko6LWd5
        2oLaAeRAmDM4CJtB3wvIIxBpEfgQW6+fBNzVeamzJn1qB5AzItIP2A3bFbd9eLzRdcvEUmyr
        8KPAY8AjwJ9VdUGuUrU5tQMoICIyBNguPMucwuaUJ4z7Quys/mOsMPgnVPXDXKWqWYXaAZSE
        MFL4GCucwpbYZpvh2HHhrFmKbWF+F5iOBdVYZuxPq6o3unFNjtQOoAKISB/sXoFhrHAKwzr9
        HY6dJhyE7SDsxYrNS4uxDUXzsJN4MzDDXmbc73Z6pgMzVXVJ+rWrSZP/D+97vr9SVg3gAAAA
        AElFTkSuQmCC
      </shape>
      <shape name='Icons/iphone.png'>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAACXBIWXMAAIEfAACBHwEbKTiF
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAACH1JREFUeJzt3U+opXUd
        x/H31/wzQY7TpJaj48IggllFZiH5J0OyhlykbcQWI4HUssBIF+5E2grmInERuYk0xYFwMTFh
        g5ULRVxFLmZSUcwGiWwG6tfiPCLUdbrHzj2/8/w+7xec1Z3743s5v+c9z3PuOc+t1hp6T1Vd
        ABwEbgT2A5cA+4A9PefS0k4CrwKvASeAp4HDrbW3u061YcoALFTVLcCdwPXAOX2n0Q45DRwB
        HmqtPdF7mE0QH4Cqugb4EfCF3rNorY4BP2itPdN7kJ5iA1BV5wE/Bg71nkVdPQJ8p7V2qvcg
        PUQGoKo+DjwGXN17Fm2EY8A3Wmuv9x5k3eICUFVXAL8GLu89izbKceBLrbWXew+yTlEBqKrd
        LGp/oPcs2kgvAVcn/abgrN4DrEtVnQU8ige/3t8B4NFpr0SI+UGB77P4/b50JgdZ7JUIEZcA
        VfVR4GV8M4+25yRwRWvtr70H2WkpZwA/xINf27eHxZ4Z3vBnAFW1F3gF2NV7lm06AvwEeKf3
        ICu2C/g28OXeg2zTP4BLW2tv9R5kJ53de4A1OMh8Dv7nga+21k73HmQnVNVjwLPAZ3rPsg27
        WOydn/YeZCclXAJ8vfcAS/jlqAc/wPSzPd57jiXMae98IEMHoKrOBW7qPccSftd7gDU41nuA
        Jdw07aFhDR0A4Arg/N5DLOEPvQdYg98Dc3nh6XwWe2hYowfgst4DLGlv7wHWYC9QvYdYwtz2
        0FJGD8ClvQdYUsJHkuf2Aay57aGlGIDN8vneA6yBAdggowdgbi/g3F5Vn+o9xE6ZfrZv9Z5j
        SXPbQ0tJeB/AnFwAvFBVR1m8EWUk5wHXAR/uPYjeYwA2zy7gK72HUIbRLwEknYEBkIIZACmY
        AZCCGQApmAGQghkAKZgBkIIZACmY7wTc2q+Ao72H0Epdx7xuDrMWBmBrR1tr9/ceQqtTVWAA
        /ouXAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBS
        MAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUz
        AFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMg
        BTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIw
        AyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMA
        UjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAF
        MwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjAD
        IAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBS
        MAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUz
        AFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFIwAyAFMwBSMAMg
        BTMAUjADIAUzAFIwAyAFMwBSMAMgBTMAUjADIAUzAFKws3sPsKEuqqpP9x5CK3VR7wE2kQHY
        2vemhzQ0LwGkYAZACmYApGAGQApmAKRgBkAKZgCkYAZACmYApGAGQApmAKRgBkAKZgCkYAZA
        CmYApGAGINsb00OhvCFIlt8AzwDPAc+11k4AVNV+4Mrp8UXg2m4Taq0MQIY3ge+21n6+1Ren
        EJwAHgeoqm8CDwIXrm1CdeElwPh+ARx4v4N/K9O/PTB9rwZmAMZ2T2vt1tba0tf5rbU3Wmu3
        AvfswFzaEAZgXL8F7l/BOvdPa2lABmBM7wCHWmv/+n8XmtY4NK2pwRiAMd3dWvvjqhab1rp7
        VetpcxiA8fwdeGAH1n1gWlsDMQDjeb619s9VLzqt+fyq11VfBmA8z810bXVgAMZjALRtBmA8
        L8x0bXVgAMZz2UzXVgcGYDxXznRtdWAAxvPZma6tDgzAeDwD0LYZgPHsq6rPrXrRac19q15X
        fRmAMT1SVeetarFprUdWtZ42hwEY0wHg3hWud++0pgZjAMZ11youBaY17lrBPNpABmBcHwKe
        rKqDH3SB6XufnNbSgAzA2D4BPFVVD1fV7u1+U1XtrqqHgaemNTQoA5DhDuDFqrptugPwlqpq
        f1XdBrw4fY8GN/pdgU/3HmCDXA78DKCq3mC6Nfj0tXdvCX5xn9E22tB7aPQAvNp7gA11MfC1
        6aEzG3oPjX4J8ErvATR7Q++h0QPw594DaPaG3kPVWus9w46pqnOBvwAf6T2LZulvwMdaa8O+
        DjD0GcD0xD3dew7N1tMjH/wweAAmT/YeQLM1/N4Z+hIAoKouZHEdt7IPxyjCKeCy1tqbvQfZ
        ScOfAUxP4IO959DsPDj6wQ8BZwAAVbUX+BOwp/csmoWTwCdba2/1HmSnDX8GADA9kff1nkOz
        cV/CwQ8hZwAAVXUWixd1PvCn4xThMHDzKv6w6hzEBAAWn3IDjuHNLbS1l4CrW2tv9x5kXSIu
        Ad41PbE3A8d7z6KNc5zF//wxBz+EBQCgtfYycBWLMwEJFnvhqmlvRIkLAEBr7XXgBrzRpRZ7
        4IZpT8SJDABAa+1Ua+0O4Frg2d7zaO2OAde01u5orZ3qPUwvUS8CnklV3QLcCVwPnNN3Gu2Q
        08AR4KHW2hO9h9kEBuA/VNUFLH5VeCOwH7iExR/E8E1E83KSxc08XgNOsPhQ2OG0F/n+l38D
        ypOCCUkiTzgAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/kids1.png'>
        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
      </shape>
      <shape name='Icons/kiss.png'>
        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
      </shape>
      <shape name='Icons/laughing3.png'>
        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
        RtTsr9RQ/B8UpSu7pAK5MAAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/line-chart.png'>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAAA3XAAAN1wFCKJt4
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABJ9JREFUeJztnbuP3FQY
        R89HAg2RQrMF0PEKDQ0JICRKJBoKsggJKmqKtDy60PFf0ICEFF4iQBJQtJFIkRZqCiroiJCQ
        CEjwUYwtmWG8c/28vv5+R3LjueO9u+es7Zkdew1w/s9r7v7RjvViZdyVewIiLwogOAogOAog
        OAogOAogOAogOAogOAogOAogOAogOAogOAogOAogOAogOAogOAogOAogOAogOAogOAogOAog
        OAogOAogOAogOAogOAogOAogOAogOAogOAogOCdzT0CkY2ZvAodjblMBlMVDwDNjblCHgOAo
        gOAogODoHKAsrgN3Esc+DLy4b5ACKAh3vwRc2jfOzB4BjlK2qQBWRiX/BvBgynidA6yIrvJB
        AayGBPk3d63UIWAFJMh/B/gJeG77Ae0BCidFvru/1/Z8BVAwQ+WDAigWM3uUgfJBARRJJf+I
        gfJBARTHmPJBARTF2PJBARTDFPJB7wMUQeOE74GWIb3kg/YAi2dK+aA9wKIZWf5t4PvtlQpg
        oYz9m+/u14Br2+t1CFggU+/2myiAhWFmjzGTfFAAi6KSf8RM8kEBLIYc8kEBLIJc8iFgAGZ2
        YGZnc8+jJqd8CBaAmR2w+Wj1dTN7egHzySofAgXQkP8EcBr4JmcEc5/ttxEigC35NdkiaMi/
        v2XILPIhQAAt8mvqCJ6acT6LkQ8rD2CP/JrTwLdzRGBmZ1iQfFhxAInyaybfE1Tyj1iQfFhp
        AB3l19zHRBEsVT6sMIAE+R8CFwDf8VgdwbkR57NY+TW+Y3nV3SltAQ6AH1q+Jwc+AE5UY98A
        /mkZdxs4N8J8zgA/HzOftxfwM1tHAF3kN54zWQQlyM8eAHAvcDKH/A4RnF2r/KwBAKeA79jc
        8KB3BEPkTxFBSfKzBdCQX3+9j/tEMIb8xAh+TYmgkv9LKfKzBLBDfr18AtydQ/4YEQCPlyZ/
        9gCOkV8vn6ZEMIX8DhE8uRb5swaQID8pginl94mgZPmzBdBBfr18tiuCOeR3iaB0+bME0EN+
        vXzejGBO+R0iKFr+5AEkyP8CuLUvghzyEyMoWv6kASTKv4fNX+KOi+ByLvk9IyhG/mQBpMpv
        jN8XQTb5HSMoSv4kASTIv9yUPyCC2eQnRlCc/NED6Cu/RwSzy98TQZHyRw1gqPwOEWST3xJB
        sfJHCyBB/pcp8hMiyC5/K4K3cs8jewBjyz8mgsXIX9My6AYRZnYKuMKOe9BWfAUcuvtfXbft
        7r+Z2QtsbmrwI/C6u//de7JiJ70DSJD/NfByH/k1VQTPA39I/jT0CiBR/qG7/9l3YjXu/vvQ
        bYh2On8qOEH+FUaSL6anUwCJ8s9Lfjl03QO8guSvik4BuPv7wLs7HrqK5BdJ53MAd7/IfyO4
        Crwk+WXS61WAu180M9j8I2PJL5je7wNUEZzQ6/OyGXRxqOSXz+quDhbdUADBUQDBUQDBUQDB
        UQDBUQDBUQDBUQDBUQDBUQDBUQDBUQDBUQDBUQDBUQDBUQDBUQDBUQDBUQDBUQDBUQDBUQDB
        UQDBUQDBabs07Nnq2j+xcozNHbhEUHQICI4CCI4CCI4CCM6/0JoEcMqy+iAAAAAASUVORK5C
        YII=
      </shape>
      <shape name='Icons/mac monitor.png'>
        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
        AAAASUVORK5CYII=
      </shape>
      <shape name='Icons/man-silhouette1.png'>
        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
        YII=
      </shape>
      <shape name='Icons/man271.png'>
        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
        leV/JQAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/man465.png'>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAAAO5AAADuQHRCeUs
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAADKVJREFUeJztnWmwHVUR
        gL9+WSEBwpaw5SVCIgSILGGJRmURwhJCSgFlERAFwQWQoGWpodgRVEoWFUpBELEAZTGCsoRQ
        gsEQFBJZEzBBCFBAyEYSsr/2R8973Nw3M3fmLtPz3p2v6lRSc+ec03O635mz9OkRVaWgeWnx
        FqDAl8IAmpzCAJqcwgCanMIAmpye3gJ0Z0SkL7A5MABYCbynqh/6SrUhUkwDa0NEBgKjStLO
        fKT0viFZlgPvlqU3gceBp1R1XQZid1AYQEqCv+ojgS8CY4Ad6lj8MuDvwCPAFFWdU8eyQykM
        IAEi0hsYCxwPHA1sklHV84GHgOtV9flGVFAYQAwi0g/4JvBdYKCjKAo8AFyuqjPqWXBhACGI
        yCbAt4GJwFbO4pTzGGYIj9WjsMIAShARwRR/EbCFrzQVmQGcr6pP1lJIYQABIjIUuAU4sMoi
        lgGzgGeA/wGLgSUlqS8wCHuVlP67E7A30KOKOtcDlwKXqer6aoQuDAAQkTOAq0k3uFsJ/BWY
        DPwLeEWrbEwRGQAcBBwKHAIMT1nEP4CTVHV+6spVtWkTsDHwZ2yQlSStAe7DZgP9GyhXKzb+
        mJ9CtkXAManr8laCo/K3BKanUPxNwMcylrEXcCrwYgpDuBHoURhAfMO2Ai8naMx1HooPkVeA
        8cBTCY3gVoLXe2EAnRtzV+CtBI34IrCvt7whhjARWJVA/msLA+jcgAOxEXpcw60FrgD6eMsb
        8xwjgecSGMHFhQF81Gh9gCcrNNgC4JPesqZ4nquBtgrPdF5hANZgt1VoqHnAcG85q3iuLwVj
        lajnasOmiM1rAMF7M075M4FtvOWs4flOxhaFop5vcdTzdfuFoGCF7yVgo4hbXgH2V9UlWcnU
        CETkdODX2EAxjDtU9cTyi83gEnYd0cpfAhzd1ZUPoKo3AWfH3HKCiIwtv9itDUBExmPz5zDW
        A8drBk4XWaGqvwSujbnlV4FDSwdd/hUgIhthCzutwGBs9ax9A+ZGYGhE1gtV9ZIsZMySwIfh
        RWBIxC2XqeoFHfd3JQMQkUHAOOBwbBetler26+cCu6nq6jqKlxtE5HDgwYif1wCtqvoukP9Z
        AKbkH2HLoJXmvEnTOO/nyqDdbo95/nNyPwsQkVbgh8BpQO86Fj1FVTsNhrobIrIVNsPZPOTn
        Gao6GnI4CBSRVhG5EXgVOJP6Kh/gQBG5VET61LncXKGq72O9QBj7i8hOkDMDEJGJNE7x7fQC
        JgHPish+DaojL/w+5jdbE/B+VwWvoI2BO6jP+z1NWgdcSY43furQtrMjnv1lVfXvAQJHzHsw
        L5us6QF8H5gc+P53R6JeA7uIyO7uBgCci03rPDkMuMFZhkYRZQAAO7vOAoJ1+tnY1qY3Cuyp
        qs/F3SQiGwNtqroqacHBOYOVmuLcn4hsBixT1bakeWLKWkD4eslE7x7gVPKhfLBNlHMjfxQZ
        JSLTgKXAUhF5VER2iS1Q5FARmYmtSn4gIveKyPYV8pwgInOCPItF5ObAa7gW3oi43uo9QJlL
        9gO/uDQjQs49sBW08vs/IMJfEDtAGlbHfGBARJ5vROR5FuhVQzvfG1Hu3Z7K3z0HCi9PiyNk
        fTgmz50ReebE5Lky5P4+gUFF5Tmrhrb+eUSZT3u+AoY61h3FgGAFrYNgljI6Js+nyi+IyJbA
        x9PkAfYi/mBKWJ6kvB5xfbCnAQxxrDuODU7lqP0JxQ34VoZcW43tW6TJUylySFiepCyKuL6F
        pwEMdqw7jmEh1x6NuX9K+QVVXY5tXiXOg23hxh3tCsuTlK0jri/0NICw8Cl5oF/ItfOBt0Ou
        v4JtWIVxJvZOL2cacE35RbXDnV/Feo9y7lTVuyPqScKgiOsLvKeBXQJVfQfzxb+ej04A/wwY
        paphSkZVXwjy3IL5JE4HLgAOjloPUNVHgX2Au7BB5OPYcfVOvnwpiQpu8V4RJSwhqroIOCdl
        njewv+o0eV6g/sviUQPSogfo7ohIf2DfiJ9fLQyg+/NpouNBPlEYQPfn4Ijra4HphQF0Y0Sk
        J3BCxM//VtUPCwPo3nyB6ECWj4OTS5iInAYc51F3As4RkcO8hagTcbOW28HhXEDgebMQ6J9p
        xemYqap7ewtRCyIyBlt0CmOqqh4CPj3AjuRb+WA7lV0WEemFnYqK4rr2/3gYQNTGRJ7IVUj3
        Kvge0UY8Dws7C/gYwEJsLzrPLPcWoFpEZGdsyTmKn2qJm1nmBhBseuT9OHaXNIDAdWwy0Rtt
        M7AYAh14TQPfd6o3KWE7f7kmmPPfjX2wIox1wNe1zMnUywCedao3KTUFYM6awGvpBuBzMbdd
        rSEez14GMNmp3qRM9RYgKcGI/3fA6TG3zQEuDs2f9ToAdPi8zyOfIdlnqepe3kIkIThvcA8W
        ZDqKRcBoVX017EeXHkBVl2J73lWFOG8wbwSHP3KNiAwDniBe+WuAz0cpH8D7XMDN+LuCh6W5
        wEGebRPTZoIt8a5I8BynVCzP+WEm5EDZUakNG1ht4q30kvYahm3iVJJ9PSVRQPJsAP2wfWlv
        Zcelt7GVtU2dFf/bhG21Cjg2cdk5sOokYdvzkJYCVwHbZdg2O2IhbuNCwZamRcBnUtWRAwO4
        JwfKTZNWY167pwKDGtguJ2Irkknl+g8wInU9OTCASTlQqpLsGwLlqQ1zEb8M++bPYKClDm1y
        HMn/6tcBlwO9q6orBwYwGP9xwLtYmJqzsG60lrLWYLOIqdjXRsaR8OsdQXscSfhJ5LA0G4tz
        XH37extA8NB/cjaAC0tk2Ro7zFGvmISKjXO2T9AOB2JnACuVtwA7rdS35rb3Vn7w4Ps7Kn85
        sFWITPtggavq1TtdVKEN9iP+eLhiYd8nUccvlrkrv6QB/uZkAFdVkGsw8BNsC7uWeubG1DGS
        yq+ePxIRWKK7GMC+DspfAQxMKF8/7JPxfwj+EtPWtSSi3OHAOxXy/gXo2Yh2z1WoWBF5E4iN
        oVNnOpwj0xDswH0WOAp7VYwENquQbamqbhDrJwiHO434o/JTsdjGDQlsnbfDoc+TrQE8X00m
        VV2LKaZj21hEhgCfAE4Bjq1Uhohsg8UdiFP+P4EJjVI+5CxULPBCV61PVV9X1ftJ4EsgIltg
        AR/ivhE8EzhSVVfUScRQ8mYAiWPvddH62vfwHyLe9fxlYKzatnlDyZsB9OrO9QVfN7mf6OPa
        YI4yh6hF+244hQFkRw9s3+OAmHvewpSfmVNqbgxARPYk+iRrozhbRKIOT9ab/sARMb8vwJT/
        WkbyADkxABHZDXNv2jbjqkcC04NBmSdLsHf+7KwrzoUBYN+7iwuS2Eh2wKZuXqzARvuzPCp3
        N4Dg0y0e3woo5StO9a7CPlw53al+fwPAtksrraI1mj1EZNeM61wLHKeqj2Vc7wbkwQBO8hYg
        IEs52oCTVfWBinc2GFcDCA4zjvOUoYQTgyNWjUaxM3p3ZVBXRdwMQES2Bn5Bfj4YMRS4JPj0
        ai1U+sLHeap6c4111I+Mt3wFGIt5ACV1e8o6LQN+A+xX5TOOiil7kve2eyd5M1L8dpgny2s5
        UHCaNAv4FrBZSiN/LqSsWMeTbmcA2NLneMyZIamHa17Th8CtwJiEz74p5k62BDuZe4a3oqNS
        3R1Cgn3xr2FBkrPc28+Kl7BXxG1qAaS7NHUzABE5Cgttfij5mF42mtXY5s61qvq0tzBVU2M3
        34L5yc3Cv5v2TFOAA7y786p0WKXie2JHo6K+S9usaRpwhLdSG2YA2Jz9LLreaD7r9AxwDClO
        BOXaALBjU9+huvNzzZxeAr4M9PBWdFUGAPQGfgC8l4PG7MppLnC6t7LDUuQsIHBevI/40GMF
        6bgFWxPITWykUAMIPGQewZY1C+rLZGwbeK23IBA9X/8xhfIbxQRsvSQXdOoBRGQPLJJnMyzm
        eLEEGK4ZuX7HEabkayKuF9SPAcCl3kJAWQ8gIrtT5Xm5gtSsxuISuEYmL/9LP9pFiuakD+Yb
        4Uq5AUxwkaJ5cW/vjleAiGyLrfRl4RdXYCzEQs25rQuU9gDjKZSfNVsCYzwFKDUA9+6oSXFt
        d1FVAk/YheTHQ7eZ+K+qxgWKaCjtPcBhFMr3YpjDqaQO2g1gtJcABYDFSXSh3QB28xKgAAD3
        HsBNgAIARnhV3BIMAId4CVAAOPcAIyjm/94MCQJIZU4LRfefB1qI/uJnwysuBoD5wOUPsYX4
        aJUF2eGihxbs5G6BP1mFq9uAFrIPzVYQjstB2hbsEykF/gzyqLQFeNCj4oJOPOxRaftu4AiK
        zSBPPlDVeR4V5+qLIQXZU7h/NzmFATQ5hQE0OYUBNDmFATQ5/wfhFpffByDFGAAAAABJRU5E
        rkJggg==
      </shape>
      <shape name='Icons/map35.png'>
        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
        NpV9awAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/map58.png'>
        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
      </shape>
      <shape name='Icons/marketing8.png'>
        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
        C9gAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/menu-button-of-three-horizontal-lines.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAclAAAHJQGVH3rN
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAdlJREFUeJzt27FuE0EQ
        gOFv11GUBkhNgWREkRIhRRRp0kUKD8ATUPEKNCg1ZR6CF8gLRClIJKLUoFDFNdCkspfCZ8cK
        aXNz8u4vjSz7XPw7xd3s3GwqpaiZHC0QTfUJ2Fj9klJ6i/fYxSukCKlHoOAnLvC1lPLt7sr8
        HrCFL5h2f17nmHZr3SqlLBNwPACxvuN48QDYx2wAQn3HDPsjfMZr9ZGQs/kNr1Z2E37jWbRJ
        EH8yLqMtArnMOIu2COQMtnEj/q7cd9xge1EHHOB2AFJ9xS0OloVQl4QdnA9A7rHjHDuLdafV
        7XBKKeEl3nSf67QXuMZ3XJeVRafWD6icloBogWhaAqIFomkJiBaIpvoEbDz0Y0rpKcbWqxL8
        VUr5+/+Vu73AJo7ww3r2CGfd2o6wuVx3t/gxrgYg2VdcYbzYBmScDkCq7zhFHuEDPqqPF5hk
        HEabBHKYzFtDz6NNgphUXwdk8zemtXKRcRJtEcgJlT8GWyFUeyn8YFe4ps1Qa4tHC0TTEhAt
        EE1LQLRANC0B0QLRVJ+A+8PS1Q1IVD8i04akVD4mN8InvFMfTzDN2Is2CWSvDUtjEm0RyKT6
        tjiVH5lph6ZqPzZ3f1i6uoOTrSscLRBN9Qn4BwLU7L3WJL81AAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/movie36.png'>
        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
        3RUKCOE9/jcAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/natural gas.png'>
        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
        AElFTkSuQmCC
      </shape>
      <shape name='Icons/nuclear-plant.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAL9AAAC/QF2YEbU
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABH9JREFUeJzt2l2oFVUU
        B/DfvmmmpKSmtxKz6MM0K8wiSgvCyiiC+5AiQlnWS+SrD/bxavWU4XMPFlJEBT0I0UNRkYXk
        g2gUGVmU1SVKLNOUcvcwR7wcz5kze87MnWvePyw4H2v+a6//rL1mz8wOMUZ1IoQwGStwHxbj
        IszCXxjGd3gP78QY9/cZaynux+24BIPYi5dijK91PCjGWIthAOtwALGA/YOXMadErKX4NIf7
        X1zW8diakl+BPQUTb7cj2ISpBeJchbcL8m6oVQBMwI3YXjLxdvsFj+GCDrEuxYs4nsC3uHIB
        cAe24gscqyjxTvYTPsBO/JF47EE81y2HULYJhhDWY0vCIbtlze5L7MNMLMANeFBWQVVgGG+2
        4nyFHTHGo129+zj7exU7AwfwCAZyuK7R/9T5G88r0DsqmQL4qMeA/sSzmJLAuRy7EhM/gW2Y
        VyqPPgQY0nne/4jNGCzJG7AGn8guX3kCv4Ul/fSx0j0AQgizsMqprr0vxrinNOHp/DNxs2zx
        NCgTfBg/YGeM8XjfMfoR4P+AgaYH0DTOegEKXXtDCMtlHX0hzq11RJ3xK97Fxhjj4UqZC3Tl
        u2WXmrpWeSn2oVbfqsqKCLBjDCQ+0u6pUoAiPeDqAj6jieuqJCsiwNdVBqwA31TKdob1gN2Y
        MKo9oCXCcnwse1jRROKH8AourDL5wgKMEOKFhgS4t+rEU5rgSExP9K8KtcVNFWBGLaPojTEj
        QFMVUJvwZ4oAY6YCmpoC4xVQF3FhAUII52BaXQPpgeYFqHMQBVDbFEh5Fp8qwCG8IXvKuwvf
        YxGW4FbZQ9WiJ6A+8RNWgbdIW73d1oPv6QSuI2NhJZh6Fh7v9kern6xN4JocQpiUGL8Q6hTg
        oRDC5V3+WyN7s5uCWqZBigCpjWgCnmr/MYQwICv/VNTSCOu+CqwNIcxr+2015pfgOuMqACZi
        48kvrbP/TAmesvF7YjTWAY+GEOa2Pq+UvRIvg8YroOwAzsXGEEKQvVsoi1oESFkI9VOC62QP
        V6/tg6OWKVDFSvAAPpdtRTmI30d8PmnHsF62Epw+wma0fZ+OOzElIX5/SFgJdtvutqXAsZtb
        vkMFfLvtLnu1jpVgigDdngi/3+O4ZU5tdPgZM3J8p+BwlzjbGxMAk7oMKraSuzgnoX1t/tty
        4qzKibOjDgGKXgXyGtCA7PLWCZtwZdtva0IIQ138V5ccQ3kUrICF8u/W9mN2Tum322lToeWf
        t9dwuMkpsKyHABGfYXJO6bfbthH88/FbD//jTQrwQAEBomzf7lSnun4vG8IV+Lag//lNCfBw
        wQHG1pnM29420g5J2+87dyw2wU6+RXmnyW6YUrgrRfPP5NJQ+TjGBSjo19QboXaMT4GqCccr
        oKDfWV8B4wJUHbgkRn8KhBBmS1us1InBqglzBQghTMTrVQftA9eHEDZUytjjHmCr4uv00bIT
        WFn7zZDshUbTyXazo7ip7puhJ3P+axrn4YkqiDoKEEJYgDlVBKgRK6og6VYBd1VBXjPmhBAW
        9UvyH/vYMljdJ3f0AAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/octagon.png'>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAABf2AAAX9gHQWL0u
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABFdJREFUeJztnU1y20YU
        BvvRvod1hmy01SGcH1tOvPRC5/EBnES2k/gQ2nqTM8j3iGq8IJiSaZAcAPPziPf1UqgSh+yu
        IgjMDCylhCfM7AK4A551HUh5vgBXKaX73gN5zKb3AB6zYvmwfU93w3t0g5sAVi5/h7sIXAQQ
        RP4OVxF0DyCY/B1uIrCeJ4En5D8AN8DndiOqwiXwFngycqz7iWG3ADLk/5ZSet9wSNUws2vg
        HQ4j6PIVEEk+QErpFnjN9r3t0/XroHkA0eTv8BpB0wCiyt/hMYJmAUSXv8NbBE0CyJD/awT5
        OzxFUD2ATPkfao/DG14iqBqA5B/HQwTVApD8PHpHUCUAyZ9GzwiKB5Ah/5Xkf0+vCIoGkCn/
        Y8nXXBM9IigWgOSXoXUERQKQ/LK0jGBxAJJfh1YRLAogQ/615M+nRQSzA8iU/9fc/y+21I5g
        VgCS35aaEUwOQPL7UCuCSQFIfl9qRJAdgOT7oHQEWQGckP8f8FLy21EygpMBZMi/Tin9nfNi
        ohylIjgagOT7pkQEBwOQ/PNgaQSjAUj+ebEkgu8CyDzhk3xnzI3gmwAy5f+zaKSiGnMi+D8A
        yV8HUyPYgOSvjSkRGHCB5K+SnFXJBtxzWP6LlNKnaiMU1TkVgQFjGwRI/oo4FsGhC0FvJH89
        DOcEN2PHDgXwb73hiE6MbrXTfZMo0RcFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwF
        EBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwF
        EBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEBwFEJxD
        AVw2HYVowQ9jfzz0yJgH4PXwpAlx5pjZc+AD8HT/2Ibt06P2eQK8G541I86YY/KBLxvgCkWw
        SszsR47IB642KaV7FMHqGOS/54j8lNL9BkARrItc+fDoV4AiWAdT5MPez0BFcN5MlQ8j1wEU
        wXliZj8xUT4cuBCkCM6LQf4tE+XDkUvBiuA8WCIfTtwLUAS+WSofMm4GKQKflJAPmXcDFYEv
        zOxnZpzwjZF9O1gR+GCQf8v2M99nknyYOB9AEfSltHyYMSFEEfShhnyYOSNIEbSllnxYMCVM
        EbShpnxYOCdQEdTFzH6honwoMClUEdRhkP8nFeVDoVnBiqAsreRDwWnhiqAMLeVD4XUBimAZ
        reVDhYUhimAeZvaCxvKh0sogRTCNQf4fNJYPFZeGKYI8esqHymsDFcFxesuHBotDFcE4HuRD
        o9XBiuBbzOwlDuRDw+XhimDLIP93HMiHxvsDRI/Am3zosEFE1Ag8yodOO4REi8CrfABLaWx/
        iEYvbnYB3AHPRg4/ADfA53YjqsIl8BaH8qFzAHAygjXTXT442CTqxNfBWnEhHxwEAOEicCMf
        nAQAYSJwJR8cBQCrj8CdfICvvSxePtb7V5oAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/pentagon1.png'>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAABclAAAXJQHu50Vz
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAC5NJREFUeJztnXvsl1UZ
        wD/PD8S4qCSgEomCMCNFNJWlNcHJhEkoF82UaZfVZuVlrbba2spus9Xa2toqsTLLVbNAMIic
        SVOKQJiihohoBF4QRURUbv74Pf1xXuzL+z3ved/v9/ue7/lezmc748d7fc7zPN/nec97eY6o
        KpHupSe0AJGwRAfocvqHFiAUItIP+CYgwK2qeiiwSEGQbrwGEJFTgN8BFyaLVgHXqurWcFKF
        oetSgIhcBazn/8Yn+Xt9sq6r6BoHEJFBIrIAuAcYatlkKHCPiCwQkUHNlS4cXZECROQs4A/A
        hIK7bAQ+oapP+JOqNej4CCAiNwKPUNz4JNs+IiI3+ZGqdejYCCAiw4A7gVmOzZYl/850bPNn
        4NOq+lpZsrUUqtpxDbgYeBHQjLYfuKVi+5uTZVnbvwhcHLpfXnQVWoCSDd8f+C5wyGHMp4Gz
        Lfuejcn9WfsdSo7dP3Q/owPYjX8qZjyfZUAFfgkMdhxjEPCLnGOsAk4N3d/oAEca7mpgt8No
        u4Grazjex8s8Xiu34AI0aPjBvn6xZUSUdmjBBWjA+EVy9vcaydkFryk22q4p2qUFF6BOw9xC
        E6/aganAC47z7QduDq2XjncAYDiwNCcs3wcM93DuYcCSnHMv9XHu6ADGAJcAL+X8Cm9qghxf
        BPY55HgJuCS0vjrGAZI8fFuBPDypiTJNBDbkXH/c1sj1R3QAo+gxwOqcsHsHMCiAbAOB23Nk
        Ww2MCa3HtnQA4BrgDYdyXweuagE55wG7HHK+AVwTWs62cQDM2P7OnF/WP4FTQstaIfNoYGWO
        zL+iBe8ZBBcgpchzgE05ufU7rZhbgX7At4Beh/ybgHNCy9pyDoB5MfNLwAGH8l4ApoaWtUBf
        LgK2OfpxIOmrhJa1JRwAGIF5Lu8Kn0uAYaFlraFPxwOLcvq0DBgRXNbAipoGbHcoaR9wY2gl
        NdC/G4C9jv5tB6Z1nQMARwHfB/ocynkKOCu0EUvo6xnAk45+9iW6OKorHAAYC6zJCY8LCDC2
        99jn9wA/zenzGmBsRzsAMB/Y41DC68CVoQ3msf+zgdcc/d8DzO84BwCGAL/O+QX8Axgd2khN
        0MX7gYdydHEXMKQjHAA4F3jG0dlDwLeBfqGN00Qn6AG+gfuewTPAuW3rAJix/Zdxj+2fB6aE
        NkhAR/gIsNWhnwOJDr3dM/DVsROA5Tlh7l7g+NBGCN0wn6T9MUdXy4ET2sIBgEuBlx2d2Qd8
        IbTiW60BnwPedujtZeDSlnUAzNj+h7jH9huAiaGV3aoN80na4w799QE/oMR7BmUJPg5YmxPG
        fg4MDK3kVm/A0cBPcnS5FhjXEg4AXId7bL8LmBtase3WgMuBnQ697gGuC+YAwDHAb3I8dSVd
        MLb36ASjgBU5Ov4tcExTHQA4D9jsEKoXuJUuGtt7dIIe4OvAOw59bwbO8+4AmLH9V4CDDmG2
        AReFVlynNeACYItD7wcT29R0z6AWAU4E7s8JR4uIY3ufTnAcptKJywb3AyeW6gDADGCH46R7
        gc+HVlC3NOAzwFsOe+wAZjTsAMAA4Ee4x/b/Bs4MrZRua8DpwGMOu/QlthtQlwMA44F1OeHm
        Z8SxfUgnOBr4cY6N1gHja3IA4JPAm46D7gLmhFZAbO/aaybwisNebwLX5zoAZmx/d45HPQyc
        HLrTsVU5wUjgbzm2u5vUPYPKA0wGnnPs3IuprRvH9i3aMMP0r+G+Z/AcMLliHwT4Kvlj+4+G
        7mBshR0h78d8MLG5COb99MvIZhHwWVV93bFNpMUQkWMxF+nXOjb7Sw/Z1UL3ATeo6rxo/PZD
        Vfeo6nzgU5h7BjZ6eoCFlhW9wPmqersn+SJNQlXvwjy76bWsXtgDLMa8mFlJf0zNvEhn8F6q
        Jwc5BCzuUdWdmNeU01zpXaxIs5hnWfaQqu48nP9tacC2U6Q9sdlyISSPDkVkJKa0mqQ2OltV
        H/ctXcQfInIO8GhqsQKjVHV7D4CqbsdUxUwTo0D7Y0vlqxKbHzEEjGmgM8kM/1AxYYSIjMZ8
        pZLmg6q60Y9sEZ+IyBmYx/VpTlHVbVARAZIF6ywbxyjQvthst+6w8aH6LuCfCh4k0h7YbHeE
        jY+YM0hExmHeME1zmqr+p1zZIj4RkfGYL4zTjFfVZw//54gIkKywTZUWo0D7YbPZE5XGB/uD
        INtoIN4VbD+cV/+HqZo2LuPKUTFXjs+XJl7EG8ncyP+1rDpTVTdULqiKAMkGm9LHBOaWJWDE
        OzZbbUobH7LfBYg3hdqbQuEfMmYOzbh/3Ie5f/xyw+JFvOF4rvMhVX0svb01AiQbbrFsO7sM
        ISNemUO18bfYjA/uyaPjaKA9sdnIGv7BMXm0iHwY+FdqcS9wknbqRMptjogMx9QS6pdadYGq
        rrbt44oAazC5pJL+wBV1SxjxzWyqjf8ixpZWMh1ATWhYZFkVRwOti802izQrzOOOAGDPHdNE
        5LiaxIp4R0SGYqbWS5OZ/yHfAVZiPjqsZAAwq7hokSYxC1Oqr5JXMDbMxOkAqtqHqeiZJqaB
        1sNmk3sTG2aSFwHAHkKmi8jgQmJFvCMiQ4DpllXO8A/FHODvmHoAlQzE/T1hpLnMxExKUcku
        jO2c5DqAqvZiJmROE9NA62CzxX2J7ZwUiQBgDyUzRSTtdZEmIyJZ0Tg3/ENxB3gAU5q0kqy8
        E2ku0zGzrVayB2OzXAo5gKoewNQRSBPTQHhsNliW2CyXohEA7G8MzxKR9Ngz0iREJOuejM1W
        VmpxgL9iCkJWknX3KdIcpmGqh1ayF2OrQhR2AFXdi5m6JE1MA+Gw6X55YqtC1BIBwH5lOVtE
        0k+gIp4Rkawns4Wu/g9TqwMsxcxkVclwYEqNx4k0zhRgWGrZAYyNClOTA6jqm9iHFzENNB+b
        zh9IbFSYWiMA2EPMHBGp51iROkh0PceyqqbwD/U5wBKqK06NxExoEGkOFwInpZb1YmxTEzU7
        QFIzcIVlVXxhtHnYdL2innqO9YZtW6iJXw41D5uuaw7/4Hgr2LmTyAnAdqodaLKqrq1HkEgx
        RGQy1S959gEjVTX99lYudUWA5ES2V43iaMA/Nh2vrMf4UH8KgPj9YCgKf/dXhLpSAICIjMJM
        /57+DGmSqtqKTEQaREQmAetTixUzgUf6G45C1B0BkhPavjaJowF/2HS7ul7jQ2MpAGIaaDal
        hn9oIAUAiMgYwFY8aoKqPl33gSNViMgE4CnLqrGqmv6SuzANRYDkxOk6AhCjgA9sOn20EeND
        4ykAYhpoFqWHf2gwBQCIyOmALdzH2oIlISKnAc9aVn1AVdP1nGqi4QiQCFBVfIgYBcrEdut3
        Q6PGh3JSAMQ04Juaqn7UQsMpAEBEJlJdYVSB0ar6QsMn6GJE5GRMFff0DbezVPXJRo9fSgRI
        BEnXGI61BcthLtXG31yG8aG8FAAxDfjCy9X/YUpJAQAich6QfhTcB7xPVXeUcpIuQ0ROwtT4
        Sf9Qz1dV29wONVNaBEgESs84kvXuWqQYs6m20dayjI/l4I0Si0qVi7XoU5knKNsBbLlpqoik
        31+P5JDobKplVWn5H8p3gFWYV8Uq6Q9cXvJ5uoErqJ7uNWt6v7op1QEctQXjOwK1U3PNv3rw
        8TFHVm3BYz2cqyNJ6jBOs6wqNfyDHwd4GNiZWhZrC9bGxzA6q2QnRrelUroDqOohzJT0aeJo
        oDg2XS1OdFsqvr7ns4WqGbG2YD6JjmZYVpUe/sGfAzwI7E4ti7UFi3EZRleV7MbotHS8OICq
        vkOsLVgvWTX/3vFxsvQ4s0wWAtenls1MpqUrPZd1CP0wVT/TeAn/UOLDoKoDmyKSr2LqCUbq
        5y1ghKru93Fwb0UdEoFttQUjtbHMl/HBowMkeAtdXYRXHXpLAfDukOZVqq9qI8XYhwn/b/s6
        gc+LQFT1bRH5PbGYZL086NP44DkCRFqfWNmry4kO0OX8D3E7c7U0ZvjUAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/phone325.png'>
        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
      </shape>
      <shape name='Icons/pizza.png'>
        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
        rzwXkqk/AAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/pizza2.png'>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAA5rAAAOawFU/g0G
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAoZJREFUWIW91ztoFEEc
        x/HPavCJwYD4iEFSRNAmwQci+MBCsdJeS9HCQm0sFC2sxNpKEMXCQrQQFUEQREQTEB/RStDG
        xqjECEYQSXQsdg72Nruby52XP/xv92b+8/t/57E7s0kIQbOWJMlOCCE8aVqjRYCHEWBP0yIh
        hKYcWxGib21apwWA+xmA+7MKgE2Z5DXfNJsAtwsAbs8KAPrxtwDgL/pnA+BmQfKa32wrANbj
        T67XD/A2/v+D9e0EuJ7r8Y1YPg9fY9n1tgCgD5M5gLuxbjHGYtkk+toBcLVk3ofxKVd29b8C
        oBcTFYsv7xPobUR7TtkrOmen0JH5PzFNfEdsM7010Pse/I49e4oBzMEaXCvofc1/o6flKcDF
        KPgeiwvq71ZAXGwJACvxK4qdKYnZWwHwCytbWQMnsSDej5XEjFa0XxA1yq2i98vwM9ObWyVx
        p2P9KI5jPwYz7X5i2YynAOdNHdKjuZgdGcizmfK16jes8zMCQBd+FAAEvMIVPFK/L5zItF+t
        /q35A10zAThXkrzKP8bh78edgvpzDQGgE9+bAJjOv6OzkafgGJYWlLdqS6N2nRUBbGxD8nLt
        3PCvyaziCxjR+tCPRK212RxT1gA2SFfuEA5KDxlzpe/+I7iMNxivSDYeYy7HNgNRY17UHJJu
        ZAN1ANKpeJ4T+4xLOIDu3EjNR7d0xffH+/m5mO7Y9lLUymoPil9l6U+SbJGe7boq5u8D3kmP
        XlmH5TlfJz1Bldk37A4hDGeJF+Gw9ITzvx/Bmr/GISys5S38OE2SZBv2YZf0K6hjSlBjNomX
        eIx7IYRnU3IVAeRglmA7NmMVVki36dqVdI6/ZK4jeIGnIYTxKv1/ms/wsKV6ZoYAAAAASUVO
        RK5CYII=
      </shape>
      <shape name='Icons/planet.png'>
        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
      </shape>
      <shape name='Icons/plug.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAGxAAABsQFhmCgO
        AAABBXpUWHRYTUw6Y29tLmFkb2JlLnhtcAAAGJVtUT1vwyAQ3f0rEJ3N2W47GGGWRN2iVlWH
        rsTBLUoMCIhM/30httsqDRN3vI97B4s0jnaUQaA4nrSnscPiYPaSpntuA0YXSDh2+H33gjbG
        SfRIHkiFeYEQYu4w0Nft00JPVYc/Q7AUYJomMt0T4z6gbtsWqgaapkyI0n/pIGKp/d0ssups
        pe+dskEZjXIt9uYcOowXzHyWOUf7Y6Q9ucxMejNCFBZqUsEtUlDDcJuVX2Ya/+WxZEI3Topg
        3JsxJ54TKX30vbAy52JwjfhDzpL02SmZsuZEvGbwr7emh6v4825hWS4vktP6Ubz4Bi8chpBh
        DuQUAAACxUlEQVR4nO2bO2sUURSAPwPZZVFLWYLFNiJYWEXWMmCXNFYpNL/DMlV+QDp/gtuk
        sbSIjUuasJ0SIqmWsEEkEDZRsMlazFlZIjv33rmPcwfmgwPLzJznnce5M3fBnx4wACYiA9mW
        Sl+VHnAFzO7IFXZJ+OqrM+D/4OcySKCvzoTlCUwS6Htzz1N/5mnfV9+bldgOcqcpgHYA2jQF
        0A5Am6YA2gFo41KAxZ593qyYWNbkuOqrzxGW9eypRW2OUNazpxaVOUJZz55ags4RbO8Bv0M6
        9SRoLLYF+BTSqScqsTwGTtE//U8lFhXWLAKMLWuhk3Kdb89CB+BI8PcDTSfoePzPKFEo+nYt
        wNcYQWj6bgrgePy3GEFo+k51BgyBlyLDijY0z75/3AcucX9+9xds9CvoX4rv4LieAb+AvRiB
        GNgT31nQAs5wG8EvFCPfl98uumfiMyu2Sdf+bifKyZkj4id/lCybCjwCjomX/LH4yJqHwCHh
        kz8U27WgDRwQLvkDsVkrVoB3wDnVEz8XG7Weoa4CO8AI+8RHorNa0WePTNcYbWBOfsPTR4/M
        1xiZCuBL9muMYhfAe41R7DU4piS11yjV+44bgqYA2gFo0xRAOwBtmgJoB6BN7ALcGPb7fOw0
        6Zp8A/ELcGHYv+5h26Rr8g00BYhegBPD/rdAp4Ldjuj6+E7CJuYJ0X4Fu/sWdjc9Yw9CG5hS
        HugtsOVgc0t0ymxOyei12nvMo3VLMapll0NHjjElPxOfVkT/SwrQpfi688Di2O/AB4rXZCPZ
        tg68AN4ATy1s3ABPgB/OkUZkF/+3xbaymygnJ1oUn8VjJz8kw++Ic7rAmHjJj8VH1jwnThHG
        YrsWdAl7OQypwcjfpUVxs7qmeuLXYiPba96GLsUz29QsLcpUdIKMeoo+wIY28Ap4DTyjmOrO
        p7sXIifAR+Az8CeU479/3dmghW8LxAAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/pointer downleft.png'>
        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
      </shape>
      <shape name='Icons/pointer rotated.png'>
        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
      </shape>
      <shape name='Icons/pointer.png'>
        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
      </shape>
      <shape name='Icons/pork4.png'>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAFeAAABXgFfbG56
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAzhJREFUWIW91tlr3VUQ
        wPFPki7aUpfaDdfQpIoLol2kotggPhQKIhZEAv0DxOWlL9EHd2oFS9unglA1WhfcaDViVURq
        qSgiLqSKC6Jet6oo4lJtwevDmUsnP5I0996kD7+H38w5M98zM2fmqNfrxvrQi7dx0Xjr2vmO
        5ryGP7DrmAIk54O4EIdwwTEBSM7fRWfItuBjnDKlAMn5PhzEWSGfhTfwDk6eEgD0hPNH0IUh
        7E762diD73H1pAJgcTj/DwtDdhp+w0CCmIbb8A92YG7bAOjG12HwPWxMylVxC+5BR5KfF9fz
        B1zTLsBHeDLCflWcbnlacCl+xps4O8k7sR5/44lWCxR24sEk2IRvsSTJ5uHxKMxbMS3plgTc
        AaxtBWBl3PPFIeiKQvwJV1QWr8E3eF/qjujATZGupzGn2SIcilMcnwzejn9xf0MeujnYFrq7
        MSPpuqOOXsP0ZgBOiFO9jJmV/H+Cr3BtJRp9+CJqaFmSz8fneGzCALFxYRgbxookn4GBCO9O
        LEq6Wdgc0bg5yXujmC+bMEBytiE2b6xE48yI0K9YV9m3Ovb0J9k2vNQUQNq8Avsj/CsrunX4
        BS/i1CTvD4hlqR4OOcooH+96zMR9Ed4HKoW4AM/jx8btCfl2aXQr0/SplgAq0RjGpzmnSiMa
        jIKbn3J/WIxupWMelhpY0wCpNu6NaGxuXLGAeBXPprXPYLASlWFjTNEJASRjS/ElHhWzAecE
        2Lnx3xe1sCDB78FenNQWQBjsidxvqFR8PvVbeCj9z8XrRhnlTQOEweU5t0rDOtg4Ic5XhtQN
        aU8HbsSfyvCa1zJAGHwO25PxYdyR9GsCasDIUd4T6TiA69oBWBq5PyP+V4fDPKRWKUNtyMie
        MV15Y+5vGSAM7cbW9D/aKD89bsrvuEXpLzuUR1B3uwB9+MuRPtCJh5UHzJWVtf34Tnnm1TTG
        fzsAYfiVuGbHpXoYcKRnzA55l/LyqqGnrVtQATgRH2CXke36EmW61nB9hL2G3hH72wUIZ4uU
        98RnuLxSbOtRH835pAEkZ3cqXXCL8lboGuvkkw6QQC7Gh8pr6YXxnE8JQIrGXZGWMZ3X63X/
        A/yfYJ2DyEglAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/portable video game.png'>
        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
        MqYAEMnY/wNXySoFtf3HXwAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/postard.png'>
        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
        EvZ/xDLLJAxqR84AAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/question.png'>
        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
      </shape>
      <shape name='Icons/rectangular43.png'>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAAARVAAAEVQGCrKo+
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAmNJREFUeJzt2rFqVEEY
        QOEzUattLbSytU2VNoLgO6TwIazsxM7Sx1EIaKmVL6CFRSBgKluLscgquG6be5Oc88E0c1n4
        4T+wl2XHnJN4Haw9QNZVAHIFIFcAcgUgVwByBSBXAHIFIFcAcgUgVwByBSBXAHIFIFcAcgUg
        VwByBSBXAHIFIHd33+UY4wHwCBjLjpMrMoHvc87z/5/Myfav4RvgLXC2/UDn9p2z7Y43f/e+
        Xf5j4Os1GLCzzPkKPJ5zMoB7wGfgkJh8AY7uAC+A5ysPk+U9BH4eAE/XniSreTqAH8D9nQev
        gTdcfl/k5hvAS+DVzv3FYP+Sn8w5P171VFnOGOMY+LB73w9BcgUgVwByBSBXAHIFIFcAcgUg
        VwByBSBXAHIFIFcAcgUgVwByBSBXAHIFIFcAcgUgVwByBSBXAHIFIFcAcgUgVwByBSBXAHIF
        IFcAcgUgVwByBSBXAHIFIFcAcgUgVwByBSBXAHIFIFcAcgUgVwByBSBXAHIFIFcAcgUgVwBy
        BSBXAHIFIFcAcgUgVwByBSBXAHIFIFcAcgUgVwByBSBXAHIFIFcAcgUgVwByd4EL4P7O/fEY
        4xMwlx8pV2AAx3vuLwbwDni26Di5Lt4fAKdrT5HVnA7gHvAZOFx5mCzrC3B0MOf8BZwA31Ye
        KMv5BpzMOX8x52TOCbAB3gJnXL78dW7fOdvuePNn72O7/H+MMR4Aj7h8e8zNN4Hvc87z3Qd7
        A4hHPwTJFYBcAcgVgFwByBWAXAHIFYBcAcgVgFwByBWAXAHIFYBcAcgVgFwByBWAXAHIFYBc
        Acj9Bha9w55wABR1AAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/recycle arrows.png'>
        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
      </shape>
      <shape name='Icons/rhomb.png'>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAAAOPAAADjwGKNpDp
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAA8NJREFUeJzt3dtt21AQ
        hOFhkBZShqpwYaILSxXpIi7i+IUClJimeDnk7szOAgsIlh7W+j9YftPQWkPVGYZhBIDW2hh7
        Sdz8jD4gaqb49+lxWQQ/og+ImOf409wffw2qTTkAM/EfUxJBKQAL8R9TDkEZACviP6YUghIA
        FuJ/TPv/lEEgD+BF/Ldp6yJorckugBFAm9m/AG5Pr7tNP5t77Rj9e5z6HkUfEB2/OoLwAzLE
        r4wg/IAs8asiCD8gU/yKCMIPyBa/GoLwAzLGr4Qg/ICs8asgCD8gc/wKCMIPyB5fHUH4AQzx
        lRGEH8ASXxVB+AFM8RURhB/AFl8NQfgBjPGVEIQfwBpfBUH4AczxFRCEH8Aenx1B+AEK8ZkR
        hB+gEp8VQfgBSvEZEYQfoBafDUH4AYrxmRDEHyAanwVB9JsjHZ8BgeMXR+D4xRE4fnEEjl8c
        geMXR+D4xRE4fnEEjp9gIxE4fpKNQuD4iTYCgeMn26sROH7CvRKB4yfdqxA4fuK9AoHjJ9+z
        ETg+wZ6JwPFJ9iwEjk+0ZyBwfLLtjcDxCbcnAscn3V4IHJ94eyBwfPI9isDxBfYIAscX2b0I
        HF9o9yBwfLHdisDxBXcLAscX3bUIHF941yAYpvh3fJ0PAG+ttT8zz3lIZhiGG4DfAH7NPP0u
        /8WRnhfjjwDdxYqPgOcXG4HQron/DwAj0Nm18b8AMAL+3RJ/FoAR8O7W+N8CMAK+3RN/EYAR
        8Oze+C8BGEH+PRJ/FQAjyLtH468GYAT5tkf8TQCMIM/2ir8ZgBHEb8/4uwAYgU783QCMQCP+
        IQBGwB//MAAj4I7fBYAR8MbvBsAIOON3BWAEfPG7AzACrvinADACnvinATACjvinAjCC/PFP
        B2AEueNfAsAI8sa/DIAR5Ix/KQAjyBf/cgBGkCt+CIDKCLLFDwNQEUHG+KEAKiHIGj8cQAUE
        meOnAKCMIHv8NAAUETDETwVACQFL/HQAFBAwxU8JgBkBW/y0ABgRMMZPDYAJAWv89AAYEDDH
        pwCQGQF7fBoAGREoxKcCkAmBSnw6ABkQKMWnBBCJQC0+LYAIBIrxqQFciUA1Pj2AKxAox5cA
        cCYC9fgyAM5AUCG+FICeCKrElwPQA0Gl+JIAjiCoFl8WwB4EFeNLA9iCoGr81hqG6Q2QnWEY
        Rix8Meb0+NsvVmytjedclmPkAQAvEQBF4wNFAACLCOamRHwAKPPVsVPQ9xUvLRMfKAQAWIWg
        VHygGABgEUG5+EBBAMAsgpLxgUL/BM7N9I8hqsYHgE842eMhkXXTYgAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/sandwhich.png'>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAJaAAACWgGTP02s
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABMBJREFUWIXF13vM13UV
        B/DXoacHFAnFCArNQqUska5ujrmQlTeyGW5dRvyRpd1vDttK/rEyt6I/irLSWW3asrVKVoQ3
        xKIisSi7GCNN0JKZUBmilcLpj3NwP58eLlvP4rN9fr/v5fP5nHPe55z3Od/ITAdzjDuo0g9U
        gYg4NyKuj4iNEfHFiDhhzDTIzH1OLETix1iOTdiB1+1v74HM/QkfwnZ8C+P62dPw5Vbi6P9V
        gRgtCCPizZiEW/EHXJiZVw28PwQbsCEzF42GbESMxzGY3vMJrMnMv/2XC/B0LMFhOAr/xC9x
        b8N/2ijovBOPYELfH4dF+BzW41/YjW24vw15CD/B4qe4AKdiHe7A97Ciny9oBaaMosCL+t3P
        Wkjir7gBl+JMHDHKvlMajVcOKnApzsFs/LshG8aduGkfMXJZW7wIxx9Q0PFGPIBbBhVYi8Px
        9gHrP4admDkW0d5nBjbiXfhmo2ES7ugFq3EeXorHcfFYCe/zz8TmRvczmAuvwG14dvvyENyO
        X2FojBVYiQv6egXm6J8N+CC+hPOxCyePsfDndHxNwvjOoPNhFu5uq8/Fg1g+lsJbgbdhfV+/
        plNy01ALn4hp7Ztn4fNGjIiYiCv3xIxK2zWZuWvk2r2Ms/HDvl6Cr+Ad4zJzN36qWG96L3hs
        hPDJKkAXYrLKmG/gvoi4PCJm7Utys+KrsSYiFuKENuKGPfDciAsxTxHKXcodc/Am5Z7HcB1W
        qXowrHL6FsV46xQ7zhgB/bjet0GhtwUf6vWvh0P78KNUcDykCCgH5q/b+rvwSVyDD2uGxEx8
        ot+niqNVuEll1r14uSKu36pUT5WWzsadAxp/HyfhJSpYTsarFIFcPbDutBZyJWYPPD8W78bF
        uEiR2wQV7I8q1tyKh3EkVeMvHzjgPa3lKsUPd+NHWLCX6D4V32lXnIfJo6yZiz+1MuvxNdya
        mUI1GKvbJ/9Q9Hucql6bsD0zd9rPiIjn4/0qt7crItvcCE7DUsxvZFfi4cz8bGBxW7EYf+zz
        jug5oe93qQZkG+5T5XXk//2ZuSMihhWVz1HE8+dG8rJW7hRVBxZk5tahzLwmInaqQrE6M69r
        i96r+oIfqLSbMqDYnnmiqqKvrS3x91ZmS1u/GTNa+EycgRfj95m5FYYi4lC8ActwQUSswNQ+
        eAuGM/OKvcD+MlVUNuJ4fKTROrEFT1GNyXfxBZVpH1cpjur5DsODmfnziJiHK/BcFd3XY0lE
        XKQ4YkhxwDNV0aLYbb4qah9Q6TVexdMjfT0LX22jLsnMe55UIDP/EhEzIDOXjWLlOpXzx+Lb
        ioBe0PNR5edzcFtmvmVg35EqzZ7oubTXzsenBxGAwyPifZm5fOCABbhE9QVLM3NtH7oLj2fm
        znbfPMUlyyJim0rH3/W63XgG3oqjVbu3/SkGZqaIuApnNWQb8TzVNn29rTyj5zgVmJPamjWK
        xm/OzO0R8UKV89NVUZuqasfNiktW4aOZefVIBeaqBuHGFrBT+fSY3rwKazPzgQGEJrb1p6tC
        E6pm3K4a1XsUxU9t2D+F3+CsbHZ6UoE+8PSGalhx/0r8YnDxvkZETFMUfpJqbmc37DsazWtx
        7UhSG/XD5P85DvrX8X8AMkP1FS8ku4AAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/sandwich.png'>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAA3iAAAN4gG0rs/Q
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAy5JREFUWIXF11uIVlUU
        B/DfGUctE0wlZWKoIEWmoJKhqV6MEqKIIDN7ScaCIuxFkh7CjKQbFZFRgUGEFSXSS9ZLkWBk
        RVpCFyoh8kEUK7qYNNptmt3D3uNstue7lsyB/fCts9b6//fe/7XW+aoQgsl8eiYVHb3dBlZV
        dQmuwTxsx44QwpGOE4UQOl5Yh1CsUXyI29HTdq4uwOdgrIZAvj7H0pNFYFkGdDX6MIxXcLQg
        8gYW/C8EMBVr8HNKfqjG50xsxj8ZiaNY9Z8I4Hp8U+xufRP/xfig8N+MGR0RwCDeKxJ9i+WZ
        z0rswWAROwUPFKfxJQZaEkA/Xi7E9gvWYlrheymeRX+DXFfiUJZnBMO1BDATD+JYFvAXnsKc
        DvSyCBdmv+fh7eIk7zxOQOyIt+G7wul1LGwC1IuzauxrsaGwVbgny/03lsAQviiA92BJdioD
        DQisxK7yWlqczmMZzpvwVQH+qayTJfWG/EjLnbULnvyXZ1g/we6CwPfoywJmYXEnIFnsEHam
        +9+IF4qq+HpcpSMFif04rxvQBDwND4vzoVnLfjSv91KAh3FFE5D78RymFPaLxFnQDDjg3SRi
        y1Lg2TV6+BM3t0MgJVsvlm2e41gS3hPYitewAqekOD/gcbFMTseOGrb3tjjyAXxSE7cLixrE
        nI+nmajNrZguDp2XapI9j94iSQ/uxu81J7dObMc9uAtbsElsartFMW4cT7QmGXZidrJtqCHx
        Fmam9wucOHACPsMFyedcvN9AAx9her6bG9JO9uKcZFtVc6cHsc2Js38UD2Fqil1torq2J8AD
        4lS9D3OPt+KMxGX4UewFg8m2FL822MX42ouh5N+Pd5L9AK5qqp8acSwUR+4Irs0Es78GeAxP
        mlD0cEb2Rcxq2TMaKPQMUcGjuCPZ+vBxBr4Pl6d389O1BLGfXNd202pSWjOypI+IZVqJ34G3
        4NTkd2O6tvFKmttR12xR3z14JiV/Fadl72aLpRXEobKiq7bdllOs9TH8JvaILTiSwLdhfjfg
        bRNIJG7CH5kGDss+rbpdVUre1lNV1cW4NYFvCiEcbDu4Uc5OCJyMZ9L/Hf8LKqrdZZdnXjsA
        AAAASUVORK5CYII=
      </shape>
      <shape name='Icons/screen54.png'>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAAALlAAAC5QEb/l57
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAA3BJREFUeJzt2s2LTXEc
        x/H39xoUouQhZUEhSYokoUgUUspeWVhZYW9lyRYLG/kbsLcgpVhMnsrDeChMKamRhvG1uDOT
        h3Mm4p7fmfv5vOq3md+p+51+7+aee+ZGZmK6OqUHsLIcgDgHIM4BiHMA4hyAOAcgzgGIcwDi
        Buo2ImIVsKfBWax3rmfmy8qdzJxcwGLgAvAUSK++Wo+Ac8D8n878h8M/ALxtwaBevV3Pge0T
        5x6ZSURsAW4yxVuC9ZVPwObMfBjAXOAesLrsTNawQWDLDODo+DItS4EnHeBg6UmsmEMBjABz
        KjY/Ahebncd65AQwu+LnI0H3zrDKi8xc0bORrDER8QFYULXnJ4HiHIA4ByDOAYhzAOIcgDgH
        IM4BiHMA4hyAOAcgzgGIcwDiHIA4ByDOAYhzAOIcgDgHIM4BiHMA4hyAOAcgzgGIcwDiHIA4
        ByDOAYhzAOIcgDgHIM4BiHMA4hyAOAcgzgGIcwDiHIA4ByDOAYhzAOIcgDgHIM4BiHMA4hyA
        OAcgzgGIcwDiHIA4ByDOAYhzAOIcgDgHIM4BiHMA4hyAOAcgzgGIcwDiHIA4ByDOAYhzAOIc
        gDgHIM4BiHMA4hyAOAcgzgGIcwDiOsBYzd68iJjX5DD2/0XEQmBWzfZYAM+AlTUXvAbe92Iw
        a8wSYFnN3rMB4D71ASwfX9afBjvAldJTWDGXApgJ3AXWFx7GmnUb2BaZSUSsA+4AcwoPZc34
        AGzMzKEOQGY+APYCw0XHsia8AnZn5hAAmTm56N4tngGGgG9AevXFGgOeAKeBRT+eeYwf/G8i
        YhbdjxADlRe0x07gcqHXPgzcK/Taf+oL8C4zv1Zt1h5uZo7SfQ7QahGxtuDLv5n8UzpN+VGw
        OAcgzgGIcwDiHIA4ByDOAYhzAOJa/ZRv/CHPDmDRFJetaWicKkciYtcU+8PAjcx82tA8f632
        UXBpEXESOAvMKD3LPxoFTmXm+dKDVGllABGxge53FKb74U/4CmzKzMHSg/yqrfcA++ifw4fu
        W+3+0kNUaWsAdd9Uns5a+Tu1NYBrdP+N2S9Ggaulh6jSygAy8xFwHPhcepb/YAQ4lpmPSw9S
        pZU3gRMiYjmwlak/BrbZMHArM9+WHqROqwOw3mvlW4A1xwGIcwDiHIA4ByDOAYhzAOIcgDgH
        IO47FRofGHBNL7AAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/shape38.png'>
        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
      </shape>
      <shape name='Icons/shopping-cart.png'>
        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
        I877Yuhf7lyNrOtrZesAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/skull-and-bones.png'>
        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
      </shape>
      <shape name='Icons/skull.png'>
        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
        GCkGqSK8/P/Y9wmNpF9fxAAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/slip yellow circle.png'>
        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
      </shape>
      <shape name='Icons/slip.png'>
        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
        dwAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/smiling30.png'>
        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
        TkSuQmCC
      </shape>
      <shape name='Icons/social24.png'>
        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
        2x3Wwf8BToZLsxTUVQAAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/spaghetti1.png'>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAEMAAABDAGWp/hQ
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAfhJREFUWIXt10uoTVEc
        x/HPHymECeUV01uIgTJARiZmUtKN8pwwM6MwM/Ic0JkoRSGDO1NCiKu4Uh4D0k3eb4k8cy2D
        /VeHc52Q6w6cVf/23u21/r/v+q3/WrsdpRT92Qb0q3oLoAXQAsCgX+0YEUMwDdMzRuE+rqGj
        lPLyTwB6dSAipkTE4hQVEfNxCyewCC9wDsOwGg8jYntEDPxdgPjxJIyIybiejwfwCQuxHDcw
        B7MwWjX703iK7XiLxaWU1xExFd2llHfNAHpzYELd/ZIUm4lx6MIC3MVFDME+bMHSBOqMiL24
        igcRMaapBaWUhshEJaOG3XiElTiFj+jBc2zAQVxOoI66sQVb0Y5JvWr9IDwYh3APhzPxmRTb
        hmfYiLmYhzV4iE3ozOt4fKkD+JRuvcIlzGgGsCrt3ZEDn6mKb08m242d6cALXMFavMcKnM88
        F7L/kZxEN45iV+YbXqepPW2upXhXzvhsru+btLcHxzLxCVWBfsh+PTie0DXV+n/OXF9URf0B
        t/E4x9TQHriDifqn3Q2MRZtqT/+rVlRb9ua3dRiA/b6v3r6M9Q1FiIE4+Q/Ea812QZuqkPpK
        /AlG/hQgIbb1IcCypgdRAoxQnXp/W7xTfnvqo+FjBBExG+swtOHln7Xn2FxK6W7Qav0XtABa
        AP89wFfldqCvNnuCAgAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/speech-bubble19.png'>
        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
        crdlKXwe2SwAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/sport136.png'>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAAAOdAAADnQG83EOq
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAD4JJREFUeJztnXfwVcUV
        xz/7A0GKKFhQQKNREEUsASwJKkYduwbFRGOJGXtHo8QaU8SWYtAxkxi7DkEj1gS7iEQSFQ0K
        iiKgAopIUen1d/LHub/4uLyye+/uu8/fu9+ZHQZ4e87ZPd8td/fsrhERctQvGrI2IEe2yAlQ
        58gJUOfICVDnyAlQ58gJUOfICVDnyAlQ58gJUOfICVDnyAlQ58gJUOfICVDnyAlQ52iZtQH1
        AmPM+sAuQBdgIjBNamAv3tSADc0WxpgWwCXACcAOrN3gFgKvAZeJyBsZmAfkBAgGY0wP4F5g
        zwo/XQ38FviViKwIblgMOQECwBizD/A00MYh20vA/iLSGMSoEsgngZ5hjGkD3IWb8wEGAD/z
        blAF5ATwj2uBbZPmNcb09mlMJdTFEGCMaQvsBHQDJojI9EB6OgLzSNewHhCRkzyZVBHNtgcw
        xjQYY843xkwGFgGvAiOBacaYucaYx40xO3lW24f0ddrHhyG2aJYEMMbsAIwFbgF6sm45NwGO
        BMYbY4YYY3zVQ18PMrY3xrTzIMcKzY4Axpi9gAnAdy1+3hq4EXjaEwl29CCjASVtVdCsCBCN
        9fcCrRyzHgic78GEqR5kAHzkSU5FNCsCoK25e8K8Q40xW6fUPz5lfoAZIjLfgxwrNBsCGGM2
        Ac5NIaIdcE1KM15PmR/gTQ8yrNFsCIBOwExKGf3SZBaRucDDaUQAw9LY4IrmRIBUzovQwxjj
        On+I42xgTsK8t4vISyn1O6E5EaCHBxnrAdulESAi84AzE2T9GBiSRncSNCcC+FjdE+DT1EJE
        HgeOcpA1EugrIgvT6nZFcyLARA8yporIlx7kICJPoOsCdwCltnlnASeIyKCo56g6ms1eQLT/
        /n5KMcNF5AQf9hTCGLMeSobvAJsDbwFvishnvnW5omoEMMb0BPZCo2JWAONExNfCSZOOvwOD
        EmYXYICIvOzRpJpHcAIYY1oDVwI/Z90VupnAi1EaLSIzU+rqDEwGOibIPkxEBqfR/01EUAJE
        zn8K2M8yy1TWJsTnCXSejC4Hu2AKsKuILHPV901HMAJEAZEPAUenEPMOXxNijIh8Yan7UHTy
        tYXFzx8DzhORTxJbmRDR3sXuaKRwC+AzlIwzqhUxHJIAtwOnexTZCPwXGI0SYqyILC6jvxO6
        HTwI3fWLYxZwoYg84tHGiogmhEcDZwHfQ9ce4liG9oZT0Int//8UkQVe7QlBAGPMUOAK74LX
        xmo0rPop4E4RmV3CllZoPP4eQCfgbTQq6KPA9sXtaAlcDFyEfgkkxTyUEHFyTBOR5c7SRMRr
        AgajM+pqppVoaPV6vsvjqU52RDeKQtbBGuBDNBr5FrSXaVHRNs8FPRHtqqtNgKb0GtA1a4fH
        6qQnsDSj+piOLjSFJwBwGLAqQ+c3pfeAzbJ2fFQnLQnf8iulVcDuQQmATmayYnmx9DbQqQYI
        cF4N1IWg84TWxWxMvRcQxbE/idtBiC+AGWl1l0Fv4L6A8m1xUNYGROiO9tDrIiXDtwY+wY2N
        i4B+Uf5tgdOA4eg3sG/mn5xh629AiZ51629KI70OAcBmwAeORqwADigj82B0Ru+r0AvI6MsA
        DTHL2umFaTmwkRcCAB3Q2DUXA9YAgyr0Jh8GKHjfDHuBOTXg+MJ0WtxG5zmAMcagcW+7OWY9
        R0SKxssZY7YDXkZJ4Bt7BJBpC99H0D5G506SMP+6W90JWP0T3Jl3VRl52+M+j3BJ12TU+vvi
        /8vo+Uh2G2BndJn7SnQOZZO/EeiWaggA3nA0+o9lZPUizOSvMB2bgfO7BiR1zxI637HMPyQx
        AdCw68UOxj5AtN9QRNYuwNzAzhdghyo7v22CRuKSbi2h90rL/G8V5nPeDDLGfIrdNuso4Aci
        sqqIjD7As+jmTEiMEZEBtj+OtpF3RgNK5qJjblP6XCpUVjQ/GgkMTGqwBRahy92LYrq3wX7O
        sbOIaAxlAobbjDevAG1L5N8D+NJCRtq0Bg3ysCnTVuixrnLylqG7bs8Cf0Vb3InA3lH+FsB1
        VSiXAOeWKMcrlvlvSDQEREq2ruDAiUDHEnn7o7djVaOSxliWZwNgkgd91dwHebdEWc6xzD+D
        plCAhOPcAIp/sz9CiTX4KI/L/CFtWgysb1GWM6tok8/0/SJl2QT7hbR9ExOgYLLzY+B64FI0
        orbUbw8km82iwyzK8Y8acGaS9EjK8tyeigAORDkUXYbMopL+YmHfqBpwZpK0GtiySHmOt8y/
        AGgV9GSQMeYo4FGKx+RVA0dEM/NyCLkrGRIt0IOocTyODn+V0BE4LGTLPwa/GztJU8lgiMjO
        XugXQ2g7FgI3eJb5OUX2+YH7LfOPCOX8o2rE+QLcVqySYvZeHtiG1ehQ2Ar/G0QnFSnPwZZ5
        3w/h/G3Rb+asHV+YlqCTo3OAbcr0WC9FzvKt/8ICPdd6lv1qkbK0sCTaohAEeLpKTr0CjS9I
        kncy8Af066R1zP4OwK5oL3YB8Ht09/N1tMt10bMKuDwmvxv+1wz6FfHDMIt8o307v0sVHN8I
        nOmRbIuBJ9CDGt+yKGNbNNL3IOAMYCi65zEWnVAuR9dIXgD2LCHjYc91ck8RHV3RZeNy+U71
        TYDjAjt/DfDTAn1nBdDxDrq20dl371hg9wDPNi8HNimi51RKD2kPiwi+CzYooPNXE4txR3uc
        UOcQlhSSLQAJfCw/F6bLSujpj85tlqNDz2Q0DrMhBAF2DOSMVZTY18d/dxrXu08gAvjuvaZU
        0NcaaLnOv3sulEFj0H0WbAW6rVxKZzcqj3Vp0pOBCNAO/7ui66wMVkpeVwJFS3abR5ErgIEi
        8lgZnbPQ794JHvUW4kCL1URniMgS4B7PYm3vYVjLEN/M3hA/u35LgQMd9Dagk9AR6Dq3r1a1
        OEQPENncA79zmLsz7QEAROQr9LMoLRbjEFUrIo0iMkJEjgM2RSc/Q9E7BSSFHR+kyGsje5JH
        ee7vHwRidm/8MHoqHj7H0PP4p6A3lrie1vlRoDrqAjzvqZ6a0oPOdgTs3sZ4KtQbwAYe7WqJ
        hnFdh84byun+EyWCWlPaMBC96MGn84UEn60hCfBDjwV7DmgVsCWein5OTgJmoyuMZc/VJ9TV
        Frg9gOMFeDaRTQEJ0BK/sfHDQ7TGaiX0ksj3Ajl/AkVWAm1SsIAQEVmNst0Xjkc3cL5RiB6v
        GgL8Bz0F5RtvovGBya6aDcz6zfEfF3Bp1q3ZofytgWc8l78wvUaJCGxrG6tQCX/zXOhGigRB
        1GLC/sxekvRvYMPUNlahEvoHKPwq4OCsHVyh3CGjjP6Fpy+jatwV3A6YBnT2LHoJsJ+I+Hin
        xyuMMRujL3+1DyB+DHC4lLkk0wXBJoHGmNbGmAvR1TzfzgfdTBkVXRNfa7iYMM5/ETjUl/MB
        /0MA+vl3Ol9fZBA6TQc2z7rLLyh/J8Icf3sGaOPdXo8Fb0BvoJhaJccXpglAh6ydH9XDbwKU
        759UiGzOlADotaS+I1xc04tYXI0a2Pkdga88l+tVAq2CiqRcCDLGHGyMGY+eie+VRpYH7Ide
        X5MlBqNRxT6xK36exCuOhEzfB42CDdWak57UmUGgrtKiTjYi3L0Hc4CtMu8BjDH9jDHPoJ8i
        /V3yOuBmYH80iNEVW0Z5s8CFaDBMCGwGPBHkWXlLdvdGD3mGHMPnA2fE5hVJeoLDM2j9HajO
        raCP4nlDrFLBuqPLmSEPTy4EfkmRWTzJImcPyYAAV1fB+U3p2uAEQO+8uYOw154sBW4CNq5Q
        ua7HsXpX2fkb4B6DuBBdzk1ad8cHIQC6e3cLyc/c2aQVwK3AFhaVu5Oj7NkZtP4rEtTBUPQ6
        l+kJ63AZRc4DpiIAuogT8g6f1cCdWJy/K7DpIkcd91fZ+e1xD+1aRNTrRQRPumr4KR5eR2kq
        yK8DOr4R3RLukaCCXa9vqer18MBlCerj+piMI0g+xxpPyuXhJhaGmuQ9RsIxGb1MYYmjvi5V
        dH473G86XUzxQ5xDUtTxiLQE8B2wIehliqnGKNxP0E6qIK89+nbxWcAl6Mph4oCKhE67qYy8
        +1LU99VpCDDRo+PH4ukwJTpRctF9cwk526BvCxY7gdOIXvywm6NtbXH/OllCmces0PCxcQnr
        vRE4JikB5ntw/Hg8R+jg/trWIbH8LdCWbjOMrESvfrXaTIrkutbR7yzkdib5NvoSVyI3ESDN
        AY5J6OFNb46PjOqE27xkBdAuJuPmBOWpOJ6ird/1oqelWJ5wQh/icJ37NKUZtnoKCZAkdu0D
        9LOxwbfzI6OOdbRndCz/viQ/dFm2K0WjfVxlFh2eyug4JoX943DYEAPdxbI90z8DvV1inYsG
        PBPA9fTMFQV525N8gUXQByxK3XfcBj055CJvGRaLXkV0/SJFGe6z1hMp24Hyk5rP0BuzqrLV
        ivvjUf0K8rr2HsVS0bMH6I6fq6xhKerhwRRlGGKlo0BZB/Qmy1no+LsSvVtmMCXu/g/k/O0c
        CzqfgqEIuNEDAR4oYtf66Oqbi5zlpFibQHucSu8YlEprgCOsCRBT3JIAAYiWhT7bsaAPxfK/
        4IEAbxWx6/wEcoo+7+JYH10TEK8pLQR6ORMgy4S+OeBSyNNj+X3cUbQoJrM12jO6tv5unupk
        d5LfvvpyOdlBbwt3hTGmBe733DwX+/s7HkyZEvv7AWhLdMFdovcXpYaIvIYeYU+CvY0xxd8N
        JuDBkITYEv0qscVUEfko9m9vebBjfOzvBzjmX4leNukNIjIcvdQiCUo+Yl1rBOjo+Pt46wdd
        QUyLuIzujvnvFpGZHuyI4yr0PQBXdCv1H7VGgHWemKuAYgQYhT5DmxTT0A2yQnzskH8Vnlt/
        E0QnBCcCbztm/arUf9QUAURkEnqyyAZz0ONScRmCHk1LElXcCJwieodfIeJDQjncKyIuhHGC
        6LnAI9GtaFs8WU5gTSXsl1ovqiDnAtyXU28sIasldk+zzibBql/CeuqPXejeu5T5pM/c4SUK
        d2+FQj2IxXEpdPI206KS5lMhmgh98LLcaulKoH+V62kg5cP4vgC6l5WRtbNLFGw9dAUyvu4+
        Gw3Bto6NR78q/oye149X0Dz0fZ2S+/QxWd3QeUd8p3I0+hxrFnXVC90AKuztGtHLOr9dKX/w
        CyLSwBjTBj2U0gEd08eJSGMKeZsCfdAKmigisxPK6YjeNbgM+FBEbOctwWCM6YwuGC0APhKR
        T6zy1TIBcoRHTX0F5Kg+cgLUOXIC1DlyAtQ5cgLUOXIC1DlyAtQ5cgLUOXIC1DlyAtQ5cgLU
        OXIC1DlyAtQ5cgLUOf4Hi6Fo9QQlbToAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/sprint.png'>
        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
        OEDG0XCAjOP/LmO0MahUqRIAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/square312.png'>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAAAiXAAAIlwHp+jNd
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAehJREFUeJzt3bFtw0AQ
        BdG/rsE1KBBchEugu2I3djGGAtWgHtaBHVhKyEDEEZx5wGUXLIgBD2BwrO6OuF5GD6CxDADO
        AOAMAM4A4AwAzgDgDACukkyjh3hw7e7L6CG2UFXnJKfRczzqna25u3PElWTewfO9Wx4BcAYA
        ZwBwBgBnAHAGAGcAcAYAV/n9ILDko7u/th5Gz1NVU5LPpX2+AeAMAM4A4AwAzgDgDADOAOAM
        AM4A4AwAzgDgDADOAOAMAM4A4AwAzgDgDADOAOAMAM4A4AwAzgDgDADOAOAMAK6SvK/Y993d
        t41n0RNV1WuSt8V9XhfP5hEAZwBwBgBnAHAGAGcAcAYAZwBwBgBnAHAGAGcAcAYAZwBwBgBn
        AHAGAGcAcAYAZwBwBgBnAHAGAGcAcAYAZwBwBgBnAHAGAGcAcAYAZwBwBgDnFTEHtfqKmPj7
        +EPy9/FaxQDgDADOAOAMAM4A4AwAzgDgDADOAOAMAM4A4AwAzgDgDADOAOAMAM4A4AwAzgDg
        DADOAOAMAM4A4AwAzgCU3tmauztHXEnmHTzfu+UbAM4A4AwAzgDgDADOAOAMAM4A4CrJNHqI
        B9fuvoweYgtVdU5yGj3Hf/X3hUpQHgFwBgBnAHAGAGcAcAYAZwBwBgD3A9iT/2S9ajU+AAAA
        AElFTkSuQmCC
      </shape>
      <shape name='Icons/stars44.png'>
        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
        rkJggg==
      </shape>
      <shape name='Icons/support.png'>
        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
      </shape>
      <shape name='Icons/thumbs4.png'>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAAAtsAAALbAFSSUY1
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAACkZJREFUeJztnXuwVVUd
        xz9rLSgsQcc0XzmTKCojKAk2g/kgZIYKHSUoNG20h81kMZgPeo4DVpYakg/8I2NoKhptmjEd
        0dAJUBGjhybKgJQ8NDTRUskChLVWf6x96t7Db5/DPWfvc87ee31m7nDPb+2z9o/Z37v22mv/
        1u+nvPdEqovutgOR7hIFUHGiACpOFEDFiQKoOFEAFWdQtx3oZbQyJwBjgGHJz1DgZWA18Izz
        dk8X3csEFdcB+qOVGQbMAD4DjG9w6A5gFXCj8/ahTviWB1EAfdDKzAGuAd41wK+uAmY5b/+Y
        uVM5EwUAaGUGAT8GLmmjm38Bk523T2TjVWeIAgC0MouBT2XQ1RvAcOft6xn01REq/xSglTmJ
        5hf/LeAp4JUmxx0IfDELvzpF5QUAzEqx/wO4HDjKeTvUeXuK8/YwYARwKXAnQRj1zNTKvDMX
        T3Og8rcArcyTwAfqzKuBjzlv/9nku98Hvio0fd55uzAjF3MljgBwgGB7uNnFT7gVeFuwX62V
        Ue251RmiAOQLOHhfvui8fQn4hdB0AnBOO051iiiANgSQ8ANAuo9e05o7nSUKAHYLtn0WgPN2
        LfAboekMrcwpLXvVIaIA5BFgoO9IbkqxXzDAfjpOFED7twCct8uBDULT9JY86iBRAG3eAvpw
        l2A7WiszroW+OkYUQAYjQIIkAIBPtNBXx4gCyGgEcN6uA9YITT19G4gCyG4EAHkUGN7LTwNR
        ANkK4O4U++QW+8udKIDsJoE4bzcCzwlNJ7fSXyeIAsh2BAD4s2Ab00Z/uRIFkM1CUF+eFmwj
        tDIDDTPrCFEAGd4CEiQBaGBUG33mRhSA/NeetQCgR+cBlRaAVuYA4CKh6flW+3TebiVEE9UT
        BdCDXAUcJNgXtNnvOsF2aJt95kJlBaCVORi4Qmha47x9tM3u3yvY/tpmn7lQWQEAXyds9arn
        9nY61coMBoYLTdL6QNeppAC0MkcSIn7reQNY3Gb3w5EnllEAPcS3gCGCfaHz9j9t9n18ij0K
        oBfQygwHPic0vQnckMEpJAG8to9Rxh2ncgIAbkR+zp/jvH01g/6PE2w9+dcPFROAVmYSME1o
        Wkebk78+SCPA+oz6zpzKCCCZnd+W0jwrw2QPkgDiCNADzCJs2KjnXuftw1mcQCtzIPIaQBRA
        N9HKHAFcKzTtAq7M8FRpL3yiALrMTciLPvOSII6skNb79wBZniNTSi8ArcwZyPv/twLXZ3w6
        SQAbnbfSK+eeoNQC0MoY0mf3s523/874lFLkT88O/1ByARCWe08S7I85b6VdvS2TiE2aA0QB
        dAOtzFHAd4SmncBlOZxyBLCfYI8C6DRJcoZFhOSO9cx13uZxUdICP3taAGXNFPol4GzB/hRh
        P38epEX87NLKvL/PZ5Xye7PPAznWAi84b6WA1/5fKluOIK3MCEJodn0U7h7gVOetFLadxXkf
        BD6SR98tYgmPn+uAlcAC6U1nqQSQTMQeQ07xer3z9ps5nvsl4PC8+s+AvwPfBu7s+1haNgF8
        Dfie0LQeGOO83ZXTeQ8BtuXRdw4sAc5z3loo0SRQKzMamCs0OULatlwufkLP7vwRmALcUftQ
        CgEkb/p+CrxDaF7gvH08Zxd6MuS7AV/QynwWSnIL0MosQI7x2wKMct5KGT2zPP+xwPvyPMcA
        0ISglFOBCcgBqhAeT0cWXgBamS8jv+e3wCTn7YrOetQ7JClr55Oev3hKoW8BWpmPAj9MaZ5d
        5YsP4Lzd5by9nPQsZp/sNwJoZUYBE4FxyKto3WYT8ADwKPBpwmRGiu+7y3l7YScd62WSp5TN
        7L02slJ579HK7Ad8lxA1U4RRYQfyujuEPD3jMwjvLhVamV8D59WZt9aWghcDUzvrUlukXfzX
        gY/Hiy8iFbF4j9bKXECxLn4aDrjIedvyzt6Ss1Ow/U2TTamUbrOFMON/sNuO9DBjBdvmQSkN
        zxJCprrFQYTn2H1hEXCF83Z7jv4UmiQPgpSqbsMg4AihYZ7z9ie5etUArcwEYHmTw7YBlzlv
        78vfo8IzEzCCfXERZvwS9xBW+OLFb4JW5jjCZth6nnHeripaQMibwEzn7c+67UgRSPZD3A1I
        Raxuh2JFBP0BmOa8fbHbjhQBrcxY4F7gSKF5KaHqWaEEsCxe/MYkdY+nEZ7sJiIv6m0FLnbe
        eiiWACLNuZaQ+KoR85y3r9U+FHUSGJG5nxAS14h+i35RACXCebvCeXsmcDrp6zhnJIGzQBRA
        KUkioKYQKppLfLD2SxRASXHePg1cl9J8Yu2XKIBy80CK/X9BIFEA5WYDclXTLbVfogDKzeHs
        vYUMogAqw+gUexRARfiKYNsM/KX2IQqgpGhlPgxMEppuqW0LgyiAUqKVOQb4pdC0HVjY79iO
        eBTpGMlbwKXAwULzfOdtv8Wh+DKoJGhlRgIXA7ORr+vjCClzogAKTpIOZz1ykuoau4ELpXS4
        8RZQfIaSvuZfYzCwv9QQBVBwnLfbnbfjCAEgv29w6PmSMQqgJDhvlxMe+55KOUTc/BMFUCKS
        Gf4UQkKsesYlIWP9iAIoGc7bl4FVQpNCKJMbBVBOVgu23c7bHfXGKIByIlVDFbfORQGUEykv
        0GbpwCiAkpGUxTtLaBKzo0cBlI8r2fu67iGlImoUQInQypyLnC5vqfP2FfE7+boU6RRamdOA
        n7N3CNjbyLuDw/fydCqSP1qZIVqZOYTMaVJmtzmNMqTHt4EFRStzMuH17kT2Tv9WYxWhVG4q
        UQDFZSpwTpNjtvQN/5KIt4DiMpdQFaVR1dPpSX6gVKIACorz1jtvlxFGgRUphw0mvZopEAVQ
        eJK6QDMIeRIlTkyxA1EApcB5u430OICGOZ+jAMrD2hR7w7K1UQDl4ZAUexRARTgmxd4wd3IU
        QAnQypyNHBbugCcafbdIC0FTtDKHEfa7Pwnc77zd1GWfuk6yL+AbKc1rmuVQLtIIMAq4BLgU
        uBXYqJW5K8mGWWVuIywHS9zT7MtFEoDEDGC9VuYqrYxUMq60aGX218rcQaiTLLENuLlpP5l6
        1R2GEgpCr9XKTEsqZZUWrcywpELqJtKrgQFcty/l8oo0B2jGscCvgJ1amd8Bf0KOjwc5bUor
        9k59592E/98IQu7fRn1DyKv8oybHAOUSQI0hhIKJE7rrRtd4BDi3b4HoRhRRAPcRHm/ORA5/
        rjJLgOnOW6k+kEgR5wCLnLdTCUPifJqsdFWE5wn5gKYO5OIDKIXezd4jwUbg1Yyca4VhwMiU
        tgnO20dqH5K6vTcQdr8WUdDt8FvgFmCJ8zbtbWBDlEKvBD6UqVv54YAD69OcAGhlDiVEyYwH
        jiZMlqQ6OUVjNyHx8wvJz5bk3+ect5vb7Vwp9NWk15btNR5y3k7uthNlQin0IEKFrtO77UwT
        3gJGZ6H6yP/RSd6Y80nZOtQjPAucFS9+9tRXDx8LnAYcT/cfET3wIuHFz7Ik9CmSMf0EEKke
        VXtsitQRBVBxogAqThRAxYkCqDhRABXnvw2NuaitiVKPAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/tickets.png'>
        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
        CAStAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/toll booth.png'>
        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
        UjIMLEnJ+F9gqzPDTZIqcAAAAABJRU5ErkJggg==
      </shape>
      <shape name='Icons/townhouse.png'>
        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
        y+qNGH9lOOlE7zaz02b2kCJf1niiJwn9TjM7amb3a12saeKHd1eZ2ffM7KCZzcLLqHZtool+
        T0T8zMw+pMjrtuFHHXsj4jiWXvda62L9NrQ6bnD3ZwG8H3P6zaEWxl8ZrjXRt7n7L81MkSez
        rtWx392Pm9l7ociTWnN17HX3U2a2AEVu47KPOu5z95/XT2xR5HYaV8f97v6Umd3IP9Mgrfpt
        0jvd/aSZXd/BgYbqkok+5O4/UOTi3rqj3X2fmV3b6ZGG6ZLH0fqkN2V9+tGKQVNoEoUmUWgS
        hSZRaBKFJlFoEoUmUWgShSYp+vzozFwE8F0z+1PL62zB0jNTb57w/Z81szNtzlD7BICDBa5T
        /InoF6qqegHAD1te54qIuAfARKHN7MxoNDrR8gxw91vMrEhorQ4ShSZRaBKFJlFoEoUmUWgS
        hSZRaBKFJlFoEoUmUWgShSZRaBKFJlFoEoUmUWgShSZRaBKFJlFoEoUmUWgShSZRaBKFJlFo
        EoUmKf203S0R8WiBV9XclJn7WtyQ7GF339vyDABwR4FrACgcur595kd7cMe2e83s3q4PsZJW
        B4lCkyg0iUKTKDSJQpMoNIlCkyg0iUKTKDSJQpP04ZXui8vMv5vZ2QLXuanU/VoHGRrA8dFo
        dKrtReqXpzpc4DzDDG1m/wXwrwKX+l+BawDQjqZRaBKFJlFoEoUmUWgShSZRaBKFJlFoEoUm
        UWgShSZRaBKFJlFoEoUmUWgShSZRaBKFJlFoEoUmUWgShSZRaBKFJlFoEoUmGeSzSTNzF4Ab
        217HzHYUOA6AgYYG8KS7P9n2IpmJUndqGGRo68F9LC6mHU2i0CQKTaLQJApNotAkCk2i0CQK
        TaLQJApNotAkCk1S9Lt3mXnBzF4C8HLLS0Vm3m5mN5Q4Vx+U/jbpm6PR6FsAnm95nSsi4jsA
        FLpBAlgE8EbL6xiAUfvj9Id2NIlCkyg0iUKTKDSJQpMoNIlCkyg0iUKTKDSJQpMoNIlCkyg0
        iUKTKDSJQpMoNIlCkyg0iUKTKDSJQpMoNIlCkyg0iUKTKDRJ6WeThrvvrarq1ZbX2QrgmhIH
        6ovSobcC+Ip7+38oJe+V0QdFQ/fxPhl9oR1NotAkCk2i0CQKTaLQJApNotAkCk2i0CQKTaLQ
        JApNotAkCk2i0CQKTaLQJApNotAkCk2i0CQKTaLQJApNotAkCk2i0CQKTaLQJApNotAkCk2i
        0CQKTaLQJApNsvxTWW9k5rlOTzJAZvZvABWw9DIcALALwDs6O9FwLQL4J4ALXR9kbvwfHDQi
        RSG4BuUAAAAASUVORK5CYII=
      </shape>
      <shape name='Icons/train4.png'>
        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
        RK5CYII=
      </shape>
      <shape name='Icons/tshirt.png'>
        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
        t24CAGBvYhz/MDHz1eu6fH0rTC9dQI8eA44DFgJPAF8sW44Sug54MzG0/DRikI8GhEcAttGt
        2yOAKaHKdQEkDRgDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwA
        KTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJAS
        MwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTED
        QErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCk
        xAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErM
        AJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwA
        KTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJAS
        MwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTED
        QErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJASMwCkxAwAKTEDQErMAJASyxwA
        00oXoFYZKl1ACdNLF1DQEuDx0kWoNZaXLqCErAGwErgOWFS4DrXH4tIFlDA0PDxcugZJhWS+
        BiClZwBIiRkAUmIGgJSYASAlZgBIiRkAUmIGgJSYASAlZgBIiRkAUmL/A30g+dZuUjgQAAAA
        AElFTkSuQmCC
      </shape>
      <shape name='Icons/turnover.png'>
        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
      </shape>
      <shape name='Icons/two205.png'>
        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
        lNP/AKFGl5Z02aCFAAAAAElFTkSuQmCC
      </shape>
      <shape name='Icons/united-kingdom.png'>
        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
      </shape>
      <shape name='Icons/visible9.png'>
        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
      </shape>
      <shape name='Icons/writing46.png'>
        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
        KueNAAAAAElFTkSuQmCC
      </shape>
    </shapes>
  </external>
</workbook>
